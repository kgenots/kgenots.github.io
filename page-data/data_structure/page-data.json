{"componentChunkName":"component---src-templates-docs-js","path":"/data_structure","result":{"data":{"site":{"siteMetadata":{"title":"Kgenots Github Blog","docsLocation":"https://github.com/kgenots/kgenots.github.io/tree/main/content"}},"mdx":{"fields":{"id":"becc8df6-47cb-5c4d-af76-4aa2eb63f624","title":"Data Structure","slug":"/data_structure"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Data Structure\",\n  \"tags\": [\"category\"],\n  \"metaTitle\": \"Data Structure\",\n  \"metaDescription\": \"This is the meta description\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uB780?\"), mdx(\"p\", null, \"\\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uB294 \\uB370\\uC774\\uD130\\uB97C \\uC800\\uC7A5\\uD558\\uACE0 \\uAD6C\\uC131\\uD558\\uB294 \\uB370 \\uC0AC\\uC6A9\\uB418\\uB294 \\uC2A4\\uD1A0\\uB9AC\\uC9C0\\uC785\\uB2C8\\uB2E4. \\uCEF4\\uD4E8\\uD130\\uC758 \\uB370\\uC774\\uD130\\uB97C \\uD6A8\\uC728\\uC801\\uC73C\\uB85C \\uC561\\uC138\\uC2A4\\uD558\\uACE0 \\uC5C5\\uB370\\uC774\\uD2B8\\uD560 \\uC218 \\uC788\\uB3C4\\uB85D \\uBC30\\uC5F4\\uD558\\uB294 \\uBC29\\uBC95\\uC785\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uB294 \\uB370\\uC774\\uD130\\uB97C \\uAD6C\\uC131\\uD558\\uB294 \\uB370\\uB9CC \\uC0AC\\uC6A9\\uB418\\uB294 \\uAC83\\uC774 \\uC544\\uB2D9\\uB2C8\\uB2E4. \\uB370\\uC774\\uD130\\uB97C \\uCC98\\uB9AC, \\uAC80\\uC0C9 \\uBC0F \\uC800\\uC7A5\\uD558\\uB294 \\uB370\\uB3C4 \\uC0AC\\uC6A9\\uB429\\uB2C8\\uB2E4. \\uAC1C\\uBC1C\\uB41C \\uAC70\\uC758 \\uBAA8\\uB4E0 \\uD504\\uB85C\\uADF8\\uB7A8 \\uB610\\uB294 \\uC18C\\uD504\\uD2B8\\uC6E8\\uC5B4 \\uC2DC\\uC2A4\\uD15C\\uC5D0\\uC11C \\uC0AC\\uC6A9\\uB418\\uB294 \\uAE30\\uBCF8 \\uBC0F \\uACE0\\uAE09 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uAC00 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uB530\\uB77C\\uC11C \\uC6B0\\uB9AC\\uB294 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uC5D0 \\uB300\\uD55C \\uC88B\\uC740 \\uC9C0\\uC2DD\\uC744 \\uAC00\\uC9C0\\uACE0 \\uC788\\uC5B4\\uC57C \\uD569\\uB2C8\\uB2E4.\"), mdx(\"h2\", null, \"\\uB370\\uC774\\uD130 \\uAD6C\\uC870 \\uBC0F \\uC54C\\uACE0\\uB9AC\\uC998 \\uC2E4\\uC2B5\"), mdx(\"p\", null, \"Python\\uC5D0\\uC11C Educative\\uC758 \\uB300\\uD654\\uD615 \\uACFC\\uC815\\uC778 Data Structures and Algorithms\\uB97C \\uD1B5\\uD574 \\uC2E4\\uC81C \\uBB38\\uC81C\\uB97C \\uD574\\uACB0\\uD558\\uACE0 \\uBA74\\uC811 \\uC9C8\\uBB38\\uC744 \\uCF54\\uB529\\uD558\\uAE30 \\uC704\\uD55C \\uAE30\\uBCF8\\uC801\\uC778 \\uCEF4\\uD4E8\\uD130 \\uACFC\\uD559 \\uAC1C\\uB150\\uC744 \\uB9C8\\uC2A4\\uD130\\uD569\\uB2C8\\uB2E4.\"), mdx(\"h2\", null, \"\\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uC758 \\uBD84\\uB958\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC120\\uD615 \\uB370\\uC774\\uD130 \\uAD6C\\uC870: \\uB370\\uC774\\uD130 \\uC694\\uC18C\\uAC00 \\uC21C\\uCC28\\uC801\\uC73C\\uB85C \\uB610\\uB294 \\uC120\\uD615\\uC73C\\uB85C \\uBC30\\uC5F4\\uB41C \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uB85C, \\uAC01 \\uC694\\uC18C\\uAC00 \\uC774\\uC804 \\uBC0F \\uB2E4\\uC74C \\uC778\\uC811 \\uC694\\uC18C\\uC5D0 \\uBD80\\uCC29\\uB418\\uC5B4 \\uC788\\uB294 \\uAC83\\uC744 \\uC120\\uD615 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uB77C\\uACE0 \\uD569\\uB2C8\\uB2E4.\\n\\uC120\\uD615 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uC758 \\uC608\\uB85C\\uB294 \\uBC30\\uC5F4, \\uC2A4\\uD0DD, \\uB300\\uAE30\\uC5F4, \\uB9C1\\uD06C\\uB41C \\uBAA9\\uB85D \\uB4F1\\uC774 \\uC788\\uC2B5\\uB2C8\\uB2E4.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC815\\uC801 \\uB370\\uC774\\uD130 \\uAD6C\\uC870: \\uC815\\uC801 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uC5D0\\uB294 \\uACE0\\uC815\\uB41C \\uBA54\\uBAA8\\uB9AC \\uD06C\\uAE30\\uAC00 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uC815\\uC801 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uC758 \\uC694\\uC18C\\uC5D0 \\uC561\\uC138\\uC2A4\\uD558\\uB294 \\uAC83\\uC774 \\uB354 \\uC27D\\uC2B5\\uB2C8\\uB2E4.\\n\\uC774 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uC758 \\uC608\\uB85C\\uB294 \\uBC30\\uC5F4\\uC774 \\uC788\\uC2B5\\uB2C8\\uB2E4.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uB3D9\\uC801 \\uB370\\uC774\\uD130 \\uAD6C\\uC870: \\uB3D9\\uC801 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uC5D0\\uC11C\\uB294 \\uD06C\\uAE30\\uAC00 \\uACE0\\uC815\\uB418\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4. \\uCF54\\uB4DC\\uC758 \\uBA54\\uBAA8\\uB9AC(\\uACF5\\uAC04) \\uBCF5\\uC7A1\\uC131\\uACFC \\uAD00\\uB828\\uD558\\uC5EC \\uD6A8\\uC728\\uC801\\uC778 \\uAC83\\uC73C\\uB85C \\uAC04\\uC8FC\\uB420 \\uC218 \\uC788\\uB294 \\uB7F0\\uD0C0\\uC784 \\uC911\\uC5D0 \\uC784\\uC758\\uB85C \\uC5C5\\uB370\\uC774\\uD2B8\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\\n\\uC774 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uC758 \\uC608\\uB85C\\uB294 \\uD050, \\uC2A4\\uD0DD \\uB4F1\\uC774 \\uC788\\uC2B5\\uB2C8\\uB2E4.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uBE44\\uC120\\uD615 \\uB370\\uC774\\uD130 \\uAD6C\\uC870: \\uB370\\uC774\\uD130 \\uC694\\uC18C\\uAC00 \\uC21C\\uCC28\\uC801\\uC73C\\uB85C \\uB610\\uB294 \\uC120\\uD615\\uC801\\uC73C\\uB85C \\uBC30\\uCE58\\uB418\\uC9C0 \\uC54A\\uB294 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uB97C \\uBE44\\uC120\\uD615 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uB77C\\uACE0 \\uD569\\uB2C8\\uB2E4. \\uBE44\\uC120\\uD615 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uC5D0\\uC11C\\uB294 \\uD55C \\uBC88\\uC758 \\uC2E4\\uD589\\uB9CC\\uC73C\\uB85C \\uBAA8\\uB4E0 \\uC694\\uC18C\\uB97C \\uD1B5\\uACFC\\uD560 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\\n\\uBE44\\uC120\\uD615 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uC758 \\uC608\\uB85C\\uB294 \\uD2B8\\uB9AC\\uC640 \\uADF8\\uB798\\uD504\\uAC00 \\uC788\\uC2B5\\uB2C8\\uB2E4.\\n\\uC608\\uB97C \\uB4E4\\uC5B4 \\uBC30\\uC5F4 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC \\uB3D9\\uC77C\\uD55C \\uB370\\uC774\\uD130 \\uC720\\uD615\\uC758 \\uD56D\\uBAA9 \\uBAA9\\uB85D\\uC744 \\uC800\\uC7A5\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uBC30\\uC5F4 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\"))), mdx(\"p\", null, \"\\uC774 \\uD398\\uC774\\uC9C0\\uC5D0\\uB294 \\uC8FC\\uC81C\\uBCC4 \\uBB38\\uC81C\\uAC00 \\uC788\\uB294 \\uB2E4\\uC591\\uD55C \\uB370\\uC774\\uD130 \\uAD6C\\uC870(DS)\\uC5D0 \\uB300\\uD55C \\uC790\\uC138\\uD55C \\uC790\\uC2B5\\uC11C\\uAC00 \\uD3EC\\uD568\\uB418\\uC5B4 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#데이터-구조란","title":"데이터 구조란?"},{"url":"#데이터-구조-및-알고리즘-실습","title":"데이터 구조 및 알고리즘 실습"},{"url":"#데이터-구조의-분류","title":"데이터 구조의 분류"}]},"parent":{"relativePath":"data_structure.md"},"frontmatter":{"metaTitle":"Data Structure","metaDescription":"This is the meta description"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/data_structure","title":"Data Structure"}}},{"node":{"fields":{"slug":"/design_pattern","title":"Design Pattern"}}},{"node":{"fields":{"slug":"/language/javascript","title":"JavaScript"}}},{"node":{"fields":{"slug":"/language/python","title":"Python"}}},{"node":{"fields":{"slug":"/language","title":"Language"}}},{"node":{"fields":{"slug":"/language/python/python3_basic","title":"Python3 Basic"}}},{"node":{"fields":{"slug":"/design_pattern/observer_pattern","title":"옵저버 (Observer)"}}},{"node":{"fields":{"slug":"/design_pattern/decorator_pattern","title":"데코레이터 (Decorator)"}}},{"node":{"fields":{"slug":"/design_pattern/adapter_pattern","title":"어댑터 (Adapter)"}}},{"node":{"fields":{"slug":"/design_pattern/singleton_pattern","title":"싱글톤 (Singleton)"}}},{"node":{"fields":{"slug":"/data_structure/binary_search_tree","title":"이진탐색트리 (Binary Search Tree)"}}},{"node":{"fields":{"slug":"/data_structure/graph","title":"그래프 (Graph)"}}},{"node":{"fields":{"slug":"/data_structure/hashing","title":"해쉬 (Hashing)"}}},{"node":{"fields":{"slug":"/data_structure/heap","title":"힙 (Heap)"}}},{"node":{"fields":{"slug":"/data_structure/linked_list","title":"링크드리스트 (Linked List)"}}},{"node":{"fields":{"slug":"/data_structure/matrix","title":"매트릭스 (Matrix)"}}},{"node":{"fields":{"slug":"/","title":"Welcome"}}},{"node":{"fields":{"slug":"/data_structure/queue","title":"큐 (Queue)"}}},{"node":{"fields":{"slug":"/data_structure/array","title":"배열 (Array)"}}},{"node":{"fields":{"slug":"/data_structure/binary_tree","title":"이진트리 (Binary Tree)"}}},{"node":{"fields":{"slug":"/data_structure/stack","title":"Stack"}}},{"node":{"fields":{"slug":"/algorithm/brute_force_algorithm","title":"브루트포스 (BruteForce)"}}},{"node":{"fields":{"slug":"/algorithm/back_tracking_algorithm","title":"백트래킹 (Backtracking)"}}},{"node":{"fields":{"slug":"/algorithm/divide_and_conquer_algorithm","title":"분할 정복 (Divide and Conquer)"}}},{"node":{"fields":{"slug":"/algorithm/greedy_algorithm","title":"탐욕 (Greedy)"}}},{"node":{"fields":{"slug":"/algorithm/dynamic_programming","title":"동적 계획법 (Dynamic Programming)"}}},{"node":{"fields":{"slug":"/algorithm/randomize_algorithm","title":"무작위 (Randomize)"}}},{"node":{"fields":{"slug":"/algorithm/searching_algorithm","title":"탐색 (Searching)"}}},{"node":{"fields":{"slug":"/algorithm/sorting_algorithm","title":"정렬 (Sorting)"}}},{"node":{"fields":{"slug":"/algorithm/hash_algorithm","title":"해쉬 (Hashing)"}}},{"node":{"fields":{"slug":"/algorithm","title":"Algorithm"}}}]}},"pageContext":{"id":"becc8df6-47cb-5c4d-af76-4aa2eb63f624"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}