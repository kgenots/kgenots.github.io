{"componentChunkName":"component---src-templates-docs-js","path":"/algorithm","result":{"data":{"site":{"siteMetadata":{"title":"Kgenots Github Blog","docsLocation":"https://github.com/kgenots/kgenots.github.io/tree/main/content"}},"mdx":{"fields":{"id":"fe090629-1f4b-55e5-a6bf-93d11153b459","title":"Algorithm","slug":"/algorithm"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Algorithm\",\n  \"tags\": [\"category\"],\n  \"metaTitle\": \"Algorithm\",\n  \"metaDescription\": \"This is the meta description\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uC54C\\uACE0\\uB9AC\\uC998\\uC774\\uB77C\\uB294 \\uB2E8\\uC5B4\\uB294 \\\"\\uACC4\\uC0B0 \\uB610\\uB294 \\uB2E4\\uB978 \\uBB38\\uC81C \\uD574\\uACB0 \\uC791\\uC5C5\\uC5D0\\uC11C \\uB530\\uB77C\\uC57C \\uD560 \\uC77C\\uB828\\uC758 \\uADDC\\uCE59\\\" \\uB610\\uB294 \\\"\\uC7AC\\uADC0\\uC801\\uC778 \\uC791\\uC5C5\\uC744 \\uC790\\uC8FC \\uD3EC\\uD568\\uD558\\uB294 \\uC720\\uD55C\\uD55C \\uC218\\uC758 \\uB2E8\\uACC4\\uC5D0\\uC11C \\uC218\\uD559\\uC801 \\uBB38\\uC81C\\uB97C \\uD574\\uACB0\\uD558\\uAE30 \\uC704\\uD55C \\uC808\\uCC28\\\"\\uB97C \\uC758\\uBBF8\\uD569\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uB530\\uB77C\\uC11C \\uC54C\\uACE0\\uB9AC\\uC998\\uC740 \\uD2B9\\uC815 \\uBB38\\uC81C\\uB97C \\uD574\\uACB0\\uD558\\uAE30 \\uC704\\uD55C \\uC77C\\uB828\\uC758 \\uC720\\uD55C \\uB2E8\\uACC4\\uB97C \\uC758\\uBBF8\\uD569\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uC54C\\uACE0\\uB9AC\\uC998\\uC740 \\uC5EC\\uB7EC\\uBD84\\uC774 \\uC131\\uCDE8\\uD558\\uACE0\\uC790 \\uD558\\uB294 \\uAC83\\uC5D0 \\uB530\\uB77C \\uAC04\\uB2E8\\uD558\\uACE0 \\uBCF5\\uC7A1\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"parent":{"relativePath":"algorithm.md"},"frontmatter":{"metaTitle":"Algorithm","metaDescription":"This is the meta description"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/algorithm","title":"Algorithm"}}},{"node":{"fields":{"slug":"/data_structure","title":"Data Structure"}}},{"node":{"fields":{"slug":"/design_pattern","title":"Design Pattern"}}},{"node":{"fields":{"slug":"/","title":"Welcome"}}},{"node":{"fields":{"slug":"/design_pattern/adapter_pattern","title":"어댑터 (Adapter)"}}},{"node":{"fields":{"slug":"/design_pattern/decorator_pattern","title":"데코레이터 (Decorator)"}}},{"node":{"fields":{"slug":"/design_pattern/observer_pattern","title":"옵저버 (Observer)"}}},{"node":{"fields":{"slug":"/design_pattern/singleton_pattern","title":"싱글톤 (Singleton)"}}},{"node":{"fields":{"slug":"/data_structure/array","title":"배열 (Array)"}}},{"node":{"fields":{"slug":"/data_structure/binary_tree","title":"이진트리 (Binary Tree)"}}},{"node":{"fields":{"slug":"/data_structure/graph","title":"그래프 (Graph)"}}},{"node":{"fields":{"slug":"/data_structure/hashing","title":"해쉬 (Hashing)"}}},{"node":{"fields":{"slug":"/data_structure/binary_search_tree","title":"이진탐색트리 (Binary Search Tree)"}}},{"node":{"fields":{"slug":"/data_structure/linked_list","title":"링크드리스트 (Linked List)"}}},{"node":{"fields":{"slug":"/data_structure/queue","title":"큐 (Queue)"}}},{"node":{"fields":{"slug":"/data_structure/heap","title":"힙 (Heap)"}}},{"node":{"fields":{"slug":"/data_structure/stack","title":"Stack"}}},{"node":{"fields":{"slug":"/algorithm/brute_force_algorithm","title":"브루트포스 (BruteForce)"}}},{"node":{"fields":{"slug":"/data_structure/matrix","title":"매트릭스 (Matrix)"}}},{"node":{"fields":{"slug":"/algorithm/dynamic_programming","title":"동적 계획법 (Dynamic Programming)"}}},{"node":{"fields":{"slug":"/algorithm/back_tracking_algorithm","title":"백트래킹 (Backtracking)"}}},{"node":{"fields":{"slug":"/algorithm/searching_algorithm","title":"탐색 (Searching)"}}},{"node":{"fields":{"slug":"/algorithm/divide_and_conquer_algorithm","title":"분할 정복 (Divide and Conquer)"}}},{"node":{"fields":{"slug":"/algorithm/randomize_algorithm","title":"무작위 (Randomize)"}}},{"node":{"fields":{"slug":"/algorithm/sorting_algorithm","title":"정렬 (Sorting)"}}},{"node":{"fields":{"slug":"/algorithm/greedy_algorithm","title":"탐욕 (Greedy)"}}},{"node":{"fields":{"slug":"/algorithm/hash_algorithm","title":"해쉬 (Hashing)"}}}]}},"pageContext":{"id":"fe090629-1f4b-55e5-a6bf-93d11153b459"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}