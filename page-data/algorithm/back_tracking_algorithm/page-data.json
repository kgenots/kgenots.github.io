{"componentChunkName":"component---src-templates-docs-js","path":"/algorithm/back_tracking_algorithm","result":{"data":{"site":{"siteMetadata":{"title":"Kgenots Github Blog","docsLocation":"https://github.com/kgenots/kgenots.github.io/tree/main/content"}},"mdx":{"fields":{"id":"31341861-ad0b-5b1f-bc82-6dd30557a40b","title":"백트래킹 (Backtracking)","slug":"/algorithm/back_tracking_algorithm"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"백트래킹 (Backtracking)\",\n  \"tags\": [\"algorithm\"],\n  \"metaTitle\": \"백트래킹 - Backtracking*\",\n  \"metaDescription\": \"This is the meta description\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uBC31\\uD2B8\\uB798\\uD0B9 \\uC54C\\uACE0\\uB9AC\\uC998\\uC774\\uB780?\"), mdx(\"p\", null, \"\\uBC31\\uD2B8\\uB798\\uD0B9 \\uC54C\\uACE0\\uB9AC\\uC998(Backtracking Algorithm)\\uC740...\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#백트래킹-알고리즘이란","title":"백트래킹 알고리즘이란?"}]},"parent":{"relativePath":"algorithm/back_tracking_algorithm.md"},"frontmatter":{"metaTitle":"백트래킹 - Backtracking*","metaDescription":"This is the meta description"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/algorithm","title":"Algorithm"}}},{"node":{"fields":{"slug":"/data_structure","title":"Data Structure"}}},{"node":{"fields":{"slug":"/design_pattern","title":"Design Pattern"}}},{"node":{"fields":{"slug":"/","title":"Welcome"}}},{"node":{"fields":{"slug":"/design_pattern/adapter_pattern","title":"어댑터 (Adapter)"}}},{"node":{"fields":{"slug":"/design_pattern/decorator_pattern","title":"데코레이터 (Decorator)"}}},{"node":{"fields":{"slug":"/design_pattern/observer_pattern","title":"옵저버 (Observer)"}}},{"node":{"fields":{"slug":"/design_pattern/singleton_pattern","title":"싱글톤 (Singleton)"}}},{"node":{"fields":{"slug":"/data_structure/array","title":"배열 (Array)"}}},{"node":{"fields":{"slug":"/data_structure/binary_tree","title":"이진트리 (Binary Tree)"}}},{"node":{"fields":{"slug":"/data_structure/graph","title":"그래프 (Graph)"}}},{"node":{"fields":{"slug":"/data_structure/hashing","title":"해쉬 (Hashing)"}}},{"node":{"fields":{"slug":"/data_structure/binary_search_tree","title":"이진탐색트리 (Binary Search Tree)"}}},{"node":{"fields":{"slug":"/data_structure/linked_list","title":"링크드리스트 (Linked List)"}}},{"node":{"fields":{"slug":"/data_structure/queue","title":"큐 (Queue)"}}},{"node":{"fields":{"slug":"/data_structure/heap","title":"힙 (Heap)"}}},{"node":{"fields":{"slug":"/data_structure/stack","title":"Stack"}}},{"node":{"fields":{"slug":"/algorithm/brute_force_algorithm","title":"브루트포스 (BruteForce)"}}},{"node":{"fields":{"slug":"/data_structure/matrix","title":"매트릭스 (Matrix)"}}},{"node":{"fields":{"slug":"/algorithm/dynamic_programming","title":"동적 계획법 (Dynamic Programming)"}}},{"node":{"fields":{"slug":"/algorithm/back_tracking_algorithm","title":"백트래킹 (Backtracking)"}}},{"node":{"fields":{"slug":"/algorithm/searching_algorithm","title":"탐색 (Searching)"}}},{"node":{"fields":{"slug":"/algorithm/divide_and_conquer_algorithm","title":"분할 정복 (Divide and Conquer)"}}},{"node":{"fields":{"slug":"/algorithm/randomize_algorithm","title":"무작위 (Randomize)"}}},{"node":{"fields":{"slug":"/algorithm/sorting_algorithm","title":"정렬 (Sorting)"}}},{"node":{"fields":{"slug":"/algorithm/greedy_algorithm","title":"탐욕 (Greedy)"}}},{"node":{"fields":{"slug":"/algorithm/hash_algorithm","title":"해쉬 (Hashing)"}}}]}},"pageContext":{"id":"31341861-ad0b-5b1f-bc82-6dd30557a40b"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}