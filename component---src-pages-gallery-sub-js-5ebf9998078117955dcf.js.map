{"version":3,"sources":["webpack:///./src/pages/gallery-sub.js","webpack:///./src/utils/util.js"],"names":["opacity","Gallery","componentDidMount","this","draw","setInterval","canvas","refs","width","window","innerWidth","height","innerHeight","getContext","context","clearRect","lineWidth","props","lineCap","x","gutter","y","hex","float","r","g","b","test","c","substring","split","length","join","rgb","primary","beginPath","rect","random","fillStyle","fill","Math","round","background","secondary","render","ref","Component","defaultProps"],"mappings":"kLAKA,IAAIA,EAAU,EAEOC,E,0GACnBC,kBAAA,WAAqB,IAAD,OAClBC,KAAKC,OAELC,aAAY,WACV,EAAKD,SACJ,M,EAGLA,KAAA,WACE,IAAME,EAASH,KAAKI,KAAKD,OAIzB,GAHAA,EAAOE,MAAQC,OAAOC,WACtBJ,EAAOK,OAASF,OAAOG,YAEnBN,EAAOO,WAAY,CACrB,IAAMC,EAAUR,EAAOO,WAAW,MAClCC,EAAQC,UAAU,EAAG,EAAGT,EAAOE,MAAOF,EAAOK,QAE7CG,EAAQE,UAAYb,KAAKc,MAAMD,UAC/BF,EAAQI,QAAU,QAMlB,IAJA,IAAIC,EAAIhB,KAAKc,MAAMG,OACfC,EAAIlB,KAAKc,MAAMG,OARE,ECrBpB,SAAaE,EAAKC,GACrB,IAAIC,EACFC,EACAC,EAAI,EAEN,GAAI,2BAA2BC,KAAKL,GAAM,CACxC,IAAIM,EAAIN,EAAIO,UAAU,GAAGC,MAAM,IAEf,GAAZF,EAAEG,SACJH,EAAI,CAACA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAGvCJ,GADAI,EAAI,KAAOA,EAAEI,KAAK,MACR,GAAM,IAChBP,EAAKG,GAAK,EAAK,IACfF,EAAQ,IAAJE,EAGN,OAAIL,EACK,CACLC,EAAGA,EAAI,IACPC,EAAGA,EAAI,IACPC,EAAGA,EAAI,KAGF,CACLF,IACAC,IACAC,KDGkBO,CAAI9B,KAAKc,MAAMiB,SAA3BV,EATa,EASbA,EAAGC,EATU,EASVA,EAAGC,EATO,EASPA,EAENP,EAAIb,EAAOE,MAAOW,GAAKhB,KAAKc,MAAMT,MAAQL,KAAKc,MAAMG,OAAQ,CACnE,KAAQC,EAAIf,EAAOK,OAAQU,GAAKlB,KAAKc,MAAMN,OAASR,KAAKc,MAAMG,OAC7DN,EAAQqB,YACRrB,EAAQsB,KAAKjB,EAAGE,EAAGlB,KAAKc,MAAMT,MAAOL,KAAKc,MAAMN,QAE5CR,KAAKc,MAAMoB,OACblC,KAAKkC,OAAOvB,KAEZd,GAAW,IAEG,IACZA,EAAU,GAGZc,EAAQwB,UACN,QAAUd,EAAI,KAAOC,EAAI,KAAOC,EAAI,KAAO1B,EAAU,KAGzDc,EAAQyB,OAGVlB,EAAIlB,KAAKc,MAAMG,U,EAKrBiB,OAAA,SAAOvB,GACL,OAAQ0B,KAAKC,MAAsB,EAAhBD,KAAKH,SAAe,IACrC,KAAK,EACHvB,EAAQwB,UAAYnC,KAAKc,MAAMyB,WAC/B,MACF,KAAK,EACH5B,EAAQwB,UAAYnC,KAAKc,MAAMiB,QAC/B,MACF,QACEpB,EAAQwB,UAAYnC,KAAKc,MAAM0B,Y,EAKrCC,OAAA,WACE,OACE,4BAAQC,IAAI,Y,GAnEmBC,aAmFrC7C,EAAQ8C,aAAe,CACrB/B,UAAW,EACXR,MAAO,EACPG,OAAQ,EACRS,OAAQ,EACRsB,WAAW,UACXR,QAAQ,UACRS,UAAU,UACVN,QAAQ","file":"component---src-pages-gallery-sub-js-5ebf9998078117955dcf.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport { rgb } from \"../utils/util\"\r\n\r\nlet opacity = 0\r\n\r\nexport default class Gallery extends Component {\r\n  componentDidMount() {\r\n    this.draw()\r\n\r\n    setInterval(() => {\r\n      this.draw()\r\n    }, 300)\r\n  }\r\n\r\n  draw() {\r\n    const canvas = this.refs.canvas\r\n    canvas.width = window.innerWidth\r\n    canvas.height = window.innerHeight\r\n    \r\n    if (canvas.getContext) {\r\n      const context = canvas.getContext(\"2d\")\r\n      context.clearRect(0, 0, canvas.width, canvas.height)\r\n\r\n      context.lineWidth = this.props.lineWidth\r\n      context.lineCap = \"round\"\r\n\r\n      let x = this.props.gutter\r\n      let y = this.props.gutter\r\n      const { r, g, b } = rgb(this.props.primary)\r\n\r\n      for (x; x < canvas.width; x += this.props.width + this.props.gutter) {\r\n        for (y; y < canvas.height; y += this.props.height + this.props.gutter) {\r\n          context.beginPath()\r\n          context.rect(x, y, this.props.width, this.props.height)\r\n\r\n          if (this.props.random) {\r\n            this.random(context)\r\n          } else {\r\n            opacity += 0.1\r\n\r\n            if (opacity > 1) {\r\n              opacity = 0\r\n            }\r\n\r\n            context.fillStyle =\r\n              \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + opacity + \")\"\r\n          }\r\n\r\n          context.fill()\r\n        }\r\n\r\n        y = this.props.gutter\r\n      }\r\n    }\r\n  }\r\n\r\n  random(context) {\r\n    switch (Math.round(Math.random() * 2 + 1)) {\r\n      case 3:\r\n        context.fillStyle = this.props.background\r\n        break\r\n      case 2:\r\n        context.fillStyle = this.props.primary\r\n        break\r\n      default:\r\n        context.fillStyle = this.props.secondary\r\n        break\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <canvas ref=\"canvas\" />\r\n    )\r\n  }\r\n}\r\n\r\nGallery.propTypes = {\r\n  lineWidth: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n  gutter: PropTypes.number,\r\n  background: PropTypes.string.isRequired,\r\n  primary: PropTypes.string.isRequired,\r\n  secondary: PropTypes.string.isRequired,\r\n  random: PropTypes.bool,\r\n}\r\n\r\nGallery.defaultProps = {\r\n  lineWidth: 2,\r\n  width: 8,\r\n  height: 8,\r\n  gutter: 8,\r\n  background:'#ff0000',\r\n  primary:'#00ff00',\r\n  secondary:'#0000ff',\r\n  random: true,\r\n}","export function rgb(hex, float) {\r\n    let r,\r\n      g,\r\n      b = 0\r\n  \r\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n      let c = hex.substring(1).split(\"\")\r\n  \r\n      if (c.length == 3) {\r\n        c = [c[0], c[0], c[1], c[1], c[2], c[2]]\r\n      }\r\n      c = \"0x\" + c.join(\"\")\r\n      r = (c >> 16) & 255\r\n      g = (c >> 8) & 255\r\n      b = c & 255\r\n    }\r\n  \r\n    if (float) {\r\n      return {\r\n        r: r / 255,\r\n        g: g / 255,\r\n        b: b / 255\r\n      }\r\n    } else {\r\n      return {\r\n        r,\r\n        g,\r\n        b\r\n      }\r\n    }\r\n  }"],"sourceRoot":""}