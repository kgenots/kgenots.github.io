{"version":3,"sources":["webpack:///./src/pages/gallery.js"],"names":["data","location","console","log","siteMetadata","site","countOfInitialPost","configs","posts","allMarkdownRemark","edges","useMemo","map","node","frontmatter","category","useRenderedCount","countRef","increaseCount","useCategory","useIntersectionObserver","useScrollEvent","currentPos","window","scrollY","innerHeight","isTriggerPos","Dom","getDistance","EventManager","dismissCondition","triggerCondition","length","current","title","HOME_TITLE","keywords"],"mappings":"6RAsBe,sBAAyB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACtBC,QAAQC,IAAIH,EAAMC,GADmB,IAG7BG,EAAiBJ,EAAKK,KAAtBD,aACAE,EAAuBF,EAAaG,QAApCD,mBACFE,EAAQR,EAAKS,kBAAkBC,MALA,GAMlBC,mBACjB,kBAAM,IAAOH,EAAMI,KAAI,qBAAGC,KAAgBC,YAAYC,eACtD,IAEuCC,eAA3BC,GAVuB,WAUbC,EAVa,OAWFC,cAXE,UA0BrC,OAbAC,cACAC,aAAe,WACb,IAAMC,EAAaC,OAAOC,QAAUD,OAAOE,YACrCC,EAAe,kBApBzB,SAAqBJ,GACnB,OAAOK,MAA0BL,EAmBJM,CAAYN,GAtBzB,IA0Bd,OAAOO,IAAmBX,EAAe,CACvCY,iBAAkB,kBAAOJ,KACzBK,iBAAkB,kBAAML,KAJxBlB,EAAMwB,OAASf,EAASgB,QAAU3B,IAE7BuB,MAOP,kBAAC,IAAD,CAAQ5B,SAAUA,EAAUiC,MAAO9B,EAAa8B,OAC9C,kBAAC,IAAD,CAAMA,MAAOC,IAAYC,SAAUhC,EAAagC","file":"component---src-pages-gallery-js-84a54ab5fa80a8ad8974.js","sourcesContent":["import { graphql } from 'gatsby'\r\nimport _ from 'lodash'\r\nimport React, { useMemo } from 'react'\r\nimport { Bio } from '../components/bio'\r\nimport { Category } from '../components/category'\r\nimport { Contents } from '../components/contents'\r\nimport { Head } from '../components/head'\r\nimport { HOME_TITLE } from '../constants'\r\nimport { useCategory } from '../hooks/useCategory'\r\nimport { useIntersectionObserver } from '../hooks/useIntersectionObserver'\r\nimport { useRenderedCount } from '../hooks/useRenderedCount'\r\nimport { useScrollEvent } from '../hooks/useScrollEvent'\r\nimport { Layout } from '../layout'\r\nimport * as Dom from '../utils/dom'\r\nimport * as EventManager from '../utils/event-manager'\r\n\r\nconst BASE_LINE = 80\r\n\r\nfunction getDistance(currentPos) {\r\n  return Dom.getDocumentHeight() - currentPos\r\n}\r\n\r\nexport default ({ data, location }) => {\r\n  console.log(data, location);\r\n\r\n  const { siteMetadata } = data.site\r\n  const { countOfInitialPost } = siteMetadata.configs\r\n  const posts = data.allMarkdownRemark.edges\r\n  const categories = useMemo(\r\n    () => _.uniq(posts.map(({ node }) => node.frontmatter.category)),\r\n    []\r\n  )\r\n  const [count, countRef, increaseCount] = useRenderedCount()\r\n  const [category, selectCategory] = useCategory()\r\n\r\n  useIntersectionObserver()\r\n  useScrollEvent(() => {\r\n    const currentPos = window.scrollY + window.innerHeight\r\n    const isTriggerPos = () => getDistance(currentPos) < BASE_LINE\r\n    const doesNeedMore = () =>\r\n      posts.length > countRef.current * countOfInitialPost\r\n\r\n    return EventManager.toFit(increaseCount, {\r\n      dismissCondition: () => !isTriggerPos(),\r\n      triggerCondition: () => isTriggerPos() && doesNeedMore(),\r\n    })()\r\n  })\r\n\r\n  return (\r\n    <Layout location={location} title={siteMetadata.title}>\r\n      <Head title={HOME_TITLE} keywords={siteMetadata.keywords} />\r\n      {/* <Bio /> */}\r\n      {/* <Category\r\n        categories={categories}\r\n        category={category}\r\n        selectCategory={selectCategory}\r\n      />\r\n      <Contents\r\n        posts={posts}\r\n        countOfInitialPost={countOfInitialPost}\r\n        count={count}\r\n        category={category}\r\n      /> */}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        configs {\r\n          countOfInitialPost\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { category: { ne: null }, draft: { eq: false } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 200, truncate: true)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            category\r\n            draft\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}