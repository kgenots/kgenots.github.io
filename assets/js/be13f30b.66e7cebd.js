"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[50754],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=d(n),g=o,f=u["".concat(l,".").concat(g)]||u[g]||s[g]||i;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var d=2;d<i;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},23280:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>c,metadata:()=>d,toc:()=>s});n(67294);var r=n(3905);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const c={title:"Recording",description:"Control recordings in a meeting.",sidebar_position:9,tags:["flutter-core","recording"]},l="Recording",d={unversionedId:"recording",id:"recording",title:"Recording",description:"Control recordings in a meeting.",source:"@site/docs/flutter-core/recording.mdx",sourceDirName:".",slug:"/recording",permalink:"/flutter-core/recording",draft:!1,editUrl:"https://github.com/dyte-in/docs/tree/main/docs/flutter-core/recording.mdx",tags:[{label:"flutter-core",permalink:"/flutter-core/tags/flutter-core"},{label:"recording",permalink:"/flutter-core/tags/recording"}],version:"current",lastUpdatedAt:1692164292,formattedLastUpdatedAt:"Aug 16, 2023",sidebarPosition:9,frontMatter:{title:"Recording",description:"Control recordings in a meeting.",sidebar_position:9,tags:["flutter-core","recording"]},sidebar:"tutorialSidebar",previous:{title:"Voting on a poll",permalink:"/flutter-core/polls/voting-on-a-poll"}},p={},s=[{value:"Start a recording",id:"start-a-recording",level:2},{value:"Stop a recording",id:"stop-a-recording",level:2},{value:"Listen to recording state changes",id:"listen-to-recording-state-changes",level:2}],u={toc:s};function g(e){var{components:t}=e,n=a(e,["components"]);return(0,r.kt)("wrapper",i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"recording"},"Recording"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"dyteClient.recording")," object can be used start and stop recordings in a\nmeeting."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"dyteClient.recording")," object has the following properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"recordingState: ",(0,r.kt)("inlineCode",{parentName:"li"},"DyteRecordingState"),", Indicates the current recording\nstate of the meeting.")),(0,r.kt)("p",null,"To listen recording status updates, you need to listen for\n",(0,r.kt)("inlineCode",{parentName:"p"},"onMeetingRecordingStateUpdated()")," event. This returns ",(0,r.kt)("inlineCode",{parentName:"p"},"DyteRecordingState"),"\nobject with it."),(0,r.kt)("p",null,"There can be 4 states:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"idle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"starting")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"recording")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stopping"))),(0,r.kt)("h2",{id:"start-a-recording"},"Start a recording"),(0,r.kt)("p",null,"To start a recording, you need to call the ",(0,r.kt)("inlineCode",{parentName:"p"},"start()")," method in the\n",(0,r.kt)("inlineCode",{parentName:"p"},"dyteClient.recording")," object, as shown below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"dyteClient.recording.start();\n")),(0,r.kt)("h2",{id:"stop-a-recording"},"Stop a recording"),(0,r.kt)("p",null,"To stop a recording, you need to call the ",(0,r.kt)("inlineCode",{parentName:"p"},"stop()")," method in the\n",(0,r.kt)("inlineCode",{parentName:"p"},"dyteClient.recording")," object, as shown below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"dyteClient.recording.stop();\n")),(0,r.kt)("h2",{id:"listen-to-recording-state-changes"},"Listen to recording state changes"),(0,r.kt)("p",null,"The changes to recording state can be listened by implementing\n",(0,r.kt)("inlineCode",{parentName:"p"},"onMeetingRecordingStateUpdated")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"DyteMeetingRoomEventsListener"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"\nclass RecordingListener with DyteRecordingEventsListener {\n\n  @override\n  void onMeetingRecordingStarted() {\n    /// Handle starting of recording\n  }\n\n  @override\n  void onMeetingRecordingStateUpdated(DyteRecordingState recordingState) {\n    /// Handle status update of recording\n  }\n\n   @override\n  void onMeetingRecordingEnded() {\n    /// Handle recording ended\n  }\n\n  @override\n  void onMeetingRecordingStopError() {\n    /// Handle recording error\n  }\n\n}\n\n")),(0,r.kt)("p",null,"You can subscribe to this events by ",(0,r.kt)("inlineCode",{parentName:"p"},"addRecordingListener")," method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"dyteClient.addRecordingListener(RecordingListener());\n")))}g.isMDXComponent=!0}}]);