"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[80525],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>u});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=c(r),u=n,g=m["".concat(l,".").concat(u)]||m[u]||p[u]||i;return r?a.createElement(g,o(o({ref:t},d),{},{components:r})):a.createElement(g,o({ref:t},d))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},97739:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>p});r(67294);var a=r(3905);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}const s={title:"Interactive Recordings with Timed Metadata",sidebar_position:11},l=void 0,c={unversionedId:"projects/recording/interactive-recording",id:"projects/recording/interactive-recording",title:"Interactive Recordings with Timed Metadata",description:"Dyte's interactive recording feature allows you to add timed metadata to your video stream. Timed metadata serves as cue points for clients to display information and trigger time-aligned actions. The metadata is available to clients in the form of ID3 tags on the playback timeline.",source:"@site/docs/develop/projects/recording/interactive-recording.mdx",sourceDirName:"projects/recording",slug:"/projects/recording/interactive-recording",permalink:"/develop/projects/recording/interactive-recording",draft:!1,editUrl:"https://github.com/kgenots/kgenots-web/tree/main/docs/develop/projects/recording/interactive-recording.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"Interactive Recordings with Timed Metadata",sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Publish Recorded File to Your Cloud Provider",permalink:"/develop/projects/recording/custom-cloud-storage"},next:{title:"Create Custom Recording App Using Recording SDKs",permalink:"/develop/projects/recording/create-record-app-using-sdks"}},d={},p=[{value:"What is interactive recording?",id:"what-is-interactive-recording",level:2},{value:"Benefits of interactive recording",id:"benefits-of-interactive-recording",level:2},{value:"Add interactivity to your Dyte recordings",id:"add-interactivity-to-your-dyte-recordings",level:2}],m={toc:p};function u(e){var{components:t}=e,r=o(e,["components"]);return(0,a.kt)("wrapper",i(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),a.forEach((function(t){n(e,t,r[t])}))}return e}({},m,r),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Dyte's interactive recording feature allows you to add timed metadata to your video stream. Timed metadata serves as cue points for clients to display information and trigger time-aligned actions. The metadata is available to clients in the form of ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/ID3"},"ID3")," tags on the playback timeline."),(0,a.kt)("h2",{id:"what-is-interactive-recording"},"What is interactive recording?"),(0,a.kt)("p",null,"Ever wondered how Netflix displays small images on the seek bar or how additional content is shown while watching a cricket match on Hotstar? It's all metadata inserted at a specific time inside the video feed itself, which is called timed metadata."),(0,a.kt)("p",null,"Timed metadata is metadata with timestamps. It refers to digital markers added to a video file to provide additional context and information at specific points in the content range. These data points can be inserted into a stream programmatically, using the ",(0,a.kt)("inlineCode",{parentName:"p"},"interactive_config")," in the ",(0,a.kt)("a",{parentName:"p",href:"/api#/operations/start_recording"},"Start recording a meeting API"),"."),(0,a.kt)("p",null,"Once Dyte processes the stream, the timed metadata gets synchronized with the audio and video frames. This metadata is available to all viewers during playback at the same time relative to the stream. The timecode acts as a cue point and can trigger specific actions based on the data. For example:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Update player statistics in a sports stream"),(0,a.kt)("li",{parentName:"ul"},"Send price details during a live shopping stream"),(0,a.kt)("li",{parentName:"ul"},"Send quizzes for a live quiz stream"),(0,a.kt)("li",{parentName:"ul"},"Add poll for an online class stream"),(0,a.kt)("li",{parentName:"ul"},"Display scratch cards, spin the wheel, and slot machine for an online promotion stream")),(0,a.kt)("p",null,"These features are made possible through the use of ID3 tags that are embedded in the video segments, making them available in the recorded video."),(0,a.kt)("h2",{id:"benefits-of-interactive-recording"},"Benefits of interactive recording"),(0,a.kt)("p",null,"Interactive recording offers several benefits, including:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Enabling developers to create engaging user experiences without interrupting video playback."),(0,a.kt)("li",{parentName:"ul"},"Allowing viewers to interact with the content without disrupting the flow of the video, resulting in a seamless and engaging experience.\nTaking traditional video recordings to the next level by adding interactivity to keep viewers engaged. While linear video recordings only allow for basic interactions like playing, pausing, and replaying, interactive recordings can include multiple interactive elements.")),(0,a.kt)("h2",{id:"add-interactivity-to-your-dyte-recordings"},"Add interactivity to your Dyte recordings"),(0,a.kt)("p",null,"To add interactivity to your Dyte recording, perform the following steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"In the ",(0,a.kt)("a",{parentName:"li",href:"/api#/operations/start_recording"},"Start recording a meeting API"),", pass the ",(0,a.kt)("inlineCode",{parentName:"li"},"interactive_config")," parameter.")),(0,a.kt)("p",null,"This parameter enables you to add timed metadata to your recordings, which is made available to clients in HLS format via ID3 tags. The output files are packaged as a tar file."),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"In ",(0,a.kt)("a",{parentName:"li",href:"/web-core/reference/DyteClient"},"DyteClient"),", call the ",(0,a.kt)("inlineCode",{parentName:"li"},"broadcastMessage")," method with the parameters, ",(0,a.kt)("inlineCode",{parentName:"li"},"ID3")," (as a string) and ",(0,a.kt)("inlineCode",{parentName:"li"},"yourData")," (the data you want to send as timed metadata) on the ",(0,a.kt)("a",{parentName:"li",href:"/web-core/reference/DyteClient#module_DyteClient+participants"},"participants")," object.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"client.participants.broadcastMessage(\u201cID3Data\u201d, yourData);\n")),(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This action should only be performed after the recording has been initiated and the system is in the ",(0,a.kt)("inlineCode",{parentName:"p"},"RECORDING")," state. If performed earlier, any associated ID3 tags may be lost."),(0,a.kt)("p",{parentName:"admonition"},"The recommended time to perform this action is after the recording indicator has been displayed for 3 to 4 seconds.")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"To stop sending the data, call the following method. Once you make this call, you will no longer be able to send additional ID3 data.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"client.participants.broadcastMessage(\u201cID3Data\u201d,\u201dCLOSE_TRANSPORT\u201d)\n")),(0,a.kt)("p",null,"If you do not pass this parameter, the ID3 metadata stream will automatically be closed when the recording is stopped."),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Once the recording is completed, you can retrieve the tar file that contains video segments and a playlist file. The ",(0,a.kt)("inlineCode",{parentName:"li"},"download_url")," provides the link to the tar file. Below is an example screenshot of a tar file:")),(0,a.kt)("img",{src:"/static/develop/tar-format.png",width:"400",height:"300",alt:"interactive-record-tar",className:"interactive-record-tar-file"}),(0,a.kt)("p",null,"It's also important to note that the length of each segment depends on the frames of the video. Therefore, each segment may not have the same length, although it is typically close to the specified segment length when the recording was started. By default, the segment length is set to 10 seconds."),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"You can play the stream using the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/video-dev/hls.js/"},(0,a.kt)("inlineCode",{parentName:"a"},"hls.js")),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const onFragChanged = (_) => {\n  // We first try to find the right metadata track.\n  // https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  const textTrackListCount = videoEl.textTracks.length;\n  let metaTextTrack;\n  for (let trackIndex = 0; trackIndex < textTrackListCount; trackIndex++) {\n    const textTrack = videoEl.textTracks[trackIndex];\n    if (textTrack.kind !== 'metadata') {\n      continue;\n    }\n    textTrack.mode = 'showing';\n    metaTextTrack = textTrack;\n    break;\n  }\n  if (!metaTextTrack) {\n    return;\n  }\n  // Add an oncuechange listener on that track.\n  metaTextTrack.oncuechange = (event) => {\n    let cue = metaTextTrack.activeCues[metaTextTrack.activeCues.length - 1];\n    console.log(cue.value.data);\n  };\n};\n// listen on Hls.Events.FRAG_CHANGED from hls.js\nhls.on(Hls.Events.FRAG_CHANGED, onFragChanged);\n")))}u.isMDXComponent=!0}}]);