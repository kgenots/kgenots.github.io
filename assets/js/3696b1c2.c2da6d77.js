"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[30545],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),h=i,m=d["".concat(s,".").concat(h)]||d[h]||c[h]||o;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},65090:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>p,toc:()=>c});n(67294);var r=n(3905);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}const l={sidebar_position:1,slug:"/"},s="Quickstart",p={unversionedId:"quickstart",id:"quickstart",title:"Quickstart",description:"This quickstart shows how to use Dyte's iOS UI Kit SDK to add live video and",source:"@site/docs/ios/quickstart.mdx",sourceDirName:".",slug:"/",permalink:"/ios/",draft:!1,editUrl:"https://github.com/dyte-in/docs/tree/main/docs/ios/quickstart.mdx",tags:[],version:"current",lastUpdatedAt:1692164292,formattedLastUpdatedAt:"Aug 16, 2023",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/"},sidebar:"tutorialSidebar",next:{title:"Events",permalink:"/ios/events"}},u={},c=[{value:"Objective",id:"objective",level:2},{value:"Before Getting Started",id:"before-getting-started",level:2},{value:"Step 1: Install the SDK",id:"step-1-install-the-sdk",level:2},{value:"Step 2 (Optional): Initialize the SDK",id:"step-2-optional-initialize-the-sdk",level:2},{value:"Step 3: Configure a Dyte meeting and Launch UI",id:"step-3-configure-a-dyte-meeting-and-launch-ui",level:2}],d={toc:c};function h(e){var{components:t}=e,l=a(e,["components"]);return(0,r.kt)("wrapper",o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){i(e,t,n[t])}))}return e}({},d,l),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quickstart"},"Quickstart"),(0,r.kt)("p",null,"This quickstart shows how to use Dyte's iOS UI Kit SDK to add live video and\naudio to your iOS applications."),(0,r.kt)("p",null,"For getting started quickly, you can use our sample code. You can clone and run\na sample application from the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/dyte-io/mobile-samples/tree/main/iOS-ui-kit"},"iOS UI Kit Sample App GitHub repository"),"."),(0,r.kt)("h2",{id:"objective"},"Objective"),(0,r.kt)("p",null,"You\u2019ll learn how to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install the Dyte SDK"),(0,r.kt)("li",{parentName:"ul"},"Initialize the SDK"),(0,r.kt)("li",{parentName:"ul"},"Configure a Dyte meeting"),(0,r.kt)("li",{parentName:"ul"},"Launch the meeting UI")),(0,r.kt)("h2",{id:"before-getting-started"},"Before Getting Started"),(0,r.kt)("p",null,"Make sure you've read the\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.dyte.io/getting-started"},"Getting Started with Dyte")," topic and\ncompleted the steps in the\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.dyte.io/getting-started#integrate-dyte"},"Integrate Dyte")," section.\nYou must complete the following steps:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create a ",(0,r.kt)("a",{parentName:"li",href:"https://dev.dyte.io/"},"Dyte Developer Account")),(0,r.kt)("li",{parentName:"ul"},"Create ",(0,r.kt)("a",{parentName:"li",href:"https://dev.dyte.io/roles-presets"},"Presets")),(0,r.kt)("li",{parentName:"ul"},"Create a\n",(0,r.kt)("a",{parentName:"li",href:"https://docs.dyte.io/api/?v=v2#/operations/create_meeting"},"Dyte Meeting")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.dyte.io/api/?v=v2#/operations/add_participant"},"Add Participant"),"\nto the meeting and generate authentication token which is used to join Meeting\ncreated above.")),(0,r.kt)("h2",{id:"step-1-install-the-sdk"},"Step 1: Install the SDK"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Add the following line to your ",(0,r.kt)("inlineCode",{parentName:"li"},"Podfile"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"pod 'DyteUiKit'\n")),(0,r.kt)("p",null,"OR for specific version:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"\npod 'DyteUiKit', '0.3.5'\n\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Install the client SDK as CocoaPods dependency")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"pod install\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Add the fonts and permission entries in ",(0,r.kt)("inlineCode",{parentName:"li"},"info.plist")," - the strings are\ndisplayed in the permission pop-ups, feel free to customize them to suit your\naudience")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<key>NSBluetoothPeripheralUsageDescription</key>\n<string>We will use your Bluetooth to access your Bluetooth headphones.</string>\n<key>NSBluetoothAlwaysUsageDescription</key>\n<string>We will use your Bluetooth to access your Bluetooth headphones.</string>\n<key>NSCameraUsageDescription</key>\n<string>For people to see you during meetings, we need access to your camera.</string>\n<key>NSMicrophoneUsageDescription</key>\n<string>For people to hear you during meetings, we need access to your microphone.</string>\n<key>NSPhotoLibraryUsageDescription</key>\n<string>For people to share, we need access to your photos.</string>\n")),(0,r.kt)("h2",{id:"step-2-optional-initialize-the-sdk"},"Step 2 (Optional): Initialize the SDK"),(0,r.kt)("p",null,"Initialization depends on three classes ",(0,r.kt)("inlineCode",{parentName:"p"},"DesignLibrary"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"AppTheme")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"SetupViewController"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"SetupViewController")," is the only required class to get\ninitialise by client of ",(0,r.kt)("inlineCode",{parentName:"p"},"DyteUikit")," to launch GUI as well initialization of SDK\nwith Authentication token."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DesignLibrary")," is the singleton class which is depend on protocol\n",(0,r.kt)("inlineCode",{parentName:"li"},"DesignLibraryConfiguratorProtocol")," responsible for initializing the\ncomponent from right parameters for eg. Border size, Radius, Background color\nof inidividual and composite components.")),(0,r.kt)("p",null,"You can customise the ",(0,r.kt)("inlineCode",{parentName:"p"},"DesignLibrary")," by setting any object which is confirm to\n'DesignLibraryConfiguratorProtocol'"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'// create an type which confirms to  DesignLibraryConfiguratorProtocol\nclass DesignLibraryConfigurator: DesignLibraryConfiguratorProtocol {\n\n    public let colorBackgroundBase: UIColor = UIColor(hex: "#050505")!\n    public let colorBrandBase: UIColor = UIColor(hex: "#0246FD")!\n\n    public let textColorBackgroundBase: UIColor = UIColor(hex: "#FFFFFF")!\n    public let textColorBrandBase: UIColor = UIColor(hex: "#111111")!\n\n    public let statusDangerColor: UIColor = UIColor(hex: "#FF2D2D")!\n    public let statusSuccessColor: UIColor = UIColor(hex: "#83D017")!\n    public let statusWarningColor: UIColor = UIColor(hex: "#FFCD07")!\n\n    public let cornerRadiusRoundFactor: CGFloat = 4.0\n    public let cornerRadiusExtraRoundFactor: CGFloat = 8.0\n    public let cornerRadiusCircularFactor: CGFloat = 8.0\n\n    public let borderSizeThinFactor: CGFloat =  1.0\n    public let borderSizeFatFactor: CGFloat = 2.0\n\n}\n\n//You can initialise DesignLibrary with below command\nDesignLibrary.shared.setConfigurator(configurator: DesignLibraryConfigurator())\n\n')),(0,r.kt)("p",null,"DesignLibrary is having default value of all the above component which SDK\ninitialize them internally."),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"AppTheme")," is the singleton class which is depend on protocol\n",(0,r.kt)("inlineCode",{parentName:"li"},"AppThemeProtocol")," responsible for for setting corner radius and border size\nwidht for various component used inside by DyteUiKit.")),(0,r.kt)("p",null,"You can customise the ",(0,r.kt)("inlineCode",{parentName:"p"},"DesigAppThemenLibrary")," by setting any object which is\nconfirm to 'AppThemeProtocol'."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"class AppThemeConfigurator: AppThemeProtocol {\n    private let cornerRadiusType: CornerRadius.RadiusType? = .rounded\n    private let borderSizeWidthType: BorderSize.Width? = .thin\n\n    var cornerRadiusTypeButton: CornerRadius.RadiusType? {\n        get {\n            return cornerRadiusType\n        }\n    }\n\n    var cornerRadiusTypePaginationView: CornerRadius.RadiusType? {\n        get {\n            return cornerRadiusType\n        }\n    }\n\n    var cornerRadiusTypePeerView: CornerRadius.RadiusType? {\n        get {\n            return cornerRadiusType\n        }\n    }\n\n    var cornerRadiusTypeDropDown: CornerRadius.RadiusType? {\n        get {\n            return cornerRadiusType\n        }\n    }\n\n    var cornerRadiusTypeNameTag: CornerRadius.RadiusType? {\n        get {\n            return cornerRadiusType\n        }\n    }\n\n    var cornerRadiusTypeNameTextField: CornerRadius.RadiusType? {\n        get {\n            return cornerRadiusType\n        }\n    }\n\n    var cornerRadiusTypeCreateView: CornerRadius.RadiusType? {\n        get {\n            return cornerRadiusType\n        }\n    }\n\n    var borderSizeWidthTypeTextField: BorderSize.Width? {\n        get {\n            return borderSizeWidthType\n        }\n    }\n\n    var borderSizeWidthTypeButton: BorderSize.Width? {\n        get {\n            return borderSizeWidthType\n        }\n    }\n\n    var borderSizeWidthTypeDropDown: BorderSize.Width? {\n        get {\n            return borderSizeWidthType\n        }\n    }\n}\n\n//You can initialise AppTheme with below command\n  AppTheme.shared.setUp(theme: AppThemeConfigurator())\n\n")),(0,r.kt)("h2",{id:"step-3-configure-a-dyte-meeting-and-launch-ui"},"Step 3: Configure a Dyte meeting and Launch UI"),(0,r.kt)("p",null,"To set the initialization properties in the ",(0,r.kt)("inlineCode",{parentName:"p"},"DyteUiKit")," class, simply initialize ",(0,r.kt)("inlineCode",{parentName:"p"},"DyteMeetingInfoV2")," and provide the participant's ",(0,r.kt)("inlineCode",{parentName:"p"},"authToken"),"."),(0,r.kt)("p",null,"Try this in ",(0,r.kt)("inlineCode",{parentName:"p"},"viewDidAppear()")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"authToken")),(0,r.kt)("td",{parentName:"tr",align:null},"After you've created the meeting, ",(0,r.kt)("br",null)," add each participant to the meeting ",(0,r.kt)("br",null)," using the ",(0,r.kt)("a",{parentName:"td",href:"https://docs.dyte.io/api?v=v2#/operations/add_participant"},"Add Participant API"),(0,r.kt)("br",null)," (The presetName created earlier ",(0,r.kt)("br",null)," must be passed in the body ",(0,r.kt)("br",null)," of the Add Participant API request) ",(0,r.kt)("br",null)," The API response contains the ",(0,r.kt)("inlineCode",{parentName:"td"},"authToken"),".")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"import DyteUiKit\nimport DyteiOSCore\n\nclass ViewController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n    }\n    var dyteUikit: DyteUiKit!\n\n   override func viewDidAppear(_ animated: Bool) {\n        super.viewDidAppear(animated)\n        dyteUikit = DyteUiKit(meetingInfoV2: DyteMeetingInfoV2(authToken: authToken, enableAudio: true, enableVideo: true, baseUrl: Constants.BASE_URL))\n        let controller = dyteUikit.startMeeting {\n            [weak self] in\n            guard let self = self else {return}\n            self.dismiss(animated: true)\n        }\n        controller.modalPresentationStyle = .fullScreen\n        self.present(controller, animated: true)\n    }\n}\n")),(0,r.kt)("p",null,"Here is a pictorial representation of all the config options defined below."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"meeting UI screenshot with labeled parts",src:n(93822).Z,width:"263",height:"570"}),"\n",(0,r.kt)("img",{alt:"meeting UI screenshot with labeled parts",src:n(53273).Z,width:"263",height:"570"}),"\n",(0,r.kt)("img",{alt:"meeting UI screenshot with labeled parts",src:n(25569).Z,width:"263",height:"570"})))}h.isMDXComponent=!0},25569:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/meeting-options-854b9fb6f07cc7651852a908da6911a0.png"},93822:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/meeting-setup-c929316cccbe4e4c20fc788089944c8d.png"},53273:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/meeting-f87fb23ca48665e51c4d92b2b097e68d.png"}}]);