"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[28172],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||i;return n?a.createElement(h,r(r({ref:t},d),{},{components:n})):a.createElement(h,r({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},53082:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>c});n(67294);var a=n(3905);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const l={title:"Export Chat Dump of a Session",sidebar_position:8},s="Export Chat Dump of a Session",p={unversionedId:"capabilities/export-chat-dump",id:"capabilities/export-chat-dump",title:"Export Chat Dump of a Session",description:"You can programmatically retrieve all chat messages of a Dyte session in the following ways:",source:"@site/docs/guides/capabilities/export-chat-dump.mdx",sourceDirName:"capabilities",slug:"/capabilities/export-chat-dump",permalink:"/guides/capabilities/export-chat-dump",draft:!1,editUrl:"https://github.com/dyte-in/docs/tree/main/docs/guides/capabilities/export-chat-dump.mdx",tags:[],version:"current",lastUpdatedAt:1692164292,formattedLastUpdatedAt:"Aug 16, 2023",sidebarPosition:8,frontMatter:{title:"Export Chat Dump of a Session",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Flutter",permalink:"/guides/capabilities/customization/customize-meeting-locale/fluttter-custom-locale"},next:{title:"Quickstart",permalink:"/guides/rest-apis/quickstart"}},d={},c=[{value:"Get <code>chat_download_url</code>",id:"get-chat_download_url",level:2},{value:"Download the chat dump file",id:"download-the-chat-dump-file",level:2},{value:"Download on the client",id:"download-on-the-client",level:3},{value:"Download on the server",id:"download-on-the-server",level:3},{value:"Example: CSV chat dump file",id:"example-csv-chat-dump-file",level:2}],u={toc:c};function m(e){var{components:t}=e,n=r(e,["components"]);return(0,a.kt)("wrapper",i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){o(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"export-chat-dump-of-a-session"},"Export Chat Dump of a Session"),(0,a.kt)("p",null,"You can programmatically retrieve all chat messages of a Dyte session in the following ways:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Using ",(0,a.kt)("a",{parentName:"li",href:"/api/?v=v2#/operations/GetSessionChat"},"Chat Replay API")),(0,a.kt)("li",{parentName:"ul"},"Setting up webhook for the ",(0,a.kt)("a",{parentName:"li",href:"/guides/capabilities/webhooks/webhook-events#meetingchatsynced"},"meeting.chatSynced")," event")),(0,a.kt)("p",null,"This guide walks you through the steps involved in exporting chat dump of a session using Chat Replay API."),(0,a.kt)("p",null,"If you wish to use webhooks, see ",(0,a.kt)("a",{parentName:"p",href:"/guides/capabilities/webhooks/webhooks-and-events"},"Set Up Webhooks")," and ",(0,a.kt)("a",{parentName:"p",href:"/guides/capabilities/webhooks/webhook-events#meetingchatsynced"},"meeting.chatSynced"),"."),(0,a.kt)("admonition",{title:"Note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Chat Replay API is not enabled by default for your organization.\n",(0,a.kt)("a",{parentName:"p",href:"https://dyte.io/contact"},"Contact us")," to enable the Chat Replay API for your\norganization.")),(0,a.kt)("p",null,"Once ",(0,a.kt)("a",{parentName:"p",href:"/api/?v=v2#/operations/GetSessionChat"},"Chat Replay API")," is enabled, do the\nfollowing:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Get the ",(0,a.kt)("inlineCode",{parentName:"li"},"chat_download_url")," using\n",(0,a.kt)("a",{parentName:"li",href:"/api/?v=v2#/operations/GetSessionChat"},"Chat Replay API"),"."),(0,a.kt)("li",{parentName:"ol"},"Download the chat dump CSV file.")),(0,a.kt)("h2",{id:"get-chat_download_url"},"Get ",(0,a.kt)("inlineCode",{parentName:"h2"},"chat_download_url")),(0,a.kt)("p",null,"To get the ",(0,a.kt)("inlineCode",{parentName:"p"},"chat_download_url"),", make a ",(0,a.kt)("inlineCode",{parentName:"p"},"HTTP GET")," request to\n",(0,a.kt)("a",{parentName:"p",href:"/api/?v=v2#/operations/GetSessionChat"},"Chat Replay API"),". The API returns the\nfollowing:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "success": true,\n  "data": {\n    "chat_download_url": "string",\n    "chat_download_url_expiry": "string"\n  }\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"chat_download_url")," is a URL that allows you to download the entire chat dump of a session in CSV format from AWS S3."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"chat_download_url_expiry")," indicates the expiry timestamp of the ",(0,a.kt)("inlineCode",{parentName:"li"},"chat_download_url"),". If the ",(0,a.kt)("inlineCode",{parentName:"li"},"chat_download_url")," gets expired, simply call this endpoint again to obtain a new download URL.")),(0,a.kt)("h2",{id:"download-the-chat-dump-file"},"Download the chat dump file"),(0,a.kt)("p",null,"You can download the chat dump file in CSV format by making ",(0,a.kt)("inlineCode",{parentName:"p"},"HTTP GET")," request\nto ",(0,a.kt)("inlineCode",{parentName:"p"},"chat_download_url")," that you obtained in the previous step."),(0,a.kt)("p",null,"The process of downloading any file from a HTTP URL in JavaScript differs\nslightly based on whether you are doing it on client side or server side."),(0,a.kt)("h3",{id:"download-on-the-client"},"Download on the client"),(0,a.kt)("p",null,"To download at client side, do the following:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Make a GET request to the ",(0,a.kt)("inlineCode",{parentName:"li"},"chat_download_url"),"."),(0,a.kt)("li",{parentName:"ol"},"Convert response to blob."),(0,a.kt)("li",{parentName:"ol"},"Create an invisible ",(0,a.kt)("inlineCode",{parentName:"li"},"<a>")," HTML element with download attribute and add the\nabove blob to it's ",(0,a.kt)("inlineCode",{parentName:"li"},"href"),"."),(0,a.kt)("li",{parentName:"ol"},"Programmatically click on the ",(0,a.kt)("inlineCode",{parentName:"li"},"<a>")," element so that the browser automatically\nstarts downloading and then remove the ",(0,a.kt)("inlineCode",{parentName:"li"},"<a>")," element.")),(0,a.kt)("h3",{id:"download-on-the-server"},"Download on the server"),(0,a.kt)("p",null,"We use ",(0,a.kt)("inlineCode",{parentName:"p"},"Node.js")," streams to download files on the server, so the steps are as\nfollows:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a writable stream for a local file."),(0,a.kt)("li",{parentName:"ol"},"Make a GET request to ",(0,a.kt)("inlineCode",{parentName:"li"},"chat_download_url"),"."),(0,a.kt)("li",{parentName:"ol"},"Get a readable stream using ",(0,a.kt)("inlineCode",{parentName:"li"},"res.body")," and pipe to the writable stream\ncreated in the first step.")),(0,a.kt)("h2",{id:"example-csv-chat-dump-file"},"Example: CSV chat dump file"),(0,a.kt)("p",null,"This CSV file contains all the chat messages along with the participant's name\nand some other metadata. It includes the following column headings:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"id"),": Unique chat message ID"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"participantId"),": ID of the participant who sent the message"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sessionId"),": The session ID from which the chat message was sent"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"meetingId"),": The ID of the meeting to which this session belongs"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"displayName"),": Display name of the participant who sent this message"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pinned"),": A boolean that indicates if the current message was pinned or not"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"isEdited"),": A boolean that indicates if the current message was edited or not"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"payloadType"),": An ENUM that indicates the type of payload sent in the chat\nmessage. It can be one of TEXT_MESSAGE, IMAGE_MESSAGE, FILE_MESSAGE"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"payload"),": The actual payload sent in the chat message"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"createdAt"),": Timestamp when this chat message was sent")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://dyte.io/blog/content/images/size/w1600/2022/11/Dyte-Blog---Sample-Chat-Dump.png",alt:"Sample Chat Dump File"})),(0,a.kt)("p",null,"For more information on downloading the file, refer to\n",(0,a.kt)("a",{parentName:"p",href:"https://dyte.io/blog/fetch-chat-history-of-a-dyte-session/"},"How to Fetch Chat History of a Dyte Session"),"\nblog."))}m.isMDXComponent=!0}}]);