"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[70685],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),g=i,m=d["".concat(s,".").concat(g)]||d[g]||p[g]||o;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},22032:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>u,toc:()=>p});n(67294);var r=n(3905);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}const l={title:"Exchange data between plugin and meeting",sidebar_position:2},s=void 0,u={unversionedId:"plugin-sdk/guides/exchange-data-between-plugin-and-meeting",id:"plugin-sdk/guides/exchange-data-between-plugin-and-meeting",title:"Exchange data between plugin and meeting",description:"Plugin SDK allows you to exchange data between the dyte meeting and the plugin.",source:"@site/docs/archive/plugin-sdk/guides/exchange-data-between-plugin-and-meeting.mdx",sourceDirName:"plugin-sdk/guides",slug:"/plugin-sdk/guides/exchange-data-between-plugin-and-meeting",permalink:"/archive/plugin-sdk/guides/exchange-data-between-plugin-and-meeting",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Exchange data between plugin and meeting",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"How to work with Plugin Stores",permalink:"/archive/plugin-sdk/guides/how-to-work-with-plugin-stores"},next:{title:"Frequently Asked Questions",permalink:"/archive/plugin-sdk/frequently-asked-questions"}},c={},p=[{value:"Client SDK",id:"client-sdk",level:2},{value:"Send custom messages to plugin SDK",id:"send-custom-messages-to-plugin-sdk",level:3},{value:"Listen for custom events from plugin SDK",id:"listen-for-custom-events-from-plugin-sdk",level:3},{value:"Plugin SDK",id:"plugin-sdk",level:2},{value:"Send custom events to the dyte meeting",id:"send-custom-events-to-the-dyte-meeting",level:3},{value:"Listen for custom messages from the dyte meeting",id:"listen-for-custom-messages-from-the-dyte-meeting",level:3}],d={toc:p};function g(e){var{components:t}=e,n=a(e,["components"]);return(0,r.kt)("wrapper",o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){i(e,t,n[t])}))}return e}({},d,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Plugin SDK allows you to exchange data between the dyte meeting and the plugin.\nThis guide talks about how this can be done:"),(0,r.kt)("h2",{id:"client-sdk"},"Client SDK"),(0,r.kt)("h3",{id:"send-custom-messages-to-plugin-sdk"},"Send custom messages to plugin SDK"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ready")," event is emitted once the plugin is ready to accept data from the\nclient SDK. all custom events must be sent only after this event is emitted."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"sendData")," method accepts an object with the following properties:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"eventName"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the event."),(0,r.kt)("td",{parentName:"tr",align:null},"string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},"The data you wish to send to the plugin."),(0,r.kt)("td",{parentName:"tr",align:null},"any")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const id = '<your-plugin-id>';\nconst plugin = meeting.plugins.all.get(id);\n\nplugin.on('ready', () => {\n  plugin.sendData({\n    eventName: 'customEventToPlugin',\n    data: '<your-custom-data>',\n  });\n});\n")),(0,r.kt)("h3",{id:"listen-for-custom-events-from-plugin-sdk"},"Listen for custom events from plugin SDK"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const id = '<your-plugin-id>';\nconst plugin = meeting.plugins.all.get(id);\n\nplugin.on('myAwesomeEvent', (data) => {\n  console.log(data);\n});\n")),(0,r.kt)("h2",{id:"plugin-sdk"},"Plugin SDK"),(0,r.kt)("h3",{id:"send-custom-events-to-the-dyte-meeting"},"Send custom events to the dyte meeting"),(0,r.kt)("p",null,"The emitEvent method is used to emit custom events to the (client SDK) room."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import DytePlugin from \"@dytesdk/plugin-sdk\";\n\nconst plugin = DytePlugin.init();\n\nplugin.room.emitEvent('myAwesomeEvent', {...});\n")),(0,r.kt)("h3",{id:"listen-for-custom-messages-from-the-dyte-meeting"},"Listen for custom messages from the dyte meeting"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import DytePlugin from '@dytesdk/plugin-sdk';\n\nconst plugin = DytePlugin.init();\n\nplugin.room.on('customEventToPlugin', (data) => {\n  console.log(data);\n});\n")))}g.isMDXComponent=!0}}]);