"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[93416],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},27222:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>p,toc:()=>d});n(67294);var r=n(3905);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const s={title:"Concepts",sidebar_position:2},l=void 0,p={unversionedId:"reactjs/concepts-live-video",id:"reactjs/concepts-live-video",title:"Concepts",description:"This topic covers essential concepts related to Dyte Live Video applications.",source:"@site/docs/develop/reactjs/concepts-live-video.mdx",sourceDirName:"reactjs",slug:"/reactjs/concepts-live-video",permalink:"/develop/reactjs/concepts-live-video",draft:!1,editUrl:"https://github.com/kgenots/kgenots-web/tree/main/docs/develop/reactjs/concepts-live-video.mdx",tags:[],version:"current",lastUpdatedAt:1692774364,formattedLastUpdatedAt:"2023\ub144 8\uc6d4 23\uc77c",sidebarPosition:2,frontMatter:{title:"Concepts",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/develop/reactjs/intro-reactjs-conf"},next:{title:"Integrate Dyte",permalink:"/develop/reactjs/build-live-video-app"}},c={},d=[{value:"Backend HTTP REST APIs",id:"backend-http-rest-apis",level:2},{value:"Frontend SDKs",id:"frontend-sdks",level:2},{value:"Developer portal",id:"developer-portal",level:2},{value:"Organization",id:"organization",level:2},{value:"Meeting",id:"meeting",level:2},{value:"Session",id:"session",level:2},{value:"Preset",id:"preset",level:2},{value:"Participants",id:"participants",level:2}],u={toc:d};function m(e){var{components:t}=e,n=o(e,["components"]);return(0,r.kt)("wrapper",i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){a(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This topic covers essential concepts related to Dyte Live Video applications."),(0,r.kt)("h2",{id:"backend-http-rest-apis"},"Backend HTTP REST APIs"),(0,r.kt)("p",null,"Your backend utilizes Dyte REST APIs to perform actions such as:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api#/operations/create_meeting"},"Create meetings")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api#/operations/add_participant"},"Add participants to a meeting")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api#/operations/start_recording"},"Start recording a meeting")," and so on")),(0,r.kt)("h2",{id:"frontend-sdks"},"Frontend SDKs"),(0,r.kt)("p",null,"Your applications bundle Dyte Core SDKs (and UI Kits) to acquire, transmit and play media, and manage network connections."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Core SDK"),": The Dyte Core SDK is designed to provide an easy way to incorporate real-time communication (RTC) solutions. With full customization and branding options, you can build your own UI from the ground up without dealing with complicated media layers. See ",(0,r.kt)("a",{parentName:"p",href:"/web-core/Introduction"},"Introduction to Core SDK"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"UI Kit"),": Dyte's UI Kit is a prebuilt design library of UI components designed to simplify the integration of video and voice calls into your product. See ",(0,r.kt)("a",{parentName:"p",href:"/react-ui-kit"},"UI Kit"),"."))),(0,r.kt)("h2",{id:"developer-portal"},"Developer portal"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://dev.dyte.io/dashboard"},"Developer Portal")," serves as a comprehensive platform, offering access to meeting logs, API key management, billing operations, and various other functionalities in one place."),(0,r.kt)("p",null,"You can also use Developer Portal to create meetings, presets, setup storage for recordings, add webhooks, and much more."),(0,r.kt)("img",{src:"/static/develop/dev-portal.png",width:"600",height:"300",alt:"dev-portal",className:"dev-portal-preview"}),(0,r.kt)("h2",{id:"organization"},"Organization"),(0,r.kt)("p",null,"In Dyte, the organization serves as the top-level entity where all participants of your group are added. You can create an organization using the ",(0,r.kt)("a",{parentName:"p",href:"/api#/operations/createOrg"},"API")," or through the Developer Portal."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Meetings are created within the organization."),(0,r.kt)("li",{parentName:"ul"},"The API keys are generated for your organization. These API Keys are unique to your organization and are required to use Dyte REST APIs such as when instantiating a meeting."),(0,r.kt)("li",{parentName:"ul"},"Additionally, Dyte considers the organization as a billing unit.")),(0,r.kt)("h2",{id:"meeting"},"Meeting"),(0,r.kt)("p",null,"A communication channel created on Dyte is termed as a ",(0,r.kt)("inlineCode",{parentName:"p"},"meeting"),". Meetings can be created using the ",(0,r.kt)("a",{parentName:"p",href:"/api#/operations/create_meeting"},"Create a meeting API")," or through the Developer Portal. Similarly, you can get the details of your meeting using the ",(0,r.kt)("a",{parentName:"p",href:"/api#/operations/get_all_meetings"},"API")," or developer portal."),(0,r.kt)("p",null,"An example from the Developer Portal displaying meeting details."),(0,r.kt)("img",{src:"/static/develop/concept-meeting.png",width:"800",height:"500",alt:"chat-sdk",className:"concept-meeting-live-video"}),(0,r.kt)("h2",{id:"session"},"Session"),(0,r.kt)("p",null,"In Dyte, a meeting is a communication channel, and each instance of that channel is called a session. A session represents an ongoing meeting within that communication channel. Like meetings, you can get fetch the details of a session via Developer Portal or using the ",(0,r.kt)("a",{parentName:"p",href:"/api#/operations/GetSessions"},"APIs"),"."),(0,r.kt)("p",null,"An example from the Developer Portal displaying session details."),(0,r.kt)("img",{src:"/static/develop/session-details.png",width:"800",height:"500",alt:"chat-sdk",className:"session-details-live-video"}),(0,r.kt)("h2",{id:"preset"},"Preset"),(0,r.kt)("p",null,"A preset is a set of permissions and UI configurations that are applied to participants for different meeting types such as Group Call, Webinar, and Livestream. The presets define how a meeting will appear visually and functional aspects of the meeting. They allow customization options like setting maximum number of participants on-screen, permissions to share screen, enabling poll creation, disabling video and audio, adjusting text color, configuring plugins, etc."),(0,r.kt)("p",null,"For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/develop/projects"},"Add Presets"),"."),(0,r.kt)("h2",{id:"participants"},"Participants"),(0,r.kt)("p",null,"Anyone who joins the ",(0,r.kt)("inlineCode",{parentName:"p"},"meeting"),", including actual users and machine users. You can add participants using the ",(0,r.kt)("a",{parentName:"p",href:"/api#/operations/add_participant"},"Add Participant API"),". Participants will have permissions for the meeting depending on the selected preset. The ",(0,r.kt)("inlineCode",{parentName:"p"},"presetName")," must be passed in the body of the Add Participant API request."))}m.isMDXComponent=!0}}]);