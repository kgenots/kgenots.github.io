"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[63515],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(r),d=n,v=p["".concat(s,".").concat(d)]||p[d]||m[d]||l;return r?a.createElement(v,i(i({ref:t},c),{},{components:r})):a.createElement(v,i({ref:t},c))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var u=2;u<l;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},59262:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>u,toc:()=>m});r(67294);var a=r(3905);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}const o={title:"Livestream objects & methods",description:"Livestream object containing all livestream related data and methods.",sidebar_position:2,tags:["flutter-core","livestream"]},s=void 0,u={unversionedId:"livestream/dyte-livestream-object",id:"livestream/dyte-livestream-object",title:"Livestream objects & methods",description:"Livestream object containing all livestream related data and methods.",source:"@site/docs/flutter-core/livestream/dyte-livestream-object.mdx",sourceDirName:"livestream",slug:"/livestream/dyte-livestream-object",permalink:"/flutter-core/livestream/dyte-livestream-object",draft:!1,editUrl:"https://github.com/kgenots/kgenots-web/tree/main/docs/flutter-core/livestream/dyte-livestream-object.mdx",tags:[{label:"flutter-core",permalink:"/flutter-core/tags/flutter-core"},{label:"livestream",permalink:"/flutter-core/tags/livestream"}],version:"current",lastUpdatedAt:1692164292,formattedLastUpdatedAt:"2023\ub144 8\uc6d4 16\uc77c",sidebarPosition:2,frontMatter:{title:"Livestream objects & methods",description:"Livestream object containing all livestream related data and methods.",sidebar_position:2,tags:["flutter-core","livestream"]},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/flutter-core/livestream/introduction"},next:{title:"Livestream event listeners",permalink:"/flutter-core/livestream/dyte-livestream-listener"}},c={},m=[{value:"Objects",id:"objects",level:2},{value:"data",id:"data",level:3},{value:"requests",id:"requests",level:3},{value:"Methods",id:"methods",level:2},{value:"getUrl()",id:"geturl",level:3},{value:"getRoomName()",id:"getroomname",level:3},{value:"getState()",id:"getstate",level:3},{value:"<strong>Host Controls Methods</strong>",id:"host-controls-methods",level:2},{value:"Accept request",id:"accept-request",level:3},{value:"Reject request",id:"reject-request",level:3},{value:"Accept all requests",id:"accept-all-requests",level:3},{value:"Reject all requests",id:"reject-all-requests",level:3}],p={toc:m};function d(e){var{components:t}=e,r=i(e,["components"]);return(0,a.kt)("wrapper",l(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),a.forEach((function(t){n(e,t,r[t])}))}return e}({},p,r),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"DyteLivestream")," object obtained by ",(0,a.kt)("inlineCode",{parentName:"p"},"dyteMobileClient.livestream")," method. The objects and methods it contains are defined below."),(0,a.kt)("h2",{id:"objects"},"Objects"),(0,a.kt)("h3",{id:"data"},"data"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"DyteLivestreamData")," object accessed via ",(0,a.kt)("inlineCode",{parentName:"p"},"dyteMobileClient.livestream.data")," contains the data related to metadata for livestream. It has 4 properties:",(0,a.kt)("br",null)),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"roomName"),": ","[",(0,a.kt)("em",{parentName:"li"},"String"),"]"," The name of the room.",(0,a.kt)("br",null)),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"state"),": ","[",(0,a.kt)("em",{parentName:"li"},"DyteLivestreamStatus"),"]"," The current status of the livestream, possible values can be: ",(0,a.kt)("br",null),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"DyteLivestreamStatus.none")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"DyteLivestreamStatus.starting")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"DyteLivestreamStatus.started")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"DyteLivestreamStatus.ending")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"DyteLivestreamStatus.ended")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"DyteLivestreamStatus.errored")))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"url"),": ","[",(0,a.kt)("em",{parentName:"li"},"String?"),"]"," The url of the livestream."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"viewerCount"),": ","[",(0,a.kt)("em",{parentName:"li"},"int"),"]"," The number of viewers in the livestream.",(0,a.kt)("br",null),(0,a.kt)("br",null))),(0,a.kt)("h3",{id:"requests"},"requests"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"requests"),": ",(0,a.kt)("em",{parentName:"li"},"List","<","DyteLiveStreamStageRequestPeer",">")," object accessed via ",(0,a.kt)("inlineCode",{parentName:"li"},"dyteMobileClient.livestream.requests")," contains the list of requests to join the stage. Each request contains 3 properties:",(0,a.kt)("br",null),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"peerId"),": ","[",(0,a.kt)("em",{parentName:"li"},"String"),"]"," The peerId of the user who requested to join the stage."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"userId"),": ","[",(0,a.kt)("em",{parentName:"li"},"String"),"]"," The userId of the user who requested to join the stage."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"displayName"),": ","[",(0,a.kt)("em",{parentName:"li"},"String"),"]"," The display name of the user who requested to join the stage.",(0,a.kt)("br",null),(0,a.kt)("br",null))))),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"geturl"},"getUrl()"),(0,a.kt)("p",null,"[",(0,a.kt)("em",{parentName:"p"},"Future","<","String?",">"),"]",": Returns the url of the livestream."),(0,a.kt)("h3",{id:"getroomname"},"getRoomName()"),(0,a.kt)("p",null,"[",(0,a.kt)("em",{parentName:"p"},"Future","<","String?",">"),"]",": Returns the name of the room."),(0,a.kt)("h3",{id:"getstate"},"getState()"),(0,a.kt)("p",null,"[",(0,a.kt)("em",{parentName:"p"},"Future","<","String?",">"),"]",": Returns the current status of the livestream.",(0,a.kt)("br",null),(0,a.kt)("br",null)),(0,a.kt)("h2",{id:"host-controls-methods"},(0,a.kt)("strong",{parentName:"h2"},"Host Controls Methods")),(0,a.kt)("p",null,"Dyte\u2019s stage management APIs allow hosts to receive and manage stage requests as well as leave and join the stage."),(0,a.kt)("h3",{id:"accept-request"},"Accept request"),(0,a.kt)("p",null,"This method lets the host accept a request to join the stage. It takes the ",(0,a.kt)("inlineCode",{parentName:"p"},"DyteLiveStreamStageRequestPeer")," as an argument whose request has to be accepted."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"dyteMobileClient.livestream.acceptRequest(peer);\n")),(0,a.kt)("h3",{id:"reject-request"},"Reject request"),(0,a.kt)("p",null,"This method lets the host reject a request to join the stage. It takes the ",(0,a.kt)("inlineCode",{parentName:"p"},"DyteLiveStreamStageRequestPeer")," as an argument whose request has to be rejected."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"dyteMobileClient.livestream.rejectRequest(peer);\n")),(0,a.kt)("h3",{id:"accept-all-requests"},"Accept all requests"),(0,a.kt)("p",null,"This method lets the host accept all the requests to join the stage."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"dyteMobileClient.livestream.acceptAll();\n")),(0,a.kt)("h3",{id:"reject-all-requests"},"Reject all requests"),(0,a.kt)("p",null,"This method lets the host reject all the requests to join the stage."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"dyteMobileClient.livestream.rejectAll();\n")))}d.isMDXComponent=!0}}]);