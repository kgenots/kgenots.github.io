"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[1236],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},s=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||r;return n?i.createElement(f,p(p({ref:t},s),{},{components:n})):i.createElement(f,p({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,p=new Array(r);p[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,p[1]=o;for(var l=2;l<r;l++)p[l]=n[l];return i.createElement.apply(null,p)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},12120:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>d});n(67294);var i=n(3905);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function p(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const o={title:"The participant object",description:"The object corresponding to a particular participant.",sidebar_position:2,tags:["mobile-core","participants","participant"]},c="The participant object",l={unversionedId:"participants/participant-object",id:"participants/participant-object",title:"The participant object",description:"The object corresponding to a particular participant.",source:"@site/docs/ios-core/participants/participant-object.mdx",sourceDirName:"participants",slug:"/participants/participant-object",permalink:"/ios-core/participants/participant-object",draft:!1,editUrl:"https://github.com/dyte-in/docs/tree/main/docs/ios-core/participants/participant-object.mdx",tags:[{label:"mobile-core",permalink:"/ios-core/tags/mobile-core"},{label:"participants",permalink:"/ios-core/tags/participants"},{label:"participant",permalink:"/ios-core/tags/participant"}],version:"current",lastUpdatedAt:1692164292,formattedLastUpdatedAt:"2023\ub144 8\uc6d4 16\uc77c",sidebarPosition:2,frontMatter:{title:"The participant object",description:"The object corresponding to a particular participant.",sidebar_position:2,tags:["mobile-core","participants","participant"]},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/ios-core/participants/introduction"},next:{title:"Participant Events",permalink:"/ios-core/participants/events"}},s={},d=[{value:"To get Video view of a given participant",id:"to-get-video-view-of-a-given-participant",level:2},{value:"Audio/Video updates for participant",id:"audiovideo-updates-for-participant",level:2},{value:"Host controls methods",id:"host-controls-methods",level:2}],u={toc:d};function m(e){var{components:t}=e,n=p(e,["components"]);return(0,i.kt)("wrapper",r(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){a(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"the-participant-object"},"The participant object"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"participant")," object consists of all the information related to a particular\nparticipant. For instance, it contains a participants video/audio/screenshare\nstream, and the participant's name. It also contains state variables that\nindicate whether a participant's camera is on or off, and whether they are muted\nor unmuted."),(0,i.kt)("p",null,"The participant object has the following properties."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"id"),": The ",(0,i.kt)("inlineCode",{parentName:"li"},"participantId")," of the participant (aka ",(0,i.kt)("inlineCode",{parentName:"li"},"peerId"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"userId"),": The ",(0,i.kt)("inlineCode",{parentName:"li"},"userId")," of the participant."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name"),": The participant's name."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"picture"),": The participant's picture (if any)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"clientSpecificId"),": An arbitrary ID that can be set to identify the\nparticipant."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"videoTrack"),": The video track of the participant."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"screenShareTrack"),": The video and audio (if any) track of the participant's\nscreen share stream."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"videoEnabled"),": Set to true if the participant's camera is on."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"audioEnabled"),": Set to true if the participant is unmuted."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"isPinned"),": True if current user is pinned in the meeting room"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"presetName"),": Name of the preset associated with the participant.")),(0,i.kt)("h2",{id:"to-get-video-view-of-a-given-participant"},"To get Video view of a given participant"),(0,i.kt)("p",null,"You can call ",(0,i.kt)("inlineCode",{parentName:"p"},"participant.getVideoView()")," which will return a View which further\ncan used to add in any View."),(0,i.kt)("p",null,"Similarly one can use ",(0,i.kt)("inlineCode",{parentName:"p"},"participant.getScreenShareView()")," which will return a\nView which further can used to add in any View."),(0,i.kt)("h2",{id:"audiovideo-updates-for-participant"},"Audio/Video updates for participant"),(0,i.kt)("p",null,"You can listen to audio/video changes for a single participant by calling\n",(0,i.kt)("inlineCode",{parentName:"p"},"addParticipantUpdateListener(listener: DyteParticipantUpdateListener)")," on any\nparticipant object."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"dyteParticipant.addParticipantUpdateListener(participantUpdateListener: self)\n\nextension MeetingViewModel: DyteParticipantUpdateListener {\n      func onAudioUpdate(participant: DyteMeetingParticipant, isEnabled: Bool) {\n        // on audio update\n      }\n\n      func onVideoUpdate(participant: DyteMeetingParticipant, isEnabled: Bool) {\n        // on video update\n      }\n\n      func onPinned(participant: DyteMeetingParticipant) {\n        // when participant is pinned\n      }\n\n      func onUnpinned(participant: DyteMeetingParticipant) {\n        // when participant is un-pinned\n      }\n\n      func onScreenShareStarted(participant: DyteMeetingParticipant) {\n        // when participant start to screenshare\n      }\n\n      func onScreenShareEnded(participant: DyteMeetingParticipant) {\n        // when participant stops screenshare\n      }\n}\n")),(0,i.kt)("p",null,"Also make sure to remove event listener when they are no longer used. You can\nremove DyteParticipantUpdateListener by calling\n",(0,i.kt)("inlineCode",{parentName:"p"},"removeParticipantUpdateListener(listener)")),(0,i.kt)("h2",{id:"host-controls-methods"},"Host controls methods"),(0,i.kt)("p",null,"If you (the local user) have the relevant permissions in the meeting, you can\ndisable a participant's video/audio streams, or even remove them from the\nmeeting."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"let participant = meeting.participants.joined.first\n\n// To disable a participant's video stream\nparticipant.disableVideo()\n\n// To disable a participant's audio stream\nparticipant.disableAudio()\n\n// To kick a participant from the meeting\nparticipant.kick()\n\n// to pin a participant in a meeting\nparticipant.pin()\n\n// to retrieve if current participant is already pinned in a meeting\nparticipant.isPinned\n")))}m.isMDXComponent=!0}}]);