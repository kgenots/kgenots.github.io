"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[51487],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),s=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return n?i.createElement(g,o(o({ref:t},c),{},{components:n})):i.createElement(g,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var s=2;s<r;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},82975:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>p,metadata:()=>s,toc:()=>d});n(67294);var i=n(3905);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const p={title:"Introduction",description:"Events, methods and data pertaining to meeting participants.",sidebar_position:1,tags:["mobile-core","participants","participant"]},l="Introduction - Room participants",s={unversionedId:"participants/introduction",id:"participants/introduction",title:"Introduction",description:"Events, methods and data pertaining to meeting participants.",source:"@site/docs/ios-core/participants/introduction.mdx",sourceDirName:"participants",slug:"/participants/introduction",permalink:"/ios-core/participants/introduction",draft:!1,editUrl:"https://github.com/kgenots/kgenots-web/tree/main/docs/ios-core/participants/introduction.mdx",tags:[{label:"mobile-core",permalink:"/ios-core/tags/mobile-core"},{label:"participants",permalink:"/ios-core/tags/participants"},{label:"participant",permalink:"/ios-core/tags/participant"}],version:"current",lastUpdatedAt:1692164292,formattedLastUpdatedAt:"2023\ub144 8\uc6d4 16\uc77c",sidebarPosition:1,frontMatter:{title:"Introduction",description:"Events, methods and data pertaining to meeting participants.",sidebar_position:1,tags:["mobile-core","participants","participant"]},sidebar:"tutorialSidebar",previous:{title:"Media Permissions",permalink:"/ios-core/local-user/manage-permissions"},next:{title:"The participant object",permalink:"/ios-core/participants/participant-object"}},c={},d=[{value:"Room participants object.",id:"room-participants-object",level:2},{value:"Grid info for the room",id:"grid-info-for-the-room",level:2},{value:"Video update for all participants",id:"video-update-for-all-participants",level:2},{value:"Audio update for all participants",id:"audio-update-for-all-participants",level:2},{value:"Move between pages in paginated mode",id:"move-between-pages-in-paginated-mode",level:2},{value:"Host control methods",id:"host-control-methods",level:2}],u={toc:d};function m(e){var{components:t}=e,n=o(e,["components"]);return(0,i.kt)("wrapper",r(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){a(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"introduction---room-participants"},"Introduction - Room participants"),(0,i.kt)("p",null,"The data regarding all meeting participants is stored under\n",(0,i.kt)("inlineCode",{parentName:"p"},"meeting.participants"),". Use the methods and events to consume the participants\ndata."),(0,i.kt)("h2",{id:"room-participants-object"},"Room participants object."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"joined"),": A list that contains all the participants who have joined the\nmeeting."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"waitlisted"),": A list that contains all the participants waiting to join the\nmeeting."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"active"),": A list that contains all the participants except the local user who\nare supposed to be on the screen at the moment"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pinned"),": A nullable participant object. If any participant is pinned is that\nparticipant else it is null."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"screenshares"),": A list that contains all the participants who have shared\nscreen in the meeting."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"gridInfo"),": This object has all data related to pages in the room.")),(0,i.kt)("p",null,"Each participant in each of the ",(0,i.kt)("inlineCode",{parentName:"p"},"joined"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"waitlisted"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"active")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"screenshares")," list is of type ",(0,i.kt)("inlineCode",{parentName:"p"},"DyteMeetingParticipant"),"."),(0,i.kt)("p",null,"For example, to get all the participants who joined the meeting:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"// get all joined participants\nlet joinedParticipants = meeting.participants.joined;\n")),(0,i.kt)("p",null,"For example, to get all the active participants in the meeting:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"// get all active participants\nlet joinedParticipants = meeting.participants.active;\n")),(0,i.kt)("p",null,"Therefore, if you were to make a grid of participants, you'd use the ",(0,i.kt)("inlineCode",{parentName:"p"},"active"),"\nlist, but to display all participants in the meeting you'd use the ",(0,i.kt)("inlineCode",{parentName:"p"},"joined"),"\nlist."),(0,i.kt)("h2",{id:"grid-info-for-the-room"},"Grid info for the room"),(0,i.kt)("p",null,"Following object can be retrieved from ",(0,i.kt)("inlineCode",{parentName:"p"},"meeting")," object by using\n",(0,i.kt)("inlineCode",{parentName:"p"},"meeting.participants.gridInfo"),". This object will have necessary information\nregarding pageCount, next page, previos page, current page, etc."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"  let pageCount: Int\n  let currentPageNumber: Int\n  let isNextPagePossible: Bool\n  let isPreviousPagePossible: Bool\n  let shouldShowPaginator: Bool\n  let maxVideoCountPerPage: Int\n")),(0,i.kt)("h2",{id:"video-update-for-all-participants"},"Video update for all participants"),(0,i.kt)("p",null,"Triggered when the user starts / stops the video using ",(0,i.kt)("inlineCode",{parentName:"p"},"enableVideo")," or\n",(0,i.kt)("inlineCode",{parentName:"p"},"disableVideo")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"extension MeetingViewModel: DyteParticipantEventsListener {\n     func videoUpdate(videoEnabled: Boolean, participant: DyteMeetingParticipant) {\n      if (videoEnabled) {\n        // video is enabled, and other participants in room can see local user\n      } else {\n        // video is disabled, and other participants in room can not see local user.\n      }\n    }\n}\n")),(0,i.kt)("h2",{id:"audio-update-for-all-participants"},"Audio update for all participants"),(0,i.kt)("p",null,"Triggered when the user starts / stops the audio using ",(0,i.kt)("inlineCode",{parentName:"p"},"enableAudio")," or\n",(0,i.kt)("inlineCode",{parentName:"p"},"disableAudio")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"extension MeetingViewModel: DyteParticipantEventsListener {\n    func audioUpdate(audioEnabled: Boolean, participant: DyteMeetingParticipant) {\n      if (audioEnabled) {\n        // audio is enabled, and other participants in room can hear local user\n      } else {\n        // audio is disabled, and other participants in room can not hear local user.\n      }\n    }\n}\n")),(0,i.kt)("h2",{id:"move-between-pages-in-paginated-mode"},"Move between pages in paginated mode"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"setPage(pageNumber: Int)")," method allows you to switch between pages of\nparticipants present in the meeting."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"// switch to 1st page\nmeeting.participants.setPage(1)\n")),(0,i.kt)("h2",{id:"host-control-methods"},"Host control methods"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"meeting.participants")," object has host control methods that allow you to\ndisable the audio and video streams of other users in the meeting (given that\nthe user preset has the right permissions)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"// mute all participants\nmeeting.participants.disableAllAudio()\n\n// mute a single participant\nlet participantToUpdate = meeting.participants.joined.first\nparticipantToUpdate.disableAudio()\n\n// disable video for all participants\nmeeting.participants.disableAllVideo()\n\n// disable video for a single participant\nlet participantToUpdate = meeting.participants.joined.first()\nparticipantToUpdate.disableVideo()\n")),(0,i.kt)("p",null,"To remove all participants from a meeting, you can call the ",(0,i.kt)("inlineCode",{parentName:"p"},"kickAll()")," method."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"// remove all participants from the meeting\nmeeting.participants.kickAll()\n\n// remove a single participant\nlet participantToRemove = meeting.participants.joined.first()\nparticipantToRemove.kick()\n")))}m.isMDXComponent=!0}}]);