"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[97265],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(n),y=o,d=m["".concat(s,".").concat(y)]||m[y]||u[y]||a;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},67219:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>f,frontMatter:()=>c,metadata:()=>l,toc:()=>u});n(67294);var r=n(3905);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const c={},s="DyteDialogManager",l={unversionedId:"components/dyte-dialog-manager",id:"components/dyte-dialog-manager",title:"DyteDialogManager",description:"A component which handles all dialog elements in a component such as:",source:"@site/docs/rn-ui-kit/components/dyte-dialog-manager.mdx",sourceDirName:"components",slug:"/components/dyte-dialog-manager",permalink:"/react-native/components/dyte-dialog-manager",draft:!1,editUrl:"https://github.com/dyte-in/docs/tree/main/docs/rn-ui-kit/components/dyte-dialog-manager.mdx",tags:[],version:"current",lastUpdatedAt:1692164292,formattedLastUpdatedAt:"2023\ub144 8\uc6d4 16\uc77c",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DyteControlbar",permalink:"/react-native/components/dyte-controlbar"},next:{title:"DyteDialog",permalink:"/react-native/components/dyte-dialog"}},p={},u=[{value:"Props",id:"props",level:2}],m=(y="PropsTable",function(e){return console.warn("Component "+y+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var y;const d={toc:u};function f(e){var{components:t}=e,n=i(e,["components"]);return(0,r.kt)("wrapper",a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},d,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dytedialogmanager"},"DyteDialogManager"),(0,r.kt)("p",null,"A component which handles all dialog elements in a component such as:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"dyte-settings"),(0,r.kt)("li",{parentName:"ul"},"dyte-leave-meeting"),(0,r.kt)("li",{parentName:"ul"},"dyte-permissions-message"),(0,r.kt)("li",{parentName:"ul"},"dyte-image-viewer"),(0,r.kt)("li",{parentName:"ul"},"dyte-remote-access-manager")),(0,r.kt)("p",null,"This components depends on the values from ",(0,r.kt)("inlineCode",{parentName:"p"},"states")," object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"function Example() {\n  const [states, setStates] = useState({});\n\n  const setState = (s) => setStates((states) => ({ ...states, ...s }));\n\n  return (\n    <Row>\n      <DyteButton onClick={() => setState({ activeSettings: true })}>\n        Show Settings\n      </DyteButton>\n      <DyteButton onClick={() => setState({ activeLeaveConfirmation: true })}>\n        Show Leave Confirmation\n      </DyteButton>\n      <DyteButton onClick={() => setState({ activePermissionsMessage: true })}>\n        Show Permissions Troubleshooting UI\n      </DyteButton>\n      <DyteButton onClick={() => setState({ activeRemoteAccessManager: true })}>\n        Show Remote Access Manager\n      </DyteButton>\n      <DyteDialogManager\n        meeting={meeting}\n        states={states}\n        onDyteStateUpdate={(e) => setState(e.detail)}\n      />\n    </Row>\n  );\n}\n")),(0,r.kt)("h2",{id:"props"},"Props"),(0,r.kt)(m,{of:"dyte-dialog-manager",mdxType:"PropsTable"}))}f.isMDXComponent=!0}}]);