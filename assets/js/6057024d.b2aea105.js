"use strict";(self.webpackChunkkgenots=self.webpackChunkkgenots||[]).push([[60319],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=s(n),f=o,y=p["".concat(u,".").concat(f)]||p[f]||d[f]||i;return n?r.createElement(y,l(l({ref:t},c),{},{components:n})):r.createElement(y,l({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=f;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a[p]="string"==typeof e?e:o,l[1]=a;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},82566:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>y,frontMatter:()=>a,metadata:()=>s,toc:()=>p});n(67294);var r=n(3905);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const a={title:"Frequently Asked Questions",sidebar_position:7},u=void 0,s={unversionedId:"plugin-sdk/frequently-asked-questions",id:"plugin-sdk/frequently-asked-questions",title:"Frequently Asked Questions",description:"Here are some frequently asked questions about the Plugin SDK.",source:"@site/docs/archive/plugin-sdk/frequently-asked-questions.mdx",sourceDirName:"plugin-sdk",slug:"/plugin-sdk/frequently-asked-questions",permalink:"/archive/plugin-sdk/frequently-asked-questions",draft:!1,tags:[],version:"current",lastUpdatedAt:1693223168,formattedLastUpdatedAt:"2023\ub144 8\uc6d4 28\uc77c",sidebarPosition:7,frontMatter:{title:"Frequently Asked Questions",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Exchange data between plugin and meeting",permalink:"/archive/plugin-sdk/guides/exchange-data-between-plugin-and-meeting"},next:{title:"Quickstart",permalink:"/archive/react-native"}},c={},p=[],d={toc:p},f="wrapper";function y(e){var{components:t}=e,n=l(e,["components"]);return(0,r.kt)(f,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},d,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Here are some frequently asked questions about the Plugin SDK."),(0,r.kt)("details",{open:!0},(0,r.kt)("summary",null,"What is the difference between ",(0,r.kt)("code",null,"DytePlugin.init()")," and ",(0,r.kt)("code",null,"DytePlugin.ready()"),"?"),(0,r.kt)("p",null,(0,r.kt)("code",null,"plugin.init()")," is called to initialise the plugin and ",(0,r.kt)("code",null,"plugin.ready()")," is called when the plugin is ready to emit and receive events from the client app. ",(0,r.kt)("b",null,"Usually these events occur one after the other and the user need not manually call ",(0,r.kt)("code",null,"plugin.ready()")),"."),(0,r.kt)("p",null,(0,r.kt)("code",null,"plugin.ready()")," can be manually used to control when this communication starts."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'import DytePlugin from "@dytesdk/plugin-sdk";\n...\nconst plugin = await DytePlugin.init({ready: false});\n\n// .. do something\n\nplugin.ready();\n'))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"When are participant related events fired?"),(0,r.kt)("p",null,"Peer events like ",(0,r.kt)("code",null,"peerLeft")," and ",(0,r.kt)("code",null,"peerJoined")," are only fired for when another participant leaves/joins the meeting, not for the current user."),(0,r.kt)("p",null,"These events can be called like so."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"import DytePlugin from \"@dytesdk/plugin-sdk\";\n...\nconst plugin = await DytePlugin.init();\n\nplugin.on('peerJoined', (peer) => {\n    console.log(peer);\n});\n\nplugin.on('peerLeft', (peer) => {\n    console.log(peer);\n});\n"))))}y.isMDXComponent=!0}}]);