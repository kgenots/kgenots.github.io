"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[24190],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(n),f=r,b=u["".concat(c,".").concat(f)]||u[f]||d[f]||a;return n?i.createElement(b,o(o({ref:t},s),{},{components:n})):i.createElement(b,o({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var l=2;l<a;l++)o[l]=n[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},48690:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>f,frontMatter:()=>p,metadata:()=>l,toc:()=>d});n(67294);var i=n(3905);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const p={title:"The participant object",description:"The object corresponding to a particular participant.",sidebar_position:2,tags:["flutter-core","participants","participant"]},c="The DyteMeetingParticipant object",l={unversionedId:"participants/participant-object",id:"participants/participant-object",title:"The participant object",description:"The object corresponding to a particular participant.",source:"@site/docs/flutter-core/participants/participant-object.mdx",sourceDirName:"participants",slug:"/participants/participant-object",permalink:"/flutter-core/participants/participant-object",draft:!1,editUrl:"https://github.com/dyte-in/docs/tree/main/docs/flutter-core/participants/participant-object.mdx",tags:[{label:"flutter-core",permalink:"/flutter-core/tags/flutter-core"},{label:"participants",permalink:"/flutter-core/tags/participants"},{label:"participant",permalink:"/flutter-core/tags/participant"}],version:"current",lastUpdatedAt:1692164292,formattedLastUpdatedAt:"2023\ub144 8\uc6d4 16\uc77c",sidebarPosition:2,frontMatter:{title:"The participant object",description:"The object corresponding to a particular participant.",sidebar_position:2,tags:["flutter-core","participants","participant"]},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/flutter-core/participants/introduction"},next:{title:"Participant Events",permalink:"/flutter-core/participants/events"}},s={},d=[{value:"Audio/Video updates for participant",id:"audiovideo-updates-for-participant",level:2}],u={toc:d};function f(e){var{components:t}=e,n=o(e,["components"]);return(0,i.kt)("wrapper",a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){r(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"the-dytemeetingparticipant-object"},"The DyteMeetingParticipant object"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"DyteMeetingParticipant")," object consists of all the information related to a\nparticular participant. For instance, it contains a participants\nvideo/audio/screenshare stream, and the participant's name. It also contains\nstate variables that indicate whether a participant's camera is on or off, and\nwhether they are muted or unmuted."),(0,i.kt)("p",null,"The participant object has the following properties."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"id"),": The ",(0,i.kt)("inlineCode",{parentName:"li"},"participantId")," of the participant (aka ",(0,i.kt)("inlineCode",{parentName:"li"},"peerId"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"userId"),": The ",(0,i.kt)("inlineCode",{parentName:"li"},"userId")," of the participant."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name"),": Contains participant's name."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"picture"),": Contains participant's picture (if any)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"isHost"),": Boolean value indicating whether this user is host of current\nmeeting or not."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"clientSpecificId"),": Arbitrary ID that can be set to identify the participant."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"videoEnabled"),": Set to true if the participant's camera is on."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"audioEnabled"),": Set to true if the participant is unmuted.")),(0,i.kt)("p",null,"You can subscribe to various participants events. For subscribing:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Implement ",(0,i.kt)("inlineCode",{parentName:"li"},"DyteParticipantEventsListener")," to a class say\n",(0,i.kt)("inlineCode",{parentName:"li"},"ParticipantEventListener"),", and listen to event from\n",(0,i.kt)("inlineCode",{parentName:"li"},"DyteParticipantEventsListener")," by overriding them. This class can be user to\nmanage your state in the application.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"class ParticipantEventListener extends DyteParticipantEventsListener {\n\n  @override\n  void onAudioUpdate({\n    required bool audioEnabled,\n    required DyteMeetingParticipant participant,\n  }) {\n    /// handle audioUpdate of `DyteMeetingParticipant` participant\n  }\n\n  @override\n  void onActiveSpeakerChanged(DyteMeetingParticipant participant) {\n    /// handle active speaker changing to `DyteMeetingParticipant` participant\n  }\n\n  @override\n  void onNoActiveSpeaker() {\n    /// handle no active speaker\n  }\n\n  @override\n  void onParticipantPinned(DyteMeetingParticipant participant) {\n    /// handle pinning of `DyteMeetingParticipant` participant\n  }\n\n\n  @override\n  void onParticipantUnpinned(DyteMeetingParticipant participant) {\n    /// handle unpinning the pinned participant\n  }\n\n  @override\n  void onScreenShareStarted(DyteMeetingParticipant participant) {\n    /// handle screen share started of `DyteMeetingParticipant` participant\n  }\n\n  @override\n  void onScreenShareEnded(DyteMeetingParticipant participant) {\n    /// handle screen share ended of `DyteMeetingParticipant` participant\n  }\n\n  @override\n  void onVideoUpdate({\n    required bool videoEnabled,\n    required DyteMeetingParticipant participant,\n  }) {\n    /// handle videoUpdate of `DyteMeetingParticipant` participant\n  }\n\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Now to subscribe, pass the instance of ",(0,i.kt)("inlineCode",{parentName:"li"},"DyteParticipantEventsListener")," class\ncreated above to ",(0,i.kt)("inlineCode",{parentName:"li"},"addParticipantEventsListener()")," method of ",(0,i.kt)("inlineCode",{parentName:"li"},"dyteClient"),"\ninstance as follows:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart",metastring:"{2}","{2}":!0},"dyteClient.addParticipantEventsListener(ParticipantEventListener());\n")),(0,i.kt)("h2",{id:"audiovideo-updates-for-participant"},"Audio/Video updates for participant"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"\n...\n\n@override\nvoid onVideoUpdate(bool videoEnabled) {\n  if (videoEnabled) {\n      // video is enabled, and other participants in room can see local user\n    } else {\n      // video is disabled, and other participants in room can not see local user.\n    }\n}\n\n@override\nvoid onAudioUpdate({\n  required bool audioEnabled,\n  required DyteMeetingParticipant participant,\n}) {\n    if (audioEnabled) {\n      // audio is enabled, and other participants in room can hear local user\n    } else {\n      // audio is disabled, and other participants in room can not hear local user.\n    }\n}\n\n...\n\n")))}f.isMDXComponent=!0}}]);