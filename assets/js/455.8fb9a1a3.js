/*! For license information please see 455.8fb9a1a3.js.LICENSE.txt */
(self.webpackChunkgithub_web=self.webpackChunkgithub_web||[]).push([[455],{40250:(e,t,r)=>{"use strict";r.d(t,{v:()=>re});var n=r(89598),i=r(57022);class a extends i.DataTextureLoader{constructor(e){super(e),this.type=i.HalfFloatType}parse(e){const t=function(e,t){switch(e){case 1:throw new Error("THREE.RGBELoader: Read Error: "+(t||""));case 2:throw new Error("THREE.RGBELoader: Write Error: "+(t||""));case 3:throw new Error("THREE.RGBELoader: Bad File Format: "+(t||""));default:throw new Error("THREE.RGBELoader: Memory Error: "+(t||""))}},r=function(e,t,r){t=t||1024;let n=e.pos,i=-1,a=0,s="",o=String.fromCharCode.apply(null,new Uint16Array(e.subarray(n,n+128)));for(;0>(i=o.indexOf("\n"))&&a<t&&n<e.byteLength;)s+=o,a+=o.length,n+=128,o+=String.fromCharCode.apply(null,new Uint16Array(e.subarray(n,n+128)));return-1<i&&(!1!==r&&(e.pos+=a+i+1),s+o.slice(0,i))},n=function(e,t,r,n){const i=e[t+3],a=Math.pow(2,i-128)/255;r[n+0]=e[t+0]*a,r[n+1]=e[t+1]*a,r[n+2]=e[t+2]*a,r[n+3]=1},a=function(e,t,r,n){const a=e[t+3],s=Math.pow(2,a-128)/255;r[n+0]=i.DataUtils.toHalfFloat(Math.min(e[t+0]*s,65504)),r[n+1]=i.DataUtils.toHalfFloat(Math.min(e[t+1]*s,65504)),r[n+2]=i.DataUtils.toHalfFloat(Math.min(e[t+2]*s,65504)),r[n+3]=i.DataUtils.toHalfFloat(1)},s=new Uint8Array(e);s.pos=0;const o=function(e){const n=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,i=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,a=/^\s*FORMAT=(\S+)\s*$/,s=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,o={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let l,u;for((e.pos>=e.byteLength||!(l=r(e)))&&t(1,"no header found"),(u=l.match(/^#\?(\S+)/))||t(3,"bad initial token"),o.valid|=1,o.programtype=u[1],o.string+=l+"\n";l=r(e),!1!==l;)if(o.string+=l+"\n","#"!==l.charAt(0)){if((u=l.match(n))&&(o.gamma=parseFloat(u[1])),(u=l.match(i))&&(o.exposure=parseFloat(u[1])),(u=l.match(a))&&(o.valid|=2,o.format=u[1]),(u=l.match(s))&&(o.valid|=4,o.height=parseInt(u[1],10),o.width=parseInt(u[2],10)),2&o.valid&&4&o.valid)break}else o.comments+=l+"\n";return 2&o.valid||t(3,"missing format specifier"),4&o.valid||t(3,"missing image size specifier"),o}(s),l=o.width,u=o.height,h=function(e,r,n){const i=r;if(i<8||i>32767||2!==e[0]||2!==e[1]||128&e[2])return new Uint8Array(e);i!==(e[2]<<8|e[3])&&t(3,"wrong scanline width");const a=new Uint8Array(4*r*n);a.length||t(4,"unable to allocate buffer space");let s=0,o=0;const l=4*i,u=new Uint8Array(4),h=new Uint8Array(l);let c=n;for(;c>0&&o<e.byteLength;){o+4>e.byteLength&&t(1),u[0]=e[o++],u[1]=e[o++],u[2]=e[o++],u[3]=e[o++],2==u[0]&&2==u[1]&&(u[2]<<8|u[3])==i||t(3,"bad rgbe scanline format");let r,n=0;for(;n<l&&o<e.byteLength;){r=e[o++];const i=r>128;if(i&&(r-=128),(0===r||n+r>l)&&t(3,"bad scanline data"),i){const t=e[o++];for(let e=0;e<r;e++)h[n++]=t}else h.set(e.subarray(o,o+r),n),n+=r,o+=r}const f=i;for(let e=0;e<f;e++){let t=0;a[s]=h[e+t],t+=i,a[s+1]=h[e+t],t+=i,a[s+2]=h[e+t],t+=i,a[s+3]=h[e+t],s+=4}c--}return a}(s.subarray(s.pos),l,u);let c,f,d;switch(this.type){case i.FloatType:d=h.length/4;const e=new Float32Array(4*d);for(let r=0;r<d;r++)n(h,4*r,e,4*r);c=e,f=i.FloatType;break;case i.HalfFloatType:d=h.length/4;const t=new Uint16Array(4*d);for(let r=0;r<d;r++)a(h,4*r,t,4*r);c=t,f=i.HalfFloatType;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:l,height:u,data:c,header:o.string,gamma:o.gamma,exposure:o.exposure,type:f}}setDataType(e){return this.type=e,this}load(e,t,r,n){return super.load(e,(function(e,r){switch(e.type){case i.FloatType:case i.HalfFloatType:"colorSpace"in e?e.colorSpace="srgb-linear":e.encoding=3e3,e.minFilter=i.LinearFilter,e.magFilter=i.LinearFilter,e.generateMipmaps=!1,e.flipY=!0}t&&t(e,r)}),r,n)}}var s=Uint8Array,o=Uint16Array,l=Uint32Array,u=new s([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),h=new s([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),c=new s([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),f=function(e,t){for(var r=new o(31),n=0;n<31;++n)r[n]=t+=1<<e[n-1];var i=new l(r[30]);for(n=1;n<30;++n)for(var a=r[n];a<r[n+1];++a)i[a]=a-r[n]<<5|n;return[r,i]},d=f(u,2),p=d[0],m=d[1];p[28]=258,m[258]=28;for(var g=f(h,0),v=g[0],y=(g[1],new o(32768)),w=0;w<32768;++w){var x=(43690&w)>>>1|(21845&w)<<1;x=(61680&(x=(52428&x)>>>2|(13107&x)<<2))>>>4|(3855&x)<<4,y[w]=((65280&x)>>>8|(255&x)<<8)>>>1}var S=function(e,t,r){for(var n=e.length,i=0,a=new o(t);i<n;++i)++a[e[i]-1];var s,l=new o(t);for(i=0;i<t;++i)l[i]=l[i-1]+a[i-1]<<1;if(r){s=new o(1<<t);var u=15-t;for(i=0;i<n;++i)if(e[i])for(var h=i<<4|e[i],c=t-e[i],f=l[e[i]-1]++<<c,d=f|(1<<c)-1;f<=d;++f)s[y[f]>>>u]=h}else for(s=new o(n),i=0;i<n;++i)e[i]&&(s[i]=y[l[e[i]-1]++]>>>15-e[i]);return s},b=new s(288);for(w=0;w<144;++w)b[w]=8;for(w=144;w<256;++w)b[w]=9;for(w=256;w<280;++w)b[w]=7;for(w=280;w<288;++w)b[w]=8;var T=new s(32);for(w=0;w<32;++w)T[w]=5;var M=S(b,9,1),E=S(T,5,1),A=function(e){for(var t=e[0],r=1;r<e.length;++r)e[r]>t&&(t=e[r]);return t},D=function(e,t,r){var n=t/8|0;return(e[n]|e[n+1]<<8)>>(7&t)&r},R=function(e,t){var r=t/8|0;return(e[r]|e[r+1]<<8|e[r+2]<<16)>>(7&t)},B=function(e){return(e/8|0)+(7&e&&1)},U=function(e,t,r){(null==t||t<0)&&(t=0),(null==r||r>e.length)&&(r=e.length);var n=new(e instanceof o?o:e instanceof l?l:s)(r-t);return n.set(e.subarray(t,r)),n},C=function(e,t,r){var n=e.length;if(!n||r&&!r.l&&n<5)return t||new s(0);var i=!t||r,a=!r||r.i;r||(r={}),t||(t=new s(3*n));var o=function(e){var r=t.length;if(e>r){var n=new s(Math.max(2*r,e));n.set(t),t=n}},l=r.f||0,f=r.p||0,d=r.b||0,m=r.l,g=r.d,y=r.m,w=r.n,x=8*n;do{if(!m){r.f=l=D(e,f,1);var b=D(e,f+1,3);if(f+=3,!b){var T=e[(G=B(f)+4)-4]|e[G-3]<<8,C=G+T;if(C>n){if(a)throw"unexpected EOF";break}i&&o(d+T),t.set(e.subarray(G,C),d),r.b=d+=T,r.p=f=8*C;continue}if(1==b)m=M,g=E,y=9,w=5;else{if(2!=b)throw"invalid block type";var F=D(e,f,31)+257,P=D(e,f+10,15)+4,L=F+D(e,f+5,31)+1;f+=14;for(var I=new s(L),z=new s(19),N=0;N<P;++N)z[c[N]]=D(e,f+3*N,7);f+=3*P;var O=A(z),H=(1<<O)-1,k=S(z,O,1);for(N=0;N<L;){var G,V=k[D(e,f,H)];if(f+=15&V,(G=V>>>4)<16)I[N++]=G;else{var W=0,Q=0;for(16==G?(Q=3+D(e,f,3),f+=2,W=I[N-1]):17==G?(Q=3+D(e,f,7),f+=3):18==G&&(Q=11+D(e,f,127),f+=7);Q--;)I[N++]=W}}var Z=I.subarray(0,F),j=I.subarray(F);y=A(Z),w=A(j),m=S(Z,y,1),g=S(j,w,1)}if(f>x){if(a)throw"unexpected EOF";break}}i&&o(d+131072);for(var X=(1<<y)-1,Y=(1<<w)-1,K=f;;K=f){var q=(W=m[R(e,f)&X])>>>4;if((f+=15&W)>x){if(a)throw"unexpected EOF";break}if(!W)throw"invalid length/literal";if(q<256)t[d++]=q;else{if(256==q){K=f,m=null;break}var J=q-254;if(q>264){var _=u[N=q-257];J=D(e,f,(1<<_)-1)+p[N],f+=_}var $=g[R(e,f)&Y],ee=$>>>4;if(!$)throw"invalid distance";f+=15&$;j=v[ee];if(ee>3){_=h[ee];j+=R(e,f)&(1<<_)-1,f+=_}if(f>x){if(a)throw"unexpected EOF";break}i&&o(d+131072);for(var te=d+J;d<te;d+=4)t[d]=t[d-j],t[d+1]=t[d+1-j],t[d+2]=t[d+2-j],t[d+3]=t[d+3-j];d=te}}r.l=m,r.p=K,r.b=d,m&&(l=1,r.m=y,r.d=g,r.n=w)}while(!l);return d==t.length?t:U(t,0,d)},F=new s(0),P=function(e){if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"};function L(e,t){return C((P(e),e.subarray(2,-4)),t)}var I="undefined"!=typeof TextDecoder&&new TextDecoder;try{I.decode(F,{stream:!0}),1}catch(ne){}const z="colorSpace"in new i.Texture;class N extends i.DataTextureLoader{constructor(e){super(e),this.type=i.HalfFloatType}parse(e){const t=65536,r=14,n=65537,a=16384,s=Math.pow(2.7182818,2.2);const o={l:0,c:0,lc:0};function l(e,t,r,n,i){for(;r<e;)t=t<<8|Q(n,i),r+=8;r-=e,o.l=t>>r&(1<<e)-1,o.c=t,o.lc=r}const u=new Array(59);function h(e,t,r,i,a,s,h){for(var c=r,f=0,d=0;a<=s;a++){if(c.value-r.value>i)return!1;l(6,f,d,e,c);var p=o.l;if(f=o.c,d=o.lc,h[a]=p,63==p){if(c.value-r.value>i)throw"Something wrong with hufUnpackEncTable";l(8,f,d,e,c);var m=o.l+6;if(f=o.c,d=o.lc,a+m>s+1)throw"Something wrong with hufUnpackEncTable";for(;m--;)h[a++]=0;a--}else if(p>=59){if(a+(m=p-59+2)>s+1)throw"Something wrong with hufUnpackEncTable";for(;m--;)h[a++]=0;a--}}!function(e){for(var t=0;t<=58;++t)u[t]=0;for(t=0;t<n;++t)u[e[t]]+=1;var r=0;for(t=58;t>0;--t){var i=r+u[t]>>1;u[t]=r,r=i}for(t=0;t<n;++t){var a=e[t];a>0&&(e[t]=a|u[a]++<<6)}}(h)}function c(e){return 63&e}function f(e){return e>>6}const d={c:0,lc:0};function p(e,t,r,n){e=e<<8|Q(r,n),t+=8,d.c=e,d.lc=t}const m={c:0,lc:0};function g(e,t,r,n,i,a,s,o,l,u){if(e==t){n<8&&(p(r,n,i,s),r=d.c,n=d.lc);var h=r>>(n-=8);h=new Uint8Array([h])[0];if(l.value+h>u)return!1;for(var c=o[l.value-1];h-- >0;)o[l.value++]=c}else{if(!(l.value<u))return!1;o[l.value++]=e}m.c=r,m.lc=n}function v(e){return 65535&e}function y(e){var t=v(e);return t>32767?t-65536:t}const w={a:0,b:0};function x(e,t){var r=y(e),n=y(t),i=r+(1&n)+(n>>1),a=i,s=i-n;w.a=a,w.b=s}function S(e,t){var r=v(e),n=v(t),i=r-(n>>1)&65535,a=n+i-32768&65535;w.a=a,w.b=i}function b(e,t,r,n,i,a,s){for(var o,l=s<16384,u=r>i?i:r,h=1;h<=u;)h<<=1;for(o=h>>=1,h>>=1;h>=1;){for(var c,f,d,p,m=0,g=m+a*(i-o),v=a*h,y=a*o,b=n*h,T=n*o;m<=g;m+=y){for(var M=m,E=m+n*(r-o);M<=E;M+=T){var A=M+b,D=(R=M+v)+b;l?(x(e[M+t],e[R+t]),c=w.a,d=w.b,x(e[A+t],e[D+t]),f=w.a,p=w.b,x(c,f),e[M+t]=w.a,e[A+t]=w.b,x(d,p),e[R+t]=w.a,e[D+t]=w.b):(S(e[M+t],e[R+t]),c=w.a,d=w.b,S(e[A+t],e[D+t]),f=w.a,p=w.b,S(c,f),e[M+t]=w.a,e[A+t]=w.b,S(d,p),e[R+t]=w.a,e[D+t]=w.b)}if(r&h){var R=M+v;l?x(e[M+t],e[R+t]):S(e[M+t],e[R+t]),c=w.a,e[R+t]=w.b,e[M+t]=c}}if(i&h)for(M=m,E=m+n*(r-o);M<=E;M+=T){A=M+b;l?x(e[M+t],e[A+t]):S(e[M+t],e[A+t]),c=w.a,e[A+t]=w.b,e[M+t]=c}o=h,h>>=1}return m}function T(e,t,i,s,o,l){var u=i.value,v=W(t,i),y=W(t,i);i.value+=4;var w=W(t,i);if(i.value+=4,v<0||v>=n||y<0||y>=n)throw"Something wrong with HUF_ENCSIZE";var x=new Array(n),S=new Array(a);if(function(e){for(var t=0;t<a;t++)e[t]={},e[t].len=0,e[t].lit=0,e[t].p=null}(S),h(e,0,i,s-(i.value-u),v,y,x),w>8*(s-(i.value-u)))throw"Something wrong with hufUncompress";!function(e,t,n,i){for(;t<=n;t++){var a=f(e[t]),s=c(e[t]);if(a>>s)throw"Invalid table entry";if(s>r){if((h=i[a>>s-r]).len)throw"Invalid table entry";if(h.lit++,h.p){var o=h.p;h.p=new Array(h.lit);for(var l=0;l<h.lit-1;++l)h.p[l]=o[l]}else h.p=new Array(1);h.p[h.lit-1]=t}else if(s){var u=0;for(l=1<<r-s;l>0;l--){var h;if((h=i[(a<<r-s)+u]).len||h.p)throw"Invalid table entry";h.len=s,h.lit=t,u++}}}}(x,v,y,S),function(e,t,n,i,a,s,o,l,u,h){for(var v=0,y=0,w=l,x=Math.trunc(a.value+(s+7)/8);a.value<x;)for(p(v,y,n,a),v=d.c,y=d.lc;y>=r;)if((M=t[v>>y-r&16383]).len)y-=M.len,g(M.lit,o,v,y,n,0,a,u,h,w),v=m.c,y=m.lc;else{if(!M.p)throw"hufDecode issues";var S;for(S=0;S<M.lit;S++){for(var b=c(e[M.p[S]]);y<b&&a.value<x;)p(v,y,n,a),v=d.c,y=d.lc;if(y>=b&&f(e[M.p[S]])==(v>>y-b&(1<<b)-1)){y-=b,g(M.p[S],o,v,y,n,0,a,u,h,w),v=m.c,y=m.lc;break}}if(S==M.lit)throw"hufDecode issues"}var T=8-s&7;for(v>>=T,y-=T;y>0;){var M;if(!(M=t[v<<r-y&16383]).len)throw"hufDecode issues";y-=M.len,g(M.lit,o,v,y,n,0,a,u,h,w),v=m.c,y=m.lc}}(x,S,e,0,i,w,y,l,o,{value:0})}function M(e){for(var t=1;t<e.length;t++){var r=e[t-1]+e[t]-128;e[t]=r}}function E(e,t){for(var r=0,n=Math.floor((e.length+1)/2),i=0,a=e.length-1;!(i>a||(t[i++]=e[r++],i>a));)t[i++]=e[n++]}function A(e){for(var t=e.byteLength,r=new Array,n=0,i=new DataView(e);t>0;){var a=i.getInt8(n++);if(a<0){t-=(o=-a)+1;for(var s=0;s<o;s++)r.push(i.getUint8(n++))}else{var o=a;t-=2;var l=i.getUint8(n++);for(s=0;s<o+1;s++)r.push(l)}}return r}function D(e,t,r){for(var n,i=1;i<64;)65280==(n=t[e.value])?i=64:n>>8==255?i+=255&n:(r[i]=n,i++),e.value++}function R(e,t){t[0]=K(e[0]),t[1]=K(e[1]),t[2]=K(e[5]),t[3]=K(e[6]),t[4]=K(e[14]),t[5]=K(e[15]),t[6]=K(e[27]),t[7]=K(e[28]),t[8]=K(e[2]),t[9]=K(e[4]),t[10]=K(e[7]),t[11]=K(e[13]),t[12]=K(e[16]),t[13]=K(e[26]),t[14]=K(e[29]),t[15]=K(e[42]),t[16]=K(e[3]),t[17]=K(e[8]),t[18]=K(e[12]),t[19]=K(e[17]),t[20]=K(e[25]),t[21]=K(e[30]),t[22]=K(e[41]),t[23]=K(e[43]),t[24]=K(e[9]),t[25]=K(e[11]),t[26]=K(e[18]),t[27]=K(e[24]),t[28]=K(e[31]),t[29]=K(e[40]),t[30]=K(e[44]),t[31]=K(e[53]),t[32]=K(e[10]),t[33]=K(e[19]),t[34]=K(e[23]),t[35]=K(e[32]),t[36]=K(e[39]),t[37]=K(e[45]),t[38]=K(e[52]),t[39]=K(e[54]),t[40]=K(e[20]),t[41]=K(e[22]),t[42]=K(e[33]),t[43]=K(e[38]),t[44]=K(e[46]),t[45]=K(e[51]),t[46]=K(e[55]),t[47]=K(e[60]),t[48]=K(e[21]),t[49]=K(e[34]),t[50]=K(e[37]),t[51]=K(e[47]),t[52]=K(e[50]),t[53]=K(e[56]),t[54]=K(e[59]),t[55]=K(e[61]),t[56]=K(e[35]),t[57]=K(e[36]),t[58]=K(e[48]),t[59]=K(e[49]),t[60]=K(e[57]),t[61]=K(e[58]),t[62]=K(e[62]),t[63]=K(e[63])}function B(e){const t=.5*Math.cos(.7853975),r=.5*Math.cos(3.14159/16),n=.5*Math.cos(3.14159/8),i=.5*Math.cos(3*3.14159/16),a=.5*Math.cos(.981746875),s=.5*Math.cos(3*3.14159/8),o=.5*Math.cos(1.374445625);for(var l=new Array(4),u=new Array(4),h=new Array(4),c=new Array(4),f=0;f<8;++f){var d=8*f;l[0]=n*e[d+2],l[1]=s*e[d+2],l[2]=n*e[d+6],l[3]=s*e[d+6],u[0]=r*e[d+1]+i*e[d+3]+a*e[d+5]+o*e[d+7],u[1]=i*e[d+1]-o*e[d+3]-r*e[d+5]-a*e[d+7],u[2]=a*e[d+1]-r*e[d+3]+o*e[d+5]+i*e[d+7],u[3]=o*e[d+1]-a*e[d+3]+i*e[d+5]-r*e[d+7],h[0]=t*(e[d+0]+e[d+4]),h[3]=t*(e[d+0]-e[d+4]),h[1]=l[0]+l[3],h[2]=l[1]-l[2],c[0]=h[0]+h[1],c[1]=h[3]+h[2],c[2]=h[3]-h[2],c[3]=h[0]-h[1],e[d+0]=c[0]+u[0],e[d+1]=c[1]+u[1],e[d+2]=c[2]+u[2],e[d+3]=c[3]+u[3],e[d+4]=c[3]-u[3],e[d+5]=c[2]-u[2],e[d+6]=c[1]-u[1],e[d+7]=c[0]-u[0]}for(var p=0;p<8;++p)l[0]=n*e[16+p],l[1]=s*e[16+p],l[2]=n*e[48+p],l[3]=s*e[48+p],u[0]=r*e[8+p]+i*e[24+p]+a*e[40+p]+o*e[56+p],u[1]=i*e[8+p]-o*e[24+p]-r*e[40+p]-a*e[56+p],u[2]=a*e[8+p]-r*e[24+p]+o*e[40+p]+i*e[56+p],u[3]=o*e[8+p]-a*e[24+p]+i*e[40+p]-r*e[56+p],h[0]=t*(e[p]+e[32+p]),h[3]=t*(e[p]-e[32+p]),h[1]=l[0]+l[3],h[2]=l[1]-l[2],c[0]=h[0]+h[1],c[1]=h[3]+h[2],c[2]=h[3]-h[2],c[3]=h[0]-h[1],e[0+p]=c[0]+u[0],e[8+p]=c[1]+u[1],e[16+p]=c[2]+u[2],e[24+p]=c[3]+u[3],e[32+p]=c[3]-u[3],e[40+p]=c[2]-u[2],e[48+p]=c[1]-u[1],e[56+p]=c[0]-u[0]}function U(e){for(var t=0;t<64;++t){var r=e[0][t],n=e[1][t],i=e[2][t];e[0][t]=r+1.5747*i,e[1][t]=r-.1873*n-.4682*i,e[2][t]=r+1.8556*n}}function C(e,t,r){for(var n=0;n<64;++n)t[r+n]=i.DataUtils.toHalfFloat(F(e[n]))}function F(e){return e<=1?Math.sign(e)*Math.pow(Math.abs(e),2.2):Math.sign(e)*Math.pow(s,Math.abs(e)-1)}function P(e){return new DataView(e.array.buffer,e.offset.value,e.size)}function I(e){var t=e.viewer.buffer.slice(e.offset.value,e.offset.value+e.size),r=new Uint8Array(A(t)),n=new Uint8Array(r.length);return M(r),E(r,n),new DataView(n.buffer)}function N(e){var t=L(e.array.slice(e.offset.value,e.offset.value+e.size)),r=new Uint8Array(t.length);return M(t),E(t,r),new DataView(r.buffer)}function O(e){for(var r=e.viewer,n={value:e.offset.value},i=new Uint16Array(e.width*e.scanlineBlockSize*(e.channels*e.type)),a=new Uint8Array(8192),s=0,o=new Array(e.channels),l=0;l<e.channels;l++)o[l]={},o[l].start=s,o[l].end=o[l].start,o[l].nx=e.width,o[l].ny=e.lines,o[l].size=e.type,s+=o[l].nx*o[l].ny*o[l].size;var u=q(r,n),h=q(r,n);if(h>=8192)throw"Something is wrong with PIZ_COMPRESSION BITMAP_SIZE";if(u<=h)for(l=0;l<h-u+1;l++)a[l+u]=Z(r,n);var c=new Uint16Array(t),f=function(e,r){for(var n=0,i=0;i<t;++i)(0==i||e[i>>3]&1<<(7&i))&&(r[n++]=i);for(var a=n-1;n<t;)r[n++]=0;return a}(a,c),d=W(r,n);T(e.array,r,n,d,i,s);for(l=0;l<e.channels;++l)for(var p=o[l],m=0;m<o[l].size;++m)b(i,p.start+m,p.nx,p.size,p.ny,p.nx*p.size,f);!function(e,t,r){for(var n=0;n<r;++n)t[n]=e[t[n]]}(c,i,s);for(var g=0,v=new Uint8Array(i.buffer.byteLength),y=0;y<e.lines;y++)for(var w=0;w<e.channels;w++){var x=(p=o[w]).nx*p.size,S=new Uint8Array(i.buffer,2*p.end,2*x);v.set(S,g),g+=2*x,p.end+=x}return new DataView(v.buffer)}function H(e){var t=L(e.array.slice(e.offset.value,e.offset.value+e.size));const r=e.lines*e.channels*e.width,n=1==e.type?new Uint16Array(r):new Uint32Array(r);let i=0,a=0;const s=new Array(4);for(let o=0;o<e.lines;o++)for(let r=0;r<e.channels;r++){let r=0;switch(e.type){case 1:s[0]=i,s[1]=s[0]+e.width,i=s[1]+e.width;for(let i=0;i<e.width;++i){r+=t[s[0]++]<<8|t[s[1]++],n[a]=r,a++}break;case 2:s[0]=i,s[1]=s[0]+e.width,s[2]=s[1]+e.width,i=s[2]+e.width;for(let i=0;i<e.width;++i){r+=t[s[0]++]<<24|t[s[1]++]<<16|t[s[2]++]<<8,n[a]=r,a++}}}return new DataView(n.buffer)}function k(e){var t=e.viewer,r={value:e.offset.value},n=new Uint8Array(e.width*e.lines*(e.channels*e.type*2)),i={version:j(t,r),unknownUncompressedSize:j(t,r),unknownCompressedSize:j(t,r),acCompressedSize:j(t,r),dcCompressedSize:j(t,r),rleCompressedSize:j(t,r),rleUncompressedSize:j(t,r),rleRawSize:j(t,r),totalAcUncompressedCount:j(t,r),totalDcUncompressedCount:j(t,r),acCompression:j(t,r)};if(i.version<2)throw"EXRLoader.parse: "+re.compression+" version "+i.version+" is unsupported";for(var a=new Array,s=q(t,r)-2;s>0;){var o=G(t.buffer,r),l=Z(t,r),u=l>>2&3,h=new Int8Array([(l>>4)-1])[0],c=Z(t,r);a.push({name:o,index:h,type:c,compression:u}),s-=o.length+3}for(var f=re.channels,d=new Array(e.channels),p=0;p<e.channels;++p){var m=d[p]={},g=f[p];m.name=g.name,m.compression=0,m.decoded=!1,m.type=g.pixelType,m.pLinear=g.pLinear,m.width=e.width,m.height=e.lines}for(var v={idx:new Array(3)},y=0;y<e.channels;++y)for(m=d[y],p=0;p<a.length;++p){var w=a[p];m.name==w.name&&(m.compression=w.compression,w.index>=0&&(v.idx[w.index]=y),m.offset=y)}if(i.acCompressedSize>0)switch(i.acCompression){case 0:var x=new Uint16Array(i.totalAcUncompressedCount);T(e.array,t,r,i.acCompressedSize,x,i.totalAcUncompressedCount);break;case 1:var S=L(e.array.slice(r.value,r.value+i.totalAcUncompressedCount));x=new Uint16Array(S.buffer);r.value+=i.totalAcUncompressedCount}if(i.dcCompressedSize>0){var b={array:e.array,offset:r,size:i.dcCompressedSize},M=new Uint16Array(N(b).buffer);r.value+=i.dcCompressedSize}if(i.rleRawSize>0){var E=A((S=L(e.array.slice(r.value,r.value+i.rleCompressedSize))).buffer);r.value+=i.rleCompressedSize}var F=0,P=new Array(d.length);for(p=0;p<P.length;++p)P[p]=new Array;for(var I=0;I<e.lines;++I)for(var z=0;z<d.length;++z)P[z].push(F),F+=d[z].width*e.type*2;!function(e,t,r,n,i,a){var s=new DataView(a.buffer),o=r[e.idx[0]].width,l=r[e.idx[0]].height,u=Math.floor(o/8),h=Math.ceil(o/8),c=Math.ceil(l/8),f=o-8*(h-1),d=l-8*(c-1),p={value:0},m=new Array(3),g=new Array(3),v=new Array(3),y=new Array(3),w=new Array(3);for(let D=0;D<3;++D)w[D]=t[e.idx[D]],m[D]=D<1?0:m[D-1]+h*c,g[D]=new Float32Array(64),v[D]=new Uint16Array(64),y[D]=new Uint16Array(64*h);for(let F=0;F<c;++F){var x=8;F==c-1&&(x=d);var S=8;for(let e=0;e<h;++e){e==h-1&&(S=f);for(let e=0;e<3;++e)v[e].fill(0),v[e][0]=i[m[e]++],D(p,n,v[e]),R(v[e],g[e]),B(g[e]);U(g);for(let t=0;t<3;++t)C(g[t],y[t],64*e)}let t=0;for(let n=0;n<3;++n){const i=r[e.idx[n]].type;for(let e=8*F;e<8*F+x;++e){t=w[n][e];for(let r=0;r<u;++r){const a=64*r+8*(7&e);s.setUint16(t+0*i,y[n][a+0],!0),s.setUint16(t+2*i,y[n][a+1],!0),s.setUint16(t+4*i,y[n][a+2],!0),s.setUint16(t+6*i,y[n][a+3],!0),s.setUint16(t+8*i,y[n][a+4],!0),s.setUint16(t+10*i,y[n][a+5],!0),s.setUint16(t+12*i,y[n][a+6],!0),s.setUint16(t+14*i,y[n][a+7],!0),t+=16*i}}if(u!=h)for(let e=8*F;e<8*F+x;++e){const t=w[n][e]+8*u*2*i,r=64*u+8*(7&e);for(let e=0;e<S;++e)s.setUint16(t+2*e*i,y[n][r+e],!0)}}}for(var b=new Uint16Array(o),T=(s=new DataView(a.buffer),0);T<3;++T){r[e.idx[T]].decoded=!0;var M=r[e.idx[T]].type;if(2==r[T].type)for(var E=0;E<l;++E){const e=w[T][E];for(var A=0;A<o;++A)b[A]=s.getUint16(e+2*A*M,!0);for(A=0;A<o;++A)s.setFloat32(e+2*A*M,K(b[A]),!0)}}}(v,P,d,x,M,n);for(p=0;p<d.length;++p){if(!(m=d[p]).decoded){if(2!==m.compression)throw"EXRLoader.parse: unsupported channel compression";var O=0,H=0;for(I=0;I<e.lines;++I){for(var k=P[p][O],V=0;V<m.width;++V){for(var W=0;W<2*m.type;++W)n[k++]=E[H+W*m.width*m.height];H++}O++}}}return new DataView(n.buffer)}function G(e,t){for(var r=new Uint8Array(e),n=0;0!=r[t.value+n];)n+=1;var i=(new TextDecoder).decode(r.slice(t.value,t.value+n));return t.value=t.value+n+1,i}function V(e,t){var r=e.getInt32(t.value,!0);return t.value=t.value+4,r}function W(e,t){var r=e.getUint32(t.value,!0);return t.value=t.value+4,r}function Q(e,t){var r=e[t.value];return t.value=t.value+1,r}function Z(e,t){var r=e.getUint8(t.value);return t.value=t.value+1,r}const j=function(e,t){let r;return r="getBigInt64"in DataView.prototype?Number(e.getBigInt64(t.value,!0)):e.getUint32(t.value+4,!0)+Number(e.getUint32(t.value,!0)<<32),t.value+=8,r};function X(e,t){var r=e.getFloat32(t.value,!0);return t.value+=4,r}function Y(e,t){return i.DataUtils.toHalfFloat(X(e,t))}function K(e){var t=(31744&e)>>10,r=1023&e;return(e>>15?-1:1)*(t?31===t?r?NaN:1/0:Math.pow(2,t-15)*(1+r/1024):r/1024*6103515625e-14)}function q(e,t){var r=e.getUint16(t.value,!0);return t.value+=2,r}function J(e,t){return K(q(e,t))}function _(e,t,r,n,i){return"string"===n||"stringvector"===n||"iccProfile"===n?function(e,t,r){var n=(new TextDecoder).decode(new Uint8Array(e).slice(t.value,t.value+r));return t.value=t.value+r,n}(t,r,i):"chlist"===n?function(e,t,r,n){for(var i=r.value,a=[];r.value<i+n-1;){var s=G(t,r),o=V(e,r),l=Z(e,r);r.value+=3;var u=V(e,r),h=V(e,r);a.push({name:s,pixelType:o,pLinear:l,xSampling:u,ySampling:h})}return r.value+=1,a}(e,t,r,i):"chromaticities"===n?function(e,t){return{redX:X(e,t),redY:X(e,t),greenX:X(e,t),greenY:X(e,t),blueX:X(e,t),blueY:X(e,t),whiteX:X(e,t),whiteY:X(e,t)}}(e,r):"compression"===n?function(e,t){return["NO_COMPRESSION","RLE_COMPRESSION","ZIPS_COMPRESSION","ZIP_COMPRESSION","PIZ_COMPRESSION","PXR24_COMPRESSION","B44_COMPRESSION","B44A_COMPRESSION","DWAA_COMPRESSION","DWAB_COMPRESSION"][Z(e,t)]}(e,r):"box2i"===n?function(e,t){return{xMin:W(e,t),yMin:W(e,t),xMax:W(e,t),yMax:W(e,t)}}(e,r):"lineOrder"===n?function(e,t){return["INCREASING_Y"][Z(e,t)]}(e,r):"float"===n?X(e,r):"v2f"===n?function(e,t){return[X(e,t),X(e,t)]}(e,r):"v3f"===n?function(e,t){return[X(e,t),X(e,t),X(e,t)]}(e,r):"int"===n?V(e,r):"rational"===n?function(e,t){return[V(e,t),W(e,t)]}(e,r):"timecode"===n?function(e,t){return[W(e,t),W(e,t)]}(e,r):"preview"===n?(r.value+=i,"skipped"):void(r.value+=i)}const $=new DataView(e),ee=new Uint8Array(e),te={value:0},re=function(e,t,r){const n={};if(20000630!=e.getUint32(0,!0))throw"THREE.EXRLoader: provided file doesn't appear to be in OpenEXR format.";n.version=e.getUint8(4);const i=e.getUint8(5);n.spec={singleTile:!!(2&i),longName:!!(4&i),deepFormat:!!(8&i),multiPart:!!(16&i)},r.value=8;for(var a=!0;a;){var s=G(t,r);if(0==s)a=!1;else{var o=G(t,r),l=_(e,t,r,o,W(e,r));void 0===l?console.warn(`EXRLoader.parse: skipped unknown header attribute type '${o}'.`):n[s]=l}}if(-5&i)throw console.error("EXRHeader:",n),"THREE.EXRLoader: provided file is currently unsupported.";return n}($,e,te),ne=function(e,t,r,n,a){const s={size:0,viewer:t,array:r,offset:n,width:e.dataWindow.xMax-e.dataWindow.xMin+1,height:e.dataWindow.yMax-e.dataWindow.yMin+1,channels:e.channels.length,bytesPerLine:null,lines:null,inputSize:null,type:e.channels[0].pixelType,uncompress:null,getter:null,format:null,[z?"colorSpace":"encoding"]:null};switch(e.compression){case"NO_COMPRESSION":s.lines=1,s.uncompress=P;break;case"RLE_COMPRESSION":s.lines=1,s.uncompress=I;break;case"ZIPS_COMPRESSION":s.lines=1,s.uncompress=N;break;case"ZIP_COMPRESSION":s.lines=16,s.uncompress=N;break;case"PIZ_COMPRESSION":s.lines=32,s.uncompress=O;break;case"PXR24_COMPRESSION":s.lines=16,s.uncompress=H;break;case"DWAA_COMPRESSION":s.lines=32,s.uncompress=k;break;case"DWAB_COMPRESSION":s.lines=256,s.uncompress=k;break;default:throw"EXRLoader.parse: "+e.compression+" is unsupported"}if(s.scanlineBlockSize=s.lines,1==s.type)switch(a){case i.FloatType:s.getter=J,s.inputSize=2;break;case i.HalfFloatType:s.getter=q,s.inputSize=2}else{if(2!=s.type)throw"EXRLoader.parse: unsupported pixelType "+s.type+" for "+e.compression+".";switch(a){case i.FloatType:s.getter=X,s.inputSize=4;break;case i.HalfFloatType:s.getter=Y,s.inputSize=4}}s.blockCount=(e.dataWindow.yMax+1)/s.scanlineBlockSize;for(var o=0;o<s.blockCount;o++)j(t,n);s.outputChannels=3==s.channels?4:s.channels;const l=s.width*s.height*s.outputChannels;switch(a){case i.FloatType:s.byteArray=new Float32Array(l),s.channels<s.outputChannels&&s.byteArray.fill(1,0,l);break;case i.HalfFloatType:s.byteArray=new Uint16Array(l),s.channels<s.outputChannels&&s.byteArray.fill(15360,0,l);break;default:console.error("THREE.EXRLoader: unsupported type: ",a)}return s.bytesPerLine=s.width*s.inputSize*s.channels,4==s.outputChannels?s.format=i.RGBAFormat:s.format=i.RedFormat,z?s.colorSpace="srgb-linear":s.encoding=3e3,s}(re,$,ee,te,this.type),ie={value:0},ae={R:0,G:1,B:2,A:3,Y:0};for(let i=0;i<ne.height/ne.scanlineBlockSize;i++){const e=W($,te);ne.size=W($,te),ne.lines=e+ne.scanlineBlockSize>ne.height?ne.height-e:ne.scanlineBlockSize;const t=ne.size<ne.lines*ne.bytesPerLine?ne.uncompress(ne):P(ne);te.value+=ne.size;for(let r=0;r<ne.scanlineBlockSize;r++){const e=r+i*ne.scanlineBlockSize;if(e>=ne.height)break;for(let n=0;n<ne.channels;n++){const i=ae[re.channels[n].name];for(let a=0;a<ne.width;a++){ie.value=(r*(ne.channels*ne.width)+n*ne.width+a)*ne.inputSize;const s=(ne.height-1-e)*(ne.width*ne.outputChannels)+a*ne.outputChannels+i;ne.byteArray[s]=ne.getter(t,ie)}}}}return{header:re,width:ne.width,height:ne.height,data:ne.byteArray,format:ne.format,[z?"colorSpace":"encoding"]:ne[z?"colorSpace":"encoding"],type:this.type}}setDataType(e){return this.type=e,this}load(e,t,r,n){return super.load(e,(function(e,r){z?e.colorSpace=r.colorSpace:e.encoding=r.encoding,e.minFilter=i.LinearFilter,e.magFilter=i.LinearFilter,e.generateMipmaps=!1,e.flipY=!1,t&&t(e,r)}),r,n)}}const O=(e,t,r)=>{let n;switch(e){case i.UnsignedByteType:n=new Uint8ClampedArray(t*r*4);break;case i.HalfFloatType:n=new Uint16Array(t*r*4);break;case i.UnsignedIntType:n=new Uint32Array(t*r*4);break;case i.ByteType:n=new Int8Array(t*r*4);break;case i.ShortType:n=new Int16Array(t*r*4);break;case i.IntType:n=new Int32Array(t*r*4);break;case i.FloatType:n=new Float32Array(t*r*4);break;default:throw new Error("Unsupported data type")}return n};let H;class k{constructor(e){var t,r,n,a,s,o,l,u,h,c,f,d,p,m,g,v;this._rendererIsDisposable=!1,this._supportsReadPixels=!0,this.render=()=>{this._renderer.setRenderTarget(this._renderTarget);try{this._renderer.render(this._scene,this._camera)}catch(ne){throw this._renderer.setRenderTarget(null),ne}this._renderer.setRenderTarget(null)},this._width=e.width,this._height=e.height,this._type=e.type,this._colorSpace=e.colorSpace;const y={format:i.RGBAFormat,depthBuffer:!1,stencilBuffer:!1,type:this._type,colorSpace:this._colorSpace,anisotropy:void 0!==(null===(t=e.renderTargetOptions)||void 0===t?void 0:t.anisotropy)?null===(r=e.renderTargetOptions)||void 0===r?void 0:r.anisotropy:1,generateMipmaps:void 0!==(null===(n=e.renderTargetOptions)||void 0===n?void 0:n.generateMipmaps)&&(null===(a=e.renderTargetOptions)||void 0===a?void 0:a.generateMipmaps),magFilter:void 0!==(null===(s=e.renderTargetOptions)||void 0===s?void 0:s.magFilter)?null===(o=e.renderTargetOptions)||void 0===o?void 0:o.magFilter:i.LinearFilter,minFilter:void 0!==(null===(l=e.renderTargetOptions)||void 0===l?void 0:l.minFilter)?null===(u=e.renderTargetOptions)||void 0===u?void 0:u.minFilter:i.LinearFilter,samples:void 0!==(null===(h=e.renderTargetOptions)||void 0===h?void 0:h.samples)?null===(c=e.renderTargetOptions)||void 0===c?void 0:c.samples:void 0,wrapS:void 0!==(null===(f=e.renderTargetOptions)||void 0===f?void 0:f.wrapS)?null===(d=e.renderTargetOptions)||void 0===d?void 0:d.wrapS:i.ClampToEdgeWrapping,wrapT:void 0!==(null===(p=e.renderTargetOptions)||void 0===p?void 0:p.wrapT)?null===(m=e.renderTargetOptions)||void 0===m?void 0:m.wrapT:i.ClampToEdgeWrapping};if(this._material=e.material,e.renderer?this._renderer=e.renderer:(this._renderer=k.instantiateRenderer(),this._rendererIsDisposable=!0),this._scene=new i.Scene,this._camera=new i.OrthographicCamera,this._camera.position.set(0,0,10),this._camera.left=-.5,this._camera.right=.5,this._camera.top=.5,this._camera.bottom=-.5,this._camera.updateProjectionMatrix(),!((e,t,r,n)=>{if(void 0!==H)return H;const a=new i.WebGLRenderTarget(1,1,n);t.setRenderTarget(a);const s=new i.Mesh(new i.PlaneGeometry,new i.MeshBasicMaterial({color:16777215}));t.render(s,r),t.setRenderTarget(null);const o=O(e,a.width,a.height);return t.readRenderTargetPixels(a,0,0,a.width,a.height,o),a.dispose(),s.geometry.dispose(),s.material.dispose(),H=0!==o[0],H})(this._type,this._renderer,this._camera,y)){let e;if(this._type===i.HalfFloatType)e=this._renderer.extensions.has("EXT_color_buffer_float")?i.FloatType:void 0;void 0!==e?(console.warn(`This browser does not support reading pixels from ${this._type} RenderTargets, switching to ${i.FloatType}`),this._type=e):(this._supportsReadPixels=!1,console.warn("This browser dos not support toArray or toDataTexture, calls to those methods will result in an error thrown"))}this._quad=new i.Mesh(new i.PlaneGeometry,this._material),this._quad.geometry.computeBoundingBox(),this._scene.add(this._quad),this._renderTarget=new i.WebGLRenderTarget(this.width,this.height,y),this._renderTarget.texture.mapping=void 0!==(null===(g=e.renderTargetOptions)||void 0===g?void 0:g.mapping)?null===(v=e.renderTargetOptions)||void 0===v?void 0:v.mapping:i.UVMapping}static instantiateRenderer(){const e=new i.WebGLRenderer;return e.setSize(128,128),e}toArray(){if(!this._supportsReadPixels)throw new Error("Can't read pixels in this browser");const e=O(this._type,this._width,this._height);return this._renderer.readRenderTargetPixels(this._renderTarget,0,0,this._width,this._height,e),e}toDataTexture(e){const t=new i.DataTexture(this.toArray(),this.width,this.height,i.RGBAFormat,this._type,(null==e?void 0:e.mapping)||i.UVMapping,(null==e?void 0:e.wrapS)||i.ClampToEdgeWrapping,(null==e?void 0:e.wrapT)||i.ClampToEdgeWrapping,(null==e?void 0:e.magFilter)||i.LinearFilter,(null==e?void 0:e.minFilter)||i.LinearFilter,(null==e?void 0:e.anisotropy)||1,i.LinearSRGBColorSpace);return t.generateMipmaps=void 0!==(null==e?void 0:e.generateMipmaps)&&(null==e?void 0:e.generateMipmaps),t}disposeOnDemandRenderer(){this._renderer.setRenderTarget(null),this._rendererIsDisposable&&(this._renderer.dispose(),this._renderer.forceContextLoss())}dispose(e){this.disposeOnDemandRenderer(),e&&this.renderTarget.dispose(),this.material instanceof i.ShaderMaterial&&Object.values(this.material.uniforms).forEach((e=>{e.value instanceof i.Texture&&e.value.dispose()})),Object.values(this.material).forEach((e=>{e instanceof i.Texture&&e.dispose()})),this.material.dispose(),this._quad.geometry.dispose()}get width(){return this._width}set width(e){this._width=e,this._renderTarget.setSize(this._width,this._height)}get height(){return this._height}set height(e){this._height=e,this._renderTarget.setSize(this._width,this._height)}get renderer(){return this._renderer}get renderTarget(){return this._renderTarget}set renderTarget(e){this._renderTarget=e,this._width=e.width,this._height=e.height}get material(){return this._material}get type(){return this._type}get colorSpace(){return this._colorSpace}}class G extends i.ShaderMaterial{constructor({gamma:e,offsetHdr:t,offsetSdr:r,gainMapMin:n,gainMapMax:a,maxDisplayBoost:s,hdrCapacityMin:o,hdrCapacityMax:l,sdr:u,gainMap:h}){super({name:"GainMapDecoderMaterial",vertexShader:"\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",fragmentShader:"\n// min half float value\n#define HALF_FLOAT_MIN vec3( -65504, -65504, -65504 )\n// max half float value\n#define HALF_FLOAT_MAX vec3( 65504, 65504, 65504 )\n\nuniform sampler2D sdr;\nuniform sampler2D gainMap;\nuniform vec3 gamma;\nuniform vec3 offsetHdr;\nuniform vec3 offsetSdr;\nuniform vec3 gainMapMin;\nuniform vec3 gainMapMax;\nuniform float weightFactor;\n\nvarying vec2 vUv;\n\nvoid main() {\n  vec3 rgb = texture2D( sdr, vUv ).rgb;\n  vec3 recovery = texture2D( gainMap, vUv ).rgb;\n  vec3 logRecovery = pow( recovery, gamma );\n  vec3 logBoost = gainMapMin * ( 1.0 - logRecovery ) + gainMapMax * logRecovery;\n  vec3 hdrColor = (rgb + offsetSdr) * exp2( logBoost * weightFactor ) - offsetHdr;\n  vec3 clampedHdrColor = max( HALF_FLOAT_MIN, min( HALF_FLOAT_MAX, hdrColor ));\n  gl_FragColor = vec4( clampedHdrColor , 1.0 );\n}\n",uniforms:{sdr:{value:u},gainMap:{value:h},gamma:{value:new i.Vector3(1/e[0],1/e[1],1/e[2])},offsetHdr:{value:(new i.Vector3).fromArray(t)},offsetSdr:{value:(new i.Vector3).fromArray(r)},gainMapMin:{value:(new i.Vector3).fromArray(n)},gainMapMax:{value:(new i.Vector3).fromArray(a)},weightFactor:{value:(Math.log2(s)-o)/(l-o)}},blending:i.NoBlending,depthTest:!1,depthWrite:!1}),this._maxDisplayBoost=s,this._hdrCapacityMin=o,this._hdrCapacityMax=l,this.needsUpdate=!0,this.uniformsNeedUpdate=!0}get sdr(){return this.uniforms.sdr.value}set sdr(e){this.uniforms.sdr.value=e}get gainMap(){return this.uniforms.gainMap.value}set gainMap(e){this.uniforms.gainMap.value=e}get offsetHdr(){return this.uniforms.offsetHdr.value.toArray()}set offsetHdr(e){this.uniforms.offsetHdr.value.fromArray(e)}get offsetSdr(){return this.uniforms.offsetSdr.value.toArray()}set offsetSdr(e){this.uniforms.offsetSdr.value.fromArray(e)}get gainMapMin(){return this.uniforms.gainMapMin.value.toArray()}set gainMapMin(e){this.uniforms.gainMapMin.value.fromArray(e)}get gainMapMax(){return this.uniforms.gainMapMax.value.toArray()}set gainMapMax(e){this.uniforms.gainMapMax.value.fromArray(e)}get gamma(){const e=this.uniforms.gamma.value;return[1/e.x,1/e.y,1/e.z]}set gamma(e){const t=this.uniforms.gamma.value;t.x=1/e[0],t.y=1/e[1],t.z=1/e[2]}get hdrCapacityMin(){return this._hdrCapacityMin}set hdrCapacityMin(e){this._hdrCapacityMin=e,this.calculateWeight()}get hdrCapacityMax(){return this._hdrCapacityMax}set hdrCapacityMax(e){this._hdrCapacityMax=e,this.calculateWeight()}get maxDisplayBoost(){return this._maxDisplayBoost}set maxDisplayBoost(e){this._maxDisplayBoost=Math.max(1,Math.min(65504,e)),this.calculateWeight()}calculateWeight(){const e=(Math.log2(this._maxDisplayBoost)-this._hdrCapacityMin)/(this._hdrCapacityMax-this._hdrCapacityMin);this.uniforms.weightFactor.value=Math.max(0,Math.min(1,e))}}class V extends Error{}class W extends Error{}const Q=(e,t,r)=>{var n;let i;const a=null===(n=e.attributes.getNamedItem(t))||void 0===n?void 0:n.nodeValue;if(a)i=a;else{const n=e.getElementsByTagName(t)[0];if(!n){if(r)return r;throw new Error(`Can't find ${t} in gainmap metadata`)}{const e=n.getElementsByTagName("rdf:li");if(3!==e.length)throw new Error(`Gainmap metadata contains an array of items for ${t} but its length is not 3`);i=Array.from(e).map((e=>e.innerHTML))}}return i};class Z{constructor(e){this.options={debug:!(!e||void 0===e.debug)&&e.debug,extractFII:!e||void 0===e.extractFII||e.extractFII,extractNonFII:!e||void 0===e.extractNonFII||e.extractNonFII}}extract(e){return new Promise(((t,r)=>{const n=this.options.debug,i=new DataView(e.buffer);if(65496!==i.getUint16(0))return void r(new Error("Not a valid jpeg"));const a=i.byteLength;let s,o=2,l=0;for(;o<a;){if(++l>250)return void r(new Error(`Found no marker after ${l} loops \ud83d\ude35`));if(255!==i.getUint8(o))return void r(new Error(`Not a valid marker at offset 0x${o.toString(16)}, found: 0x${i.getUint8(o).toString(16)}`));if(s=i.getUint8(o+1),n&&console.log(`Marker: ${s.toString(16)}`),226===s){n&&console.log("Found APP2 marker (0xffe2)");const e=o+4;if(1297106432===i.getUint32(e)){const n=e+4;let a;if(18761===i.getUint16(n))a=!1;else{if(19789!==i.getUint16(n))return void r(new Error("No valid endianness marker found in TIFF header"));a=!0}if(42!==i.getUint16(n+2,!a))return void r(new Error("Not valid TIFF data! (no 0x002A marker)"));const s=i.getUint32(n+4,!a);if(s<8)return void r(new Error("Not valid TIFF data! (First offset less than 8)"));const o=n+s,l=i.getUint16(o,!a),u=o+2;let h=0;for(let e=u;e<u+12*l;e+=12)45057===i.getUint16(e,!a)&&(h=i.getUint32(e+8,!a));const c=o+2+12*l+4,f=[];for(let e=c;e<c+16*h;e+=16){const t={MPType:i.getUint32(e,!a),size:i.getUint32(e+4,!a),dataOffset:i.getUint32(e+8,!a),dependantImages:i.getUint32(e+12,!a),start:-1,end:-1,isFII:!1};t.dataOffset?(t.start=n+t.dataOffset,t.isFII=!1):(t.start=0,t.isFII=!0),t.end=t.start+t.size,f.push(t)}if(this.options.extractNonFII&&f.length){const e=new Blob([i]),r=[];for(const t of f){if(t.isFII&&!this.options.extractFII)continue;const n=e.slice(t.start,t.end+1,"image/jpeg");r.push(n)}t(r)}}}o+=2+i.getUint16(o+2)}}))}}const j=async e=>{const t=(e=>{var t,r;let n;n="undefined"!=typeof TextDecoder?(new TextDecoder).decode(e):e.toString();let i=n.indexOf("<x:xmpmeta");const a=new DOMParser;for(;-1!==i;){const e=n.indexOf("x:xmpmeta>",i);n.slice(i,e+10);const s=n.slice(i,e+10);try{const e=a.parseFromString(s,"text/xml").getElementsByTagName("rdf:Description")[0],n=Q(e,"hdrgm:GainMapMin","0"),i=Q(e,"hdrgm:GainMapMax"),o=Q(e,"hdrgm:Gamma","1"),l=Q(e,"hdrgm:OffsetSDR","0.015625"),u=Q(e,"hdrgm:OffsetHDR","0.015625");let h=null===(t=e.attributes.getNamedItem("hdrgm:HDRCapacityMin"))||void 0===t?void 0:t.nodeValue;h||(h="0");const c=null===(r=e.attributes.getNamedItem("hdrgm:HDRCapacityMax"))||void 0===r?void 0:r.nodeValue;if(!c)throw new Error("Incomplete gainmap metadata");return{gainMapMin:Array.isArray(n)?n.map((e=>parseFloat(e))):[parseFloat(n),parseFloat(n),parseFloat(n)],gainMapMax:Array.isArray(i)?i.map((e=>parseFloat(e))):[parseFloat(i),parseFloat(i),parseFloat(i)],gamma:Array.isArray(o)?o.map((e=>parseFloat(e))):[parseFloat(o),parseFloat(o),parseFloat(o)],offsetSdr:Array.isArray(l)?l.map((e=>parseFloat(e))):[parseFloat(l),parseFloat(l),parseFloat(l)],offsetHdr:Array.isArray(u)?u.map((e=>parseFloat(e))):[parseFloat(u),parseFloat(u),parseFloat(u)],hdrCapacityMin:parseFloat(h),hdrCapacityMax:parseFloat(c)}}catch(ne){}i=n.indexOf("<x:xmpmeta",e)}})(e);if(!t)throw new W("Gain map XMP metadata not found");const r=new Z({extractFII:!0,extractNonFII:!0}),n=await r.extract(e);if(2!==n.length)throw new V("Gain map recovery image not found");return{sdr:new Uint8Array(await n[0].arrayBuffer()),gainMap:new Uint8Array(await n[1].arrayBuffer()),metadata:t}},X=e=>new Promise(((t,r)=>{const n=document.createElement("img");n.onload=()=>{t(n)},n.onerror=e=>{r(e)},n.src=URL.createObjectURL(e)}));class Y extends i.Loader{constructor(e,t){super(t),e&&(this._renderer=e),this._internalLoadingManager=new i.LoadingManager}setRenderer(e){return this._renderer=e,this}setRenderTargetOptions(e){return this._renderTargetOptions=e,this}prepareQuadRenderer(){this._renderer||console.warn("WARNING: An existing WebGL Renderer was not passed to this Loader constructor or in setRenderer, the result of this Loader will need to be converted to a Data Texture with toDataTexture() before you can use it in your renderer.");const e=new G({gainMapMax:[1,1,1],gainMapMin:[0,0,0],gamma:[1,1,1],offsetHdr:[1,1,1],offsetSdr:[1,1,1],hdrCapacityMax:1,hdrCapacityMin:0,maxDisplayBoost:1,gainMap:new i.Texture,sdr:new i.Texture});return new k({width:16,height:16,type:i.HalfFloatType,colorSpace:i.LinearSRGBColorSpace,material:e,renderer:this._renderer,renderTargetOptions:this._renderTargetOptions})}async render(e,t,r,n){const a=n?new Blob([n],{type:"image/jpeg"}):void 0,s=new Blob([r],{type:"image/jpeg"});let o,l,u=!1;if("undefined"==typeof createImageBitmap){const e=await Promise.all([a?X(a):Promise.resolve(void 0),X(s)]);l=e[0],o=e[1],u=!0}else{const e=await Promise.all([a?createImageBitmap(a,{imageOrientation:"flipY"}):Promise.resolve(void 0),createImageBitmap(s,{imageOrientation:"flipY"})]);l=e[0],o=e[1]}const h=new i.Texture(l||new ImageData(2,2),i.UVMapping,i.ClampToEdgeWrapping,i.ClampToEdgeWrapping,i.LinearFilter,i.LinearMipMapLinearFilter,i.RGBAFormat,i.UnsignedByteType,1,i.LinearSRGBColorSpace);h.flipY=u,h.needsUpdate=!0;const c=new i.Texture(o,i.UVMapping,i.ClampToEdgeWrapping,i.ClampToEdgeWrapping,i.LinearFilter,i.LinearMipMapLinearFilter,i.RGBAFormat,i.UnsignedByteType,1,i.SRGBColorSpace);c.flipY=u,c.needsUpdate=!0,e.width=o.width,e.height=o.height,e.material.gainMap=h,e.material.sdr=c,e.material.gainMapMin=t.gainMapMin,e.material.gainMapMax=t.gainMapMax,e.material.offsetHdr=t.offsetHdr,e.material.offsetSdr=t.offsetSdr,e.material.gamma=t.gamma,e.material.hdrCapacityMin=t.hdrCapacityMin,e.material.hdrCapacityMax=t.hdrCapacityMax,e.material.maxDisplayBoost=Math.pow(2,t.hdrCapacityMax),e.material.needsUpdate=!0,e.render()}}class K extends Y{load([e,t,r],n,a,s){const o=this.prepareQuadRenderer();let l,u,h;const c=async()=>{if(l&&u&&h){try{await this.render(o,h,l,u)}catch(i){return this.manager.itemError(e),this.manager.itemError(t),this.manager.itemError(r),"function"==typeof s&&s(i),void o.disposeOnDemandRenderer()}"function"==typeof n&&n(o),this.manager.itemEnd(e),this.manager.itemEnd(t),this.manager.itemEnd(r),o.disposeOnDemandRenderer()}};let f=!0,d=0,p=0,m=!0,g=0,v=0,y=!0,w=0,x=0;const S=()=>{if("function"==typeof a){a(new ProgressEvent("progress",{lengthComputable:f&&m&&y,loaded:p+v+x,total:d+g+w}))}};this.manager.itemStart(e),this.manager.itemStart(t),this.manager.itemStart(r);const b=new i.FileLoader(this._internalLoadingManager);b.setResponseType("arraybuffer"),b.setRequestHeader(this.requestHeader),b.setPath(this.path),b.setWithCredentials(this.withCredentials),b.load(e,(async e=>{if("string"==typeof e)throw new Error("Invalid sdr buffer");l=e,await c()}),(e=>{f=e.lengthComputable,p=e.loaded,d=e.total,S()}),(t=>{this.manager.itemError(e),"function"==typeof s&&s(t)}));const T=new i.FileLoader(this._internalLoadingManager);T.setResponseType("arraybuffer"),T.setRequestHeader(this.requestHeader),T.setPath(this.path),T.setWithCredentials(this.withCredentials),T.load(t,(async e=>{if("string"==typeof e)throw new Error("Invalid gainmap buffer");u=e,await c()}),(e=>{m=e.lengthComputable,v=e.loaded,g=e.total,S()}),(e=>{this.manager.itemError(t),"function"==typeof s&&s(e)}));const M=new i.FileLoader(this._internalLoadingManager);return M.setRequestHeader(this.requestHeader),M.setPath(this.path),M.setWithCredentials(this.withCredentials),M.load(r,(async e=>{if("string"!=typeof e)throw new Error("Invalid metadata string");h=JSON.parse(e),await c()}),(e=>{y=e.lengthComputable,x=e.loaded,w=e.total,S()}),(e=>{this.manager.itemError(r),"function"==typeof s&&s(e)})),o}}class q extends Y{load(e,t,r,n){const a=this.prepareQuadRenderer(),s=new i.FileLoader(this._internalLoadingManager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(this.withCredentials),this.manager.itemStart(e),s.load(e,(async r=>{if("string"==typeof r)throw new Error("Invalid buffer, received [string], was expecting [ArrayBuffer]");const i=new Uint8Array(r);let s,o,l;try{const e=await j(i);s=e.sdr,o=e.gainMap,l=e.metadata}catch(ne){if(!(ne instanceof W||ne instanceof V))throw ne;console.warn(`Failure to reconstruct an HDR image from ${e}: Gain map metadata not found in the file, HDRJPGLoader will render the SDR jpeg`),l={gainMapMin:[0,0,0],gainMapMax:[1,1,1],gamma:[1,1,1],hdrCapacityMin:0,hdrCapacityMax:1,offsetHdr:[0,0,0],offsetSdr:[0,0,0]},s=i}try{await this.render(a,l,s,o)}catch(u){return this.manager.itemError(e),"function"==typeof n&&n(u),void a.disposeOnDemandRenderer()}"function"==typeof t&&t(a),this.manager.itemEnd(e),a.disposeOnDemandRenderer()}),r,(t=>{this.manager.itemError(e),"function"==typeof n&&n(t)})),a}}const J={apartment:"lebombo_1k.hdr",city:"potsdamer_platz_1k.hdr",dawn:"kiara_1_dawn_1k.hdr",forest:"forest_slope_1k.hdr",lobby:"st_fagans_interior_1k.hdr",night:"dikhololo_night_1k.hdr",park:"rooitou_park_1k.hdr",studio:"studio_small_03_1k.hdr",sunset:"venice_sunset_1k.hdr",warehouse:"empty_warehouse_01_1k.hdr"},_=3e3,$=3001,ee="https://raw.githack.com/pmndrs/drei-assets/456060a26bbeb8fdf79326f224b6d99b8bcce736/hdri/",te=e=>Array.isArray(e);function re({files:e=["/px.png","/nx.png","/py.png","/ny.png","/pz.png","/nz.png"],path:t="",preset:r,encoding:s,extensions:o}={}){var l;let u,h=null,c=!1;if(r){if(!(r in J))throw new Error("Preset must be one of: "+Object.keys(J).join(", "));e=J[r],t=ee}const f=te(e)&&6===e.length,d=te(e)&&3===e.length&&e.some((e=>e.endsWith("json"))),p=te(e)?e[0]:e;if(c=te(e),u=f?"cube":d?"webp":p.startsWith("data:application/exr")?"exr":p.startsWith("data:application/hdr")?"hdr":p.startsWith("data:image/jpeg")?"jpg":null==(l=p.split(".").pop())||null==(l=l.split("?"))||null==(l=l.shift())?void 0:l.toLowerCase(),h="cube"===u?i.CubeTextureLoader:"hdr"===u?a:"exr"===u?N:"jpg"===u||"jpeg"===u?q:"webp"===u?K:null,!h)throw new Error("useEnvironment: Unrecognized file extension: "+e);const m=(0,n.A)((e=>e.gl)),g=(0,n.F)(h,c?[e]:e,(e=>{"webp"!==u&&"jpg"!==u&&"jpeg"!==u||e.setRenderer(m),null==e.setPath||e.setPath(t),o&&o(e)}));let v=c?g[0]:g;var y;"jpg"!==u&&"jpeg"!==u&&"webp"!==u||(v=null==(y=v.renderTarget)?void 0:y.texture);return v.mapping=f?i.CubeReflectionMapping:i.EquirectangularReflectionMapping,"colorSpace"in v?v.colorSpace=(null!=s?s:f)?"srgb":"srgb-linear":v.encoding=(null!=s?s:f)?$:_,v}},84933:(e,t)=>{"use strict";t.byteLength=function(e){var t=o(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,a=o(e),s=a[0],l=a[1],u=new i(function(e,t,r){return 3*(t+r)/4-r}(0,s,l)),h=0,c=l>0?s-4:s;for(r=0;r<c;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],u[h++]=t>>16&255,u[h++]=t>>8&255,u[h++]=255&t;2===l&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,u[h++]=255&t);1===l&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,u[h++]=t>>8&255,u[h++]=255&t);return u},t.fromByteArray=function(e){for(var t,n=e.length,i=n%3,a=[],s=16383,o=0,u=n-i;o<u;o+=s)a.push(l(e,o,o+s>u?u:o+s));1===i?(t=e[n-1],a.push(r[t>>2]+r[t<<4&63]+"==")):2===i&&(t=(e[n-2]<<8)+e[n-1],a.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return a.join("")};for(var r=[],n=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0;s<64;++s)r[s]=a[s],n[a.charCodeAt(s)]=s;function o(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function l(e,t,n){for(var i,a,s=[],o=t;o<n;o+=3)i=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),s.push(r[(a=i)>>18&63]+r[a>>12&63]+r[a>>6&63]+r[63&a]);return s.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},36533:(e,t,r)=>{"use strict";const n=r(84933),i=r(63328),a="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.hp=l,t.IS=50;const s=2147483647;function o(e){if(e>s)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,l.prototype),t}function l(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return c(e)}return u(e,t,r)}function u(e,t,r){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!l.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const r=0|m(e,t);let n=o(r);const i=n.write(e,t);i!==r&&(n=n.slice(0,i));return n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(K(e,Uint8Array)){const t=new Uint8Array(e);return d(t.buffer,t.byteOffset,t.byteLength)}return f(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(K(e,ArrayBuffer)||e&&K(e.buffer,ArrayBuffer))return d(e,t,r);if("undefined"!=typeof SharedArrayBuffer&&(K(e,SharedArrayBuffer)||e&&K(e.buffer,SharedArrayBuffer)))return d(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return l.from(n,t,r);const i=function(e){if(l.isBuffer(e)){const t=0|p(e.length),r=o(t);return 0===r.length||e.copy(r,0,0,t),r}if(void 0!==e.length)return"number"!=typeof e.length||q(e.length)?o(0):f(e);if("Buffer"===e.type&&Array.isArray(e.data))return f(e.data)}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return l.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function h(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function c(e){return h(e),o(e<0?0:0|p(e))}function f(e){const t=e.length<0?0:0|p(e.length),r=o(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function d(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,l.prototype),n}function p(e){if(e>=s)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s.toString(16)+" bytes");return 0|e}function m(e,t){if(l.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||K(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let i=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return j(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return X(e).length;default:if(i)return n?-1:j(e).length;t=(""+t).toLowerCase(),i=!0}}function g(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return U(this,t,r);case"utf8":case"utf-8":return A(this,t,r);case"ascii":return R(this,t,r);case"latin1":case"binary":return B(this,t,r);case"base64":return E(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function v(e,t,r){const n=e[t];e[t]=e[r],e[r]=n}function y(e,t,r,n,i){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),q(r=+r)&&(r=i?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(i)return-1;r=e.length-1}else if(r<0){if(!i)return-1;r=0}if("string"==typeof t&&(t=l.from(t,n)),l.isBuffer(t))return 0===t.length?-1:w(e,t,r,n,i);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):w(e,[t],r,n,i);throw new TypeError("val must be string, number or Buffer")}function w(e,t,r,n,i){let a,s=1,o=e.length,l=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;s=2,o/=2,l/=2,r/=2}function u(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(i){let n=-1;for(a=r;a<o;a++)if(u(e,a)===u(t,-1===n?0:a-n)){if(-1===n&&(n=a),a-n+1===l)return n*s}else-1!==n&&(a-=a-n),n=-1}else for(r+l>o&&(r=o-l),a=r;a>=0;a--){let r=!0;for(let n=0;n<l;n++)if(u(e,a+n)!==u(t,n)){r=!1;break}if(r)return a}return-1}function x(e,t,r,n){r=Number(r)||0;const i=e.length-r;n?(n=Number(n))>i&&(n=i):n=i;const a=t.length;let s;for(n>a/2&&(n=a/2),s=0;s<n;++s){const n=parseInt(t.substr(2*s,2),16);if(q(n))return s;e[r+s]=n}return s}function S(e,t,r,n){return Y(j(t,e.length-r),e,r,n)}function b(e,t,r,n){return Y(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function T(e,t,r,n){return Y(X(t),e,r,n)}function M(e,t,r,n){return Y(function(e,t){let r,n,i;const a=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)r=e.charCodeAt(s),n=r>>8,i=r%256,a.push(i),a.push(n);return a}(t,e.length-r),e,r,n)}function E(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function A(e,t,r){r=Math.min(e.length,r);const n=[];let i=t;for(;i<r;){const t=e[i];let a=null,s=t>239?4:t>223?3:t>191?2:1;if(i+s<=r){let r,n,o,l;switch(s){case 1:t<128&&(a=t);break;case 2:r=e[i+1],128==(192&r)&&(l=(31&t)<<6|63&r,l>127&&(a=l));break;case 3:r=e[i+1],n=e[i+2],128==(192&r)&&128==(192&n)&&(l=(15&t)<<12|(63&r)<<6|63&n,l>2047&&(l<55296||l>57343)&&(a=l));break;case 4:r=e[i+1],n=e[i+2],o=e[i+3],128==(192&r)&&128==(192&n)&&128==(192&o)&&(l=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&o,l>65535&&l<1114112&&(a=l))}}null===a?(a=65533,s=1):a>65535&&(a-=65536,n.push(a>>>10&1023|55296),a=56320|1023&a),n.push(a),i+=s}return function(e){const t=e.length;if(t<=D)return String.fromCharCode.apply(String,e);let r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=D));return r}(n)}l.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),l.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(l.prototype,"parent",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.buffer}}),Object.defineProperty(l.prototype,"offset",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.byteOffset}}),l.poolSize=8192,l.from=function(e,t,r){return u(e,t,r)},Object.setPrototypeOf(l.prototype,Uint8Array.prototype),Object.setPrototypeOf(l,Uint8Array),l.alloc=function(e,t,r){return function(e,t,r){return h(e),e<=0?o(e):void 0!==t?"string"==typeof r?o(e).fill(t,r):o(e).fill(t):o(e)}(e,t,r)},l.allocUnsafe=function(e){return c(e)},l.allocUnsafeSlow=function(e){return c(e)},l.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==l.prototype},l.compare=function(e,t){if(K(e,Uint8Array)&&(e=l.from(e,e.offset,e.byteLength)),K(t,Uint8Array)&&(t=l.from(t,t.offset,t.byteLength)),!l.isBuffer(e)||!l.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let i=0,a=Math.min(r,n);i<a;++i)if(e[i]!==t[i]){r=e[i],n=t[i];break}return r<n?-1:n<r?1:0},l.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return l.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const n=l.allocUnsafe(t);let i=0;for(r=0;r<e.length;++r){let t=e[r];if(K(t,Uint8Array))i+t.length>n.length?(l.isBuffer(t)||(t=l.from(t)),t.copy(n,i)):Uint8Array.prototype.set.call(n,t,i);else{if(!l.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(n,i)}i+=t.length}return n},l.byteLength=m,l.prototype._isBuffer=!0,l.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)v(this,t,t+1);return this},l.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)v(this,t,t+3),v(this,t+1,t+2);return this},l.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)v(this,t,t+7),v(this,t+1,t+6),v(this,t+2,t+5),v(this,t+3,t+4);return this},l.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?A(this,0,e):g.apply(this,arguments)},l.prototype.toLocaleString=l.prototype.toString,l.prototype.equals=function(e){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===l.compare(this,e)},l.prototype.inspect=function(){let e="";const r=t.IS;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"},a&&(l.prototype[a]=l.prototype.inspect),l.prototype.compare=function(e,t,r,n,i){if(K(e,Uint8Array)&&(e=l.from(e,e.offset,e.byteLength)),!l.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),t<0||r>e.length||n<0||i>this.length)throw new RangeError("out of range index");if(n>=i&&t>=r)return 0;if(n>=i)return-1;if(t>=r)return 1;if(this===e)return 0;let a=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(t>>>=0);const o=Math.min(a,s),u=this.slice(n,i),h=e.slice(t,r);for(let l=0;l<o;++l)if(u[l]!==h[l]){a=u[l],s=h[l];break}return a<s?-1:s<a?1:0},l.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},l.prototype.indexOf=function(e,t,r){return y(this,e,t,r,!0)},l.prototype.lastIndexOf=function(e,t,r){return y(this,e,t,r,!1)},l.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}const i=this.length-t;if((void 0===r||r>i)&&(r=i),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let a=!1;for(;;)switch(n){case"hex":return x(this,e,t,r);case"utf8":case"utf-8":return S(this,e,t,r);case"ascii":case"latin1":case"binary":return b(this,e,t,r);case"base64":return T(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return M(this,e,t,r);default:if(a)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),a=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const D=4096;function R(e,t,r){let n="";r=Math.min(e.length,r);for(let i=t;i<r;++i)n+=String.fromCharCode(127&e[i]);return n}function B(e,t,r){let n="";r=Math.min(e.length,r);for(let i=t;i<r;++i)n+=String.fromCharCode(e[i]);return n}function U(e,t,r){const n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let i="";for(let a=t;a<r;++a)i+=J[e[a]];return i}function C(e,t,r){const n=e.slice(t,r);let i="";for(let a=0;a<n.length-1;a+=2)i+=String.fromCharCode(n[a]+256*n[a+1]);return i}function F(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function P(e,t,r,n,i,a){if(!l.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<a)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function L(e,t,r,n,i){V(t,n,i,e,r,7);let a=Number(t&BigInt(4294967295));e[r++]=a,a>>=8,e[r++]=a,a>>=8,e[r++]=a,a>>=8,e[r++]=a;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,r}function I(e,t,r,n,i){V(t,n,i,e,r,7);let a=Number(t&BigInt(4294967295));e[r+7]=a,a>>=8,e[r+6]=a,a>>=8,e[r+5]=a,a>>=8,e[r+4]=a;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=s,s>>=8,e[r+2]=s,s>>=8,e[r+1]=s,s>>=8,e[r]=s,r+8}function z(e,t,r,n,i,a){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function N(e,t,r,n,a){return t=+t,r>>>=0,a||z(e,0,r,4),i.write(e,t,r,n,23,4),r+4}function O(e,t,r,n,a){return t=+t,r>>>=0,a||z(e,0,r,8),i.write(e,t,r,n,52,8),r+8}l.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,l.prototype),n},l.prototype.readUintLE=l.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||F(e,t,this.length);let n=this[e],i=1,a=0;for(;++a<t&&(i*=256);)n+=this[e+a]*i;return n},l.prototype.readUintBE=l.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||F(e,t,this.length);let n=this[e+--t],i=1;for(;t>0&&(i*=256);)n+=this[e+--t]*i;return n},l.prototype.readUint8=l.prototype.readUInt8=function(e,t){return e>>>=0,t||F(e,1,this.length),this[e]},l.prototype.readUint16LE=l.prototype.readUInt16LE=function(e,t){return e>>>=0,t||F(e,2,this.length),this[e]|this[e+1]<<8},l.prototype.readUint16BE=l.prototype.readUInt16BE=function(e,t){return e>>>=0,t||F(e,2,this.length),this[e]<<8|this[e+1]},l.prototype.readUint32LE=l.prototype.readUInt32LE=function(e,t){return e>>>=0,t||F(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},l.prototype.readUint32BE=l.prototype.readUInt32BE=function(e,t){return e>>>=0,t||F(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},l.prototype.readBigUInt64LE=_((function(e){W(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||Q(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,i=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(n)+(BigInt(i)<<BigInt(32))})),l.prototype.readBigUInt64BE=_((function(e){W(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||Q(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],i=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(i)})),l.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||F(e,t,this.length);let n=this[e],i=1,a=0;for(;++a<t&&(i*=256);)n+=this[e+a]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*t)),n},l.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||F(e,t,this.length);let n=t,i=1,a=this[e+--n];for(;n>0&&(i*=256);)a+=this[e+--n]*i;return i*=128,a>=i&&(a-=Math.pow(2,8*t)),a},l.prototype.readInt8=function(e,t){return e>>>=0,t||F(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},l.prototype.readInt16LE=function(e,t){e>>>=0,t||F(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},l.prototype.readInt16BE=function(e,t){e>>>=0,t||F(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},l.prototype.readInt32LE=function(e,t){return e>>>=0,t||F(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},l.prototype.readInt32BE=function(e,t){return e>>>=0,t||F(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},l.prototype.readBigInt64LE=_((function(e){W(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||Q(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),l.prototype.readBigInt64BE=_((function(e){W(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||Q(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)})),l.prototype.readFloatLE=function(e,t){return e>>>=0,t||F(e,4,this.length),i.read(this,e,!0,23,4)},l.prototype.readFloatBE=function(e,t){return e>>>=0,t||F(e,4,this.length),i.read(this,e,!1,23,4)},l.prototype.readDoubleLE=function(e,t){return e>>>=0,t||F(e,8,this.length),i.read(this,e,!0,52,8)},l.prototype.readDoubleBE=function(e,t){return e>>>=0,t||F(e,8,this.length),i.read(this,e,!1,52,8)},l.prototype.writeUintLE=l.prototype.writeUIntLE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){P(this,e,t,r,Math.pow(2,8*r)-1,0)}let i=1,a=0;for(this[t]=255&e;++a<r&&(i*=256);)this[t+a]=e/i&255;return t+r},l.prototype.writeUintBE=l.prototype.writeUIntBE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){P(this,e,t,r,Math.pow(2,8*r)-1,0)}let i=r-1,a=1;for(this[t+i]=255&e;--i>=0&&(a*=256);)this[t+i]=e/a&255;return t+r},l.prototype.writeUint8=l.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,1,255,0),this[t]=255&e,t+1},l.prototype.writeUint16LE=l.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeUint16BE=l.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeUint32LE=l.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},l.prototype.writeUint32BE=l.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigUInt64LE=_((function(e,t=0){return L(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),l.prototype.writeBigUInt64BE=_((function(e,t=0){return I(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),l.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);P(this,e,t,r,n-1,-n)}let i=0,a=1,s=0;for(this[t]=255&e;++i<r&&(a*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/a|0)-s&255;return t+r},l.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);P(this,e,t,r,n-1,-n)}let i=r-1,a=1,s=0;for(this[t+i]=255&e;--i>=0&&(a*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/a|0)-s&255;return t+r},l.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},l.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},l.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||P(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigInt64LE=_((function(e,t=0){return L(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),l.prototype.writeBigInt64BE=_((function(e,t=0){return I(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),l.prototype.writeFloatLE=function(e,t,r){return N(this,e,t,!0,r)},l.prototype.writeFloatBE=function(e,t,r){return N(this,e,t,!1,r)},l.prototype.writeDoubleLE=function(e,t,r){return O(this,e,t,!0,r)},l.prototype.writeDoubleBE=function(e,t,r){return O(this,e,t,!1,r)},l.prototype.copy=function(e,t,r,n){if(!l.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);const i=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),i},l.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!l.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){const t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;let i;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(i=t;i<r;++i)this[i]=e;else{const a=l.isBuffer(e)?e:l.from(e,n),s=a.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<r-t;++i)this[i+t]=a[i%s]}return this};const H={};function k(e,t,r){H[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function G(e){let t="",r=e.length;const n="-"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function V(e,t,r,n,i,a){if(e>r||e<t){const n="bigint"==typeof t?"n":"";let i;throw i=a>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(a+1)}${n}`:`>= -(2${n} ** ${8*(a+1)-1}${n}) and < 2 ** ${8*(a+1)-1}${n}`:`>= ${t}${n} and <= ${r}${n}`,new H.ERR_OUT_OF_RANGE("value",i,e)}!function(e,t,r){W(t,"offset"),void 0!==e[t]&&void 0!==e[t+r]||Q(t,e.length-(r+1))}(n,i,a)}function W(e,t){if("number"!=typeof e)throw new H.ERR_INVALID_ARG_TYPE(t,"number",e)}function Q(e,t,r){if(Math.floor(e)!==e)throw W(e,r),new H.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new H.ERR_BUFFER_OUT_OF_BOUNDS;throw new H.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}k("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),k("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),k("ERR_OUT_OF_RANGE",(function(e,t,r){let n=`The value of "${e}" is out of range.`,i=r;return Number.isInteger(r)&&Math.abs(r)>2**32?i=G(String(r)):"bigint"==typeof r&&(i=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(i=G(i)),i+="n"),n+=` It must be ${t}. Received ${i}`,n}),RangeError);const Z=/[^+/0-9A-Za-z-_]/g;function j(e,t){let r;t=t||1/0;const n=e.length;let i=null;const a=[];for(let s=0;s<n;++s){if(r=e.charCodeAt(s),r>55295&&r<57344){if(!i){if(r>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(s+1===n){(t-=3)>-1&&a.push(239,191,189);continue}i=r;continue}if(r<56320){(t-=3)>-1&&a.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(t-=3)>-1&&a.push(239,191,189);if(i=null,r<128){if((t-=1)<0)break;a.push(r)}else if(r<2048){if((t-=2)<0)break;a.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;a.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return a}function X(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(Z,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function Y(e,t,r,n){let i;for(i=0;i<n&&!(i+r>=t.length||i>=e.length);++i)t[i+r]=e[i];return i}function K(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function q(e){return e!=e}const J=function(){const e="0123456789abcdef",t=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let i=0;i<16;++i)t[n+i]=e[r]+e[i]}return t}();function _(e){return"undefined"==typeof BigInt?$:e}function $(){throw new Error("BigInt not supported")}},63328:(e,t)=>{t.read=function(e,t,r,n,i){var a,s,o=8*i-n-1,l=(1<<o)-1,u=l>>1,h=-7,c=r?i-1:0,f=r?-1:1,d=e[t+c];for(c+=f,a=d&(1<<-h)-1,d>>=-h,h+=o;h>0;a=256*a+e[t+c],c+=f,h-=8);for(s=a&(1<<-h)-1,a>>=-h,h+=n;h>0;s=256*s+e[t+c],c+=f,h-=8);if(0===a)a=1-u;else{if(a===l)return s?NaN:1/0*(d?-1:1);s+=Math.pow(2,n),a-=u}return(d?-1:1)*s*Math.pow(2,a-n)},t.write=function(e,t,r,n,i,a){var s,o,l,u=8*a-i-1,h=(1<<u)-1,c=h>>1,f=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:a-1,p=n?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,s=h):(s=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-s))<1&&(s--,l*=2),(t+=s+c>=1?f/l:f*Math.pow(2,1-c))*l>=2&&(s++,l/=2),s+c>=h?(o=0,s=h):s+c>=1?(o=(t*l-1)*Math.pow(2,i),s+=c):(o=t*Math.pow(2,c-1)*Math.pow(2,i),s=0));i>=8;e[r+d]=255&o,d+=p,o/=256,i-=8);for(s=s<<i|o,u+=i;u>0;e[r+d]=255&s,d+=p,s/=256,u-=8);e[r+d-p]|=128*m}},97452:(e,t,r)=>{"use strict";r.d(t,{s:()=>f,P:()=>h});var n=r(63159),i=r(57022),a=r(11855),s=r(89598),o=r(29043);let l;function u(){var e;if(void 0!==l)return l;try{let t;const r=document.createElement("canvas");return l=!(!window.WebGL2RenderingContext||!(t=r.getContext("webgl2"))),t&&(null==(e=t.getExtension("WEBGL_lose_context"))||e.loseContext()),l}catch(t){return l=!1}}const h=(0,a.createContext)(null),c=e=>(e.getAttributes()&o.IF.CONVOLUTION)===o.IF.CONVOLUTION,f=a.memo((0,a.forwardRef)((({children:e,camera:t,scene:r,resolutionScale:l,enabled:f=!0,renderPriority:d=1,autoClear:p=!0,depthBuffer:m,enableNormalPass:g,stencilBuffer:v,multisampling:y=8,frameBufferType:w=i.HalfFloatType},x)=>{const{gl:S,scene:b,camera:T,size:M}=(0,s.A)(),E=r||b,A=t||T,[D,R,B]=(0,a.useMemo)((()=>{const e=u(),t=new o.s0(S,{depthBuffer:m,stencilBuffer:v,multisampling:y>0&&e?y:0,frameBufferType:w});t.addPass(new o.AH(E,A));let r=null,n=null;return g&&(n=new o.Xe(E,A),n.enabled=!1,t.addPass(n),void 0!==l&&e&&(r=new o.SP({normalBuffer:n.texture,resolutionScale:l}),r.enabled=!1,t.addPass(r))),[t,n,r]}),[A,S,m,v,y,w,E,g,l]);(0,a.useEffect)((()=>null==D?void 0:D.setSize(M.width,M.height)),[D,M]),(0,s.C)(((e,t)=>{if(f){const e=S.autoClear;S.autoClear=p,v&&!p&&S.clearStencil(),D.render(t),S.autoClear=e}}),f?d:0);const U=(0,a.useRef)(null),C=(0,s.y)(U);(0,a.useLayoutEffect)((()=>{const e=[];if(U.current&&C.current&&D){const t=C.current.objects;for(let r=0;r<t.length;r++){const n=t[r];if(n instanceof o.Mj){const i=[n];if(!c(n)){let e=null;for(;(e=t[r+1])instanceof o.Mj&&!c(e);)i.push(e),r++}const a=new o.Vu(A,...i);e.push(a)}else n instanceof o.oF&&e.push(n)}for(const r of e)null==D||D.addPass(r);R&&(R.enabled=!0),B&&(B.enabled=!0)}return()=>{for(const t of e)null==D||D.removePass(t);R&&(R.enabled=!1),B&&(B.enabled=!1)}}),[D,e,A,R,B,C]),(0,a.useEffect)((()=>{const e=S.toneMapping;return S.toneMapping=i.NoToneMapping,()=>{S.toneMapping=e}}),[]);const F=(0,a.useMemo)((()=>({composer:D,normalPass:R,downSamplingPass:B,resolutionScale:l,camera:A,scene:E})),[D,R,B,l,A,E]);return(0,a.useImperativeHandle)(x,(()=>D),[D]),(0,n.jsx)(h.Provider,{value:F,children:(0,n.jsx)("group",{ref:U,children:e})})})))},63621:(e,t,r)=>{"use strict";r.d(t,{j:()=>b});var n=r(63159),i=r(11855),a=r(57022),s=r(29043),o=r(36533),l=Object.defineProperty,u=(e,t,r)=>(((e,t,r)=>{t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r})(e,"symbol"!=typeof t?t+"":t,r),r);class h extends a.BufferGeometry{constructor(){super(),u(this,"boundingSphere",new a.Sphere),this.setAttribute("position",new a.BufferAttribute(new Float32Array([-1,-1,3,-1,-1,3]),2)),this.setAttribute("uv",new a.BufferAttribute(new Float32Array([0,0,2,0,0,2]),2))}computeBoundingSphere(){}}const c=new h,f=new a.OrthographicCamera;class d{constructor(e){this._mesh=new a.Mesh(c,e),this._mesh.frustumCulled=!1}render(e){e.render(this._mesh,f)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}dispose(){this._mesh.material.dispose(),this._mesh.geometry.dispose()}}const p={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},sceneNormal:{value:null},projMat:{value:new a.Matrix4},viewMat:{value:new a.Matrix4},projViewMat:{value:new a.Matrix4},projectionMatrixInv:{value:new a.Matrix4},viewMatrixInv:{value:new a.Matrix4},cameraPos:{value:new a.Vector3},resolution:{value:new a.Vector2},time:{value:0},samples:{value:[]},samplesR:{value:[]},bluenoise:{value:null},distanceFalloff:{value:1},radius:{value:5},near:{value:.1},far:{value:1e3},logDepth:{value:!1},ortho:{value:!1},screenSpaceRadius:{value:!1}},depthWrite:!1,depthTest:!1,vertexShader:"\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = vec4(position, 1);\n}",fragmentShader:"\n    #define SAMPLES 16\n    #define FSAMPLES 16.0\nuniform sampler2D sceneDiffuse;\nuniform highp sampler2D sceneNormal;\nuniform highp sampler2D sceneDepth;\nuniform mat4 projectionMatrixInv;\nuniform mat4 viewMatrixInv;\nuniform mat4 projMat;\nuniform mat4 viewMat;\nuniform mat4 projViewMat;\nuniform vec3 cameraPos;\nuniform vec2 resolution;\nuniform float time;\nuniform vec3[SAMPLES] samples;\nuniform float[SAMPLES] samplesR;\nuniform float radius;\nuniform float distanceFalloff;\nuniform float near;\nuniform float far;\nuniform bool logDepth;\nuniform bool ortho;\nuniform bool screenSpaceRadius;\nuniform sampler2D bluenoise;\n    varying vec2 vUv;\n    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)\n    {\n        return (zFar * zNear) / (zFar - d * (zFar - zNear));\n    }\n    highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {\n      return nearZ + (farZ - nearZ) * d;\n    }\n    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {\n      float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;\n      float a = farZ / (farZ - nearZ);\n      float b = farZ * nearZ / (nearZ - farZ);\n      float linDepth = a + b / depth;\n      return ortho ? linearize_depth_ortho(\n        linDepth,\n        nearZ,\n        farZ\n      ) :linearize_depth(linDepth, nearZ, farZ);\n    }\n\n    vec3 getWorldPosLog(vec3 posS) {\n      vec2 uv = posS.xy;\n      float z = posS.z;\n      float nearZ =near;\n      float farZ = far;\n      float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;\n      float a = farZ / (farZ - nearZ);\n      float b = farZ * nearZ / (nearZ - farZ);\n      float linDepth = a + b / depth;\n      vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;\n      vec4 wpos = projectionMatrixInv * clipVec;\n      return wpos.xyz / wpos.w;\n    }\n    vec3 getWorldPos(float depth, vec2 coord) {\n      #ifdef LOGDEPTH\n        return getWorldPosLog(vec3(coord, depth));\n      #endif\n      float z = depth * 2.0 - 1.0;\n      vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);\n      vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;\n      // Perspective division\n     vec4 worldSpacePosition = viewSpacePosition;\n     worldSpacePosition.xyz /= worldSpacePosition.w;\n      return worldSpacePosition.xyz;\n  }\n\n  vec3 computeNormal(vec3 worldPos, vec2 vUv) {\n    ivec2 p = ivec2(vUv * resolution);\n    float c0 = texelFetch(sceneDepth, p, 0).x;\n    float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;\n    float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;\n    float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;\n    float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;\n    float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;\n    float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;\n    float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;\n    float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;\n\n    float dl = abs((2.0 * l1 - l2) - c0);\n    float dr = abs((2.0 * r1 - r2) - c0);\n    float db = abs((2.0 * b1 - b2) - c0);\n    float dt = abs((2.0 * t1 - t2) - c0);\n\n    vec3 ce = getWorldPos(c0, vUv).xyz;\n\n    vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz\n                          : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;\n    vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz\n                          : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;\n\n    return normalize(cross(dpdx, dpdy));\n}\n\nvoid main() {\n      vec4 diffuse = texture2D(sceneDiffuse, vUv);\n      float depth = texture2D(sceneDepth, vUv).x;\n      if (depth == 1.0) {\n        gl_FragColor = vec4(vec3(1.0), 1.0);\n        return;\n      }\n      vec3 worldPos = getWorldPos(depth, vUv);\n    //  vec3 normal = texture2D(sceneNormal, vUv).rgb;//computeNormal(worldPos, vUv);\n      #ifdef HALFRES\n        vec3 normal = texture2D(sceneNormal, vUv).rgb;\n      #else\n        vec3 normal = computeNormal(worldPos, vUv);\n      #endif\n      vec4 noise = texture2D(bluenoise, gl_FragCoord.xy / 128.0);\n      vec3 randomVec = normalize(noise.rgb * 2.0 - 1.0);\n      vec3 tangent = normalize(randomVec - normal * dot(randomVec, normal));\n      vec3 bitangent = cross(normal, tangent);\n      mat3 tbn = mat3(tangent, bitangent, normal);\n      float occluded = 0.0;\n      float totalWeight = 0.0;\n     /* float radiusScreen = distance(\n        worldPos,\n        getWorldPos(depth, vUv + \n          vec2(48.0, 0.0) / resolution)\n      );/*vUv.x < 0.5 ? radius : min(distance(\n        worldPos,\n        getWorldPos(depth, vUv + \n          vec2(100.0, 0.0) / resolution)\n      ), radius);\n      float distanceFalloffScreen = radiusScreen * 0.2;*/\n      float radiusToUse = screenSpaceRadius ? distance(\n        worldPos,\n        getWorldPos(depth, vUv +\n          vec2(radius, 0.0) / resolution)\n      ) : radius;\n      float distanceFalloffToUse =screenSpaceRadius ?\n          radiusToUse * distanceFalloff\n      : distanceFalloff;\n      float bias = (0.1 / near) * fwidth(distance(worldPos, cameraPos)) / radiusToUse;\n      for(float i = 0.0; i < FSAMPLES; i++) {\n        vec3 sampleDirection = \n        tbn * \n        samples[int(i)];\n        ;\n        float moveAmt = samplesR[int(mod(i + noise.a * FSAMPLES, FSAMPLES))];\n        vec3 samplePos = worldPos + radiusToUse * moveAmt * sampleDirection;\n        vec4 offset = projMat * vec4(samplePos, 1.0);\n        offset.xyz /= offset.w;\n        offset.xyz = offset.xyz * 0.5 + 0.5;\n        float sampleDepth = textureLod(sceneDepth, offset.xy, 0.0).x;\n        /*float distSample = logDepth ? linearize_depth_log(sampleDepth, near, far) \n         (ortho ?  linearize_depth_ortho(sampleDepth, near, far) : linearize_depth(sampleDepth, near, far));*/\n        #ifdef LOGDEPTH\n        float distSample = linearize_depth_log(sampleDepth, near, far);\n        #else\n        float distSample = ortho ? linearize_depth_ortho(sampleDepth, near, far) : linearize_depth(sampleDepth, near, far);\n        #endif\n        float distWorld = ortho ? linearize_depth_ortho(offset.z, near, far) : linearize_depth(offset.z, near, far);\n        float rangeCheck = smoothstep(0.0, 1.0, distanceFalloffToUse / (abs(distSample - distWorld)));\n        vec2 diff = gl_FragCoord.xy - ( offset.xy * resolution);\n        float weight = dot(sampleDirection, normal);\n          occluded += rangeCheck * weight * \n            (distSample + bias\n               < distWorld ? 1.0 : 0.0) * (\n          (dot(\n            diff,\n            diff\n             \n            ) < 1.0 || (sampleDepth == depth) || (\n              offset.x < 0.0 || offset.x > 1.0 || offset.y < 0.0 || offset.y > 1.0\n            ) ? 0.0 : 1.0)\n          );\n          totalWeight += weight;\n      }\n      float occ = clamp(1.0 - occluded / totalWeight, 0.0, 1.0);\n      gl_FragColor = vec4(0.5 + 0.5 * normal, occ);\n}"},m={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},tDiffuse:{value:null},projMat:{value:new a.Matrix4},viewMat:{value:new a.Matrix4},projectionMatrixInv:{value:new a.Matrix4},viewMatrixInv:{value:new a.Matrix4},cameraPos:{value:new a.Vector3},resolution:{value:new a.Vector2},color:{value:new a.Vector3(0,0,0)},blueNoise:{value:null},downsampledDepth:{value:null},time:{value:0},intensity:{value:10},renderMode:{value:0},gammaCorrection:{value:!1},logDepth:{value:!1},ortho:{value:!1},near:{value:.1},far:{value:1e3},screenSpaceRadius:{value:!1},radius:{value:0},distanceFalloff:{value:1},fog:{value:!1},fogExp:{value:!1},fogDensity:{value:0},fogNear:{value:1/0},fogFar:{value:1/0},colorMultiply:{value:!0}},depthWrite:!1,depthTest:!1,vertexShader:"\n\t\tvarying vec2 vUv;\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = vec4(position, 1);\n\t\t}",fragmentShader:"\n\t\tuniform sampler2D sceneDiffuse;\n    uniform highp sampler2D sceneDepth;\n    uniform highp sampler2D downsampledDepth;\n    uniform sampler2D tDiffuse;\n    uniform sampler2D blueNoise;\n    uniform vec2 resolution;\n    uniform vec3 color;\n    uniform mat4 projectionMatrixInv;\n    uniform mat4 viewMatrixInv;\n    uniform float intensity;\n    uniform float renderMode;\n    uniform float near;\n    uniform float far;\n    uniform bool gammaCorrection;\n    uniform bool logDepth;\n    uniform bool ortho;\n    uniform bool screenSpaceRadius;\n    uniform bool fog;\n    uniform bool fogExp;\n    uniform bool colorMultiply;\n    uniform float fogDensity;\n    uniform float fogNear;\n    uniform float fogFar;\n    uniform float radius;\n    uniform float distanceFalloff;\n    uniform vec3 cameraPos;\n    varying vec2 vUv;\n    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)\n    {\n        return (zFar * zNear) / (zFar - d * (zFar - zNear));\n    }\n    highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {\n      return nearZ + (farZ - nearZ) * d;\n    }\n    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {\n      float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;\n      float a = farZ / (farZ - nearZ);\n      float b = farZ * nearZ / (nearZ - farZ);\n      float linDepth = a + b / depth;\n      return ortho ? linearize_depth_ortho(\n        linDepth,\n        nearZ,\n        farZ\n      ) :linearize_depth(linDepth, nearZ, farZ);\n    }\n    vec3 getWorldPosLog(vec3 posS) {\n        vec2 uv = posS.xy;\n        float z = posS.z;\n        float nearZ =near;\n        float farZ = far;\n        float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;\n        float a = farZ / (farZ - nearZ);\n        float b = farZ * nearZ / (nearZ - farZ);\n        float linDepth = a + b / depth;\n        vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;\n        vec4 wpos = projectionMatrixInv * clipVec;\n        return wpos.xyz / wpos.w;\n      }\n      vec3 getWorldPos(float depth, vec2 coord) {\n       // if (logDepth) {\n        #ifdef LOGDEPTH\n          return getWorldPosLog(vec3(coord, depth));\n        #endif\n      //  }\n        float z = depth * 2.0 - 1.0;\n        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);\n        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;\n        // Perspective division\n       vec4 worldSpacePosition = viewSpacePosition;\n       worldSpacePosition.xyz /= worldSpacePosition.w;\n        return worldSpacePosition.xyz;\n    }\n  \n    vec3 computeNormal(vec3 worldPos, vec2 vUv) {\n      ivec2 p = ivec2(vUv * resolution);\n      float c0 = texelFetch(sceneDepth, p, 0).x;\n      float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;\n      float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;\n      float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;\n      float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;\n      float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;\n      float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;\n      float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;\n      float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;\n  \n      float dl = abs((2.0 * l1 - l2) - c0);\n      float dr = abs((2.0 * r1 - r2) - c0);\n      float db = abs((2.0 * b1 - b2) - c0);\n      float dt = abs((2.0 * t1 - t2) - c0);\n  \n      vec3 ce = getWorldPos(c0, vUv).xyz;\n  \n      vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz\n                            : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;\n      vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz\n                            : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;\n  \n      return normalize(cross(dpdx, dpdy));\n  }\n\n    #include <common>\n    #include <dithering_pars_fragment>\n    void main() {\n        //vec4 texel = texture2D(tDiffuse, vUv);//vec3(0.0);\n        vec4 sceneTexel = texture2D(sceneDiffuse, vUv);\n        float depth = texture2D(\n            sceneDepth,\n            vUv\n        ).x;\n        #ifdef HALFRES \n        vec4 texel;\n        if (depth == 1.0) {\n            texel = vec4(0.0, 0.0, 0.0, 1.0);\n        } else {\n        vec3 worldPos = getWorldPos(depth, vUv);\n        vec3 normal = computeNormal(getWorldPos(depth, vUv), vUv);\n       // vec4 texel = texture2D(tDiffuse, vUv);\n       // Find closest depth;\n       float totalWeight = 0.0;\n       float radiusToUse = screenSpaceRadius ? distance(\n        worldPos,\n        getWorldPos(depth, vUv +\n          vec2(radius, 0.0) / resolution)\n      ) : radius;\n      float distanceFalloffToUse =screenSpaceRadius ?\n          radiusToUse * distanceFalloff\n      : distanceFalloff;\n        for(float x = -1.0; x <= 1.0; x++) {\n            for(float y = -1.0; y <= 1.0; y++) {\n                vec2 offset = vec2(x, y);\n                ivec2 p = ivec2(\n                    (vUv * resolution * 0.5) + offset\n                );\n                vec2 pUv = vec2(p) / (resolution * 0.5);\n                float sampleDepth = texelFetch(downsampledDepth,p, 0).x;\n                vec4 sampleInfo = texelFetch(tDiffuse, p, 0);\n                vec3 normalSample = sampleInfo.xyz * 2.0 - 1.0;\n                vec3 worldPosSample = getWorldPos(sampleDepth, pUv);\n                float tangentPlaneDist = abs(dot(worldPos - worldPosSample, normal));\n                float rangeCheck = exp(-1.0 * tangentPlaneDist * (1.0 / distanceFalloffToUse)) * max(dot(normal, normalSample), 0.0);\n                float weight = rangeCheck;\n                totalWeight += weight;\n                texel += sampleInfo * weight;\n            }\n        }\n        if (totalWeight == 0.0) {\n            texel = texture2D(tDiffuse, vUv);\n        } else {\n            texel /= totalWeight;\n        }\n    }\n        #else\n        vec4 texel = texture2D(tDiffuse, vUv);\n        #endif\n\n        #ifdef LOGDEPTH\n        texel.a = clamp(texel.a, 0.0, 1.0);\n        if (texel.a == 0.0) {\n          texel.a = 1.0;\n        }\n        #endif\n     \n        float finalAo = pow(texel.a, intensity);\n        float fogFactor;\n        float fogDepth = distance(\n            cameraPos,\n            getWorldPos(depth, vUv)\n        );\n        if (fog) {\n            if (fogExp) {\n                fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n            } else {\n                fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n            }\n        }\n        finalAo = mix(finalAo, 1.0, fogFactor);\n        vec3 aoApplied = color * mix(vec3(1.0), sceneTexel.rgb, float(colorMultiply));\n        if (renderMode == 0.0) {\n            gl_FragColor = vec4( mix(sceneTexel.rgb, aoApplied, 1.0 - finalAo), sceneTexel.a);\n        } else if (renderMode == 1.0) {\n            gl_FragColor = vec4( mix(vec3(1.0), aoApplied, 1.0 - finalAo), sceneTexel.a);\n        } else if (renderMode == 2.0) {\n            gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);\n        } else if (renderMode == 3.0) {\n            if (vUv.x < 0.5) {\n                gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);\n            } else if (abs(vUv.x - 0.5) < 1.0 / resolution.x) {\n                gl_FragColor = vec4(1.0);\n            } else {\n                gl_FragColor = vec4( mix(sceneTexel.rgb, aoApplied, 1.0 - finalAo), sceneTexel.a);\n            }\n        } else if (renderMode == 4.0) {\n            if (vUv.x < 0.5) {\n                gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);\n            } else if (abs(vUv.x - 0.5) < 1.0 / resolution.x) {\n                gl_FragColor = vec4(1.0);\n            } else {\n                gl_FragColor = vec4( mix(vec3(1.0), aoApplied, 1.0 - finalAo), sceneTexel.a);\n            }\n        }\n        #include <dithering_fragment>\n        if (gammaCorrection) {\n            gl_FragColor = LinearTosRGB(gl_FragColor);\n        }\n    }\n    "},g={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},tDiffuse:{value:null},projMat:{value:new a.Matrix4},viewMat:{value:new a.Matrix4},projectionMatrixInv:{value:new a.Matrix4},viewMatrixInv:{value:new a.Matrix4},cameraPos:{value:new a.Vector3},resolution:{value:new a.Vector2},time:{value:0},r:{value:5},blueNoise:{value:null},radius:{value:12},worldRadius:{value:5},index:{value:0},poissonDisk:{value:[]},distanceFalloff:{value:1},near:{value:.1},far:{value:1e3},logDepth:{value:!1},screenSpaceRadius:{value:!1}},depthWrite:!1,depthTest:!1,vertexShader:"\n\t\tvarying vec2 vUv;\n\t\tvoid main() {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = vec4(position, 1.0);\n\t\t}",fragmentShader:"\n\t\tuniform sampler2D sceneDiffuse;\n    uniform highp sampler2D sceneDepth;\n    uniform sampler2D tDiffuse;\n    uniform sampler2D blueNoise;\n    uniform mat4 projectionMatrixInv;\n    uniform mat4 viewMatrixInv;\n    uniform vec2 resolution;\n    uniform float r;\n    uniform float radius;\n     uniform float worldRadius;\n    uniform float index;\n     uniform float near;\n     uniform float far;\n     uniform float distanceFalloff;\n     uniform bool logDepth;\n     uniform bool screenSpaceRadius;\n    varying vec2 vUv;\n\n    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)\n    {\n        highp float z_n = 2.0 * d - 1.0;\n        return 2.0 * zNear * zFar / (zFar + zNear - z_n * (zFar - zNear));\n    }\n    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {\n     float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;\n     float a = farZ / (farZ - nearZ);\n     float b = farZ * nearZ / (nearZ - farZ);\n     float linDepth = a + b / depth;\n     return linearize_depth(linDepth, nearZ, farZ);\n   }\n   highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {\n     return nearZ + (farZ - nearZ) * d;\n   }\n   vec3 getWorldPosLog(vec3 posS) {\n     vec2 uv = posS.xy;\n     float z = posS.z;\n     float nearZ =near;\n     float farZ = far;\n     float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;\n     float a = farZ / (farZ - nearZ);\n     float b = farZ * nearZ / (nearZ - farZ);\n     float linDepth = a + b / depth;\n     vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;\n     vec4 wpos = projectionMatrixInv * clipVec;\n     return wpos.xyz / wpos.w;\n   }\n    vec3 getWorldPos(float depth, vec2 coord) {\n     #ifdef LOGDEPTH\n          return getWorldPosLog(vec3(coord, depth));\n     #endif\n        \n        float z = depth * 2.0 - 1.0;\n        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);\n        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;\n        // Perspective division\n       vec4 worldSpacePosition = viewSpacePosition;\n       worldSpacePosition.xyz /= worldSpacePosition.w;\n        return worldSpacePosition.xyz;\n    }\n    #include <common>\n    #define NUM_SAMPLES 16\n    uniform vec2 poissonDisk[NUM_SAMPLES];\n    void main() {\n        const float pi = 3.14159;\n        vec2 texelSize = vec2(1.0 / resolution.x, 1.0 / resolution.y);\n        vec2 uv = vUv;\n        vec4 data = texture2D(tDiffuse, vUv);\n        float occlusion = data.a;\n        float baseOcc = data.a;\n        vec3 normal = data.rgb * 2.0 - 1.0;\n        float count = 1.0;\n        float d = texture2D(sceneDepth, vUv).x;\n        if (d == 1.0) {\n          gl_FragColor = data;\n          return;\n        }\n        vec3 worldPos = getWorldPos(d, vUv);\n        float size = radius;\n        float angle;\n        if (index == 0.0) {\n             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).x * PI2;\n        } else if (index == 1.0) {\n             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).y * PI2;\n        } else if (index == 2.0) {\n             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).z * PI2;\n        } else {\n             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).w * PI2;\n        }\n\n        mat2 rotationMatrix = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n        float radiusToUse = screenSpaceRadius ? distance(\n          worldPos,\n          getWorldPos(d, vUv +\n            vec2(worldRadius, 0.0) / resolution)\n        ) : worldRadius;\n        float distanceFalloffToUse =screenSpaceRadius ?\n            radiusToUse * distanceFalloff\n        : distanceFalloff;\n\n\n        for(int i = 0; i < NUM_SAMPLES; i++) {\n            vec2 offset = (rotationMatrix * poissonDisk[i]) * texelSize * size;\n            vec4 dataSample = texture2D(tDiffuse, uv + offset);\n            float occSample = dataSample.a;\n            vec3 normalSample = dataSample.rgb * 2.0 - 1.0;\n            float dSample = texture2D(sceneDepth, uv + offset).x;\n            vec3 worldPosSample = getWorldPos(dSample, uv + offset);\n            float tangentPlaneDist = abs(dot(worldPos - worldPosSample, normal));\n            float rangeCheck = dSample == 1.0 ? 0.0 :exp(-1.0 * tangentPlaneDist * (1.0 / distanceFalloffToUse)) * max(dot(normal, normalSample), 0.0) * (1.0 - abs(occSample - baseOcc));\n            occlusion += occSample * rangeCheck;\n            count += rangeCheck;\n        }\n        if (count > 0.0) {\n          occlusion /= count;\n        }\n        #ifdef LOGDEPTH\n          occlusion = clamp(occlusion, 0.0, 1.0);\n          if (occlusion == 0.0) {\n            occlusion = 1.0;\n          }\n        #endif\n        gl_FragColor = vec4(0.5 + 0.5 * normal, occlusion);\n    }\n    "},v={uniforms:{sceneDepth:{value:null},resolution:{value:new a.Vector2},near:{value:.1},far:{value:1e3},viewMatrixInv:{value:new a.Matrix4},projectionMatrixInv:{value:new a.Matrix4},logDepth:{value:!1}},depthWrite:!1,depthTest:!1,vertexShader:"\n    varying vec2 vUv;\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 1);\n    }",fragmentShader:"\n    uniform highp sampler2D sceneDepth;\n    uniform vec2 resolution;\n    uniform float near;\n    uniform float far;\n    uniform bool logDepth;\n    uniform mat4 viewMatrixInv;\n    uniform mat4 projectionMatrixInv;\n    varying vec2 vUv;\n    layout(location = 1) out vec4 gNormal;\n    vec3 getWorldPosLog(vec3 posS) {\n        vec2 uv = posS.xy;\n        float z = posS.z;\n        float nearZ =near;\n        float farZ = far;\n        float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;\n        float a = farZ / (farZ - nearZ);\n        float b = farZ * nearZ / (nearZ - farZ);\n        float linDepth = a + b / depth;\n        vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;\n        vec4 wpos = projectionMatrixInv * clipVec;\n        return wpos.xyz / wpos.w;\n      }\n      vec3 getWorldPos(float depth, vec2 coord) {\n        if (logDepth) {\n          return getWorldPosLog(vec3(coord, depth));\n        }\n        float z = depth * 2.0 - 1.0;\n        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);\n        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;\n        // Perspective division\n       vec4 worldSpacePosition = viewSpacePosition;\n       worldSpacePosition.xyz /= worldSpacePosition.w;\n        return worldSpacePosition.xyz;\n    }\n  \n    vec3 computeNormal(vec3 worldPos, vec2 vUv) {\n      ivec2 p = ivec2(vUv * resolution);\n      float c0 = texelFetch(sceneDepth, p, 0).x;\n      float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;\n      float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;\n      float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;\n      float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;\n      float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;\n      float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;\n      float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;\n      float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;\n  \n      float dl = abs((2.0 * l1 - l2) - c0);\n      float dr = abs((2.0 * r1 - r2) - c0);\n      float db = abs((2.0 * b1 - b2) - c0);\n      float dt = abs((2.0 * t1 - t2) - c0);\n  \n      vec3 ce = getWorldPos(c0, vUv).xyz;\n  \n      vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz\n                            : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;\n      vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz\n                            : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;\n  \n      return normalize(cross(dpdx, dpdy));\n  }\n    void main() {\n        vec2 uv = vUv - vec2(0.5) / resolution;\n        vec2 pixelSize = vec2(1.0) / resolution;\n        vec2[] uvSamples = vec2[4](\n            uv,\n            uv + vec2(pixelSize.x, 0.0),\n            uv + vec2(0.0, pixelSize.y),\n            uv + pixelSize\n        );\n        float depth00 = texture2D(sceneDepth, uvSamples[0]).r;\n        float depth10 = texture2D(sceneDepth, uvSamples[1]).r;\n        float depth01 = texture2D(sceneDepth, uvSamples[2]).r;\n        float depth11 = texture2D(sceneDepth, uvSamples[3]).r;\n        float minDepth = min(min(depth00, depth10), min(depth01, depth11));\n        float maxDepth = max(max(depth00, depth10), max(depth01, depth11));\n        float targetDepth = minDepth;\n        // Checkerboard pattern to avoid artifacts\n        if (mod(gl_FragCoord.x + gl_FragCoord.y, 2.0) > 0.5) { \n            targetDepth = maxDepth;\n        }\n        int chosenIndex = 0;\n        float[] samples = float[4](depth00, depth10, depth01, depth11);\n        for(int i = 0; i < 4; ++i) {\n            if (samples[i] == targetDepth) {\n                chosenIndex = i;\n                break;\n            }\n        }\n        gl_FragColor = vec4(samples[chosenIndex], 0.0, 0.0, 1.0);\n        gNormal = vec4(computeNormal(\n            getWorldPos(samples[chosenIndex], uvSamples[chosenIndex]), uvSamples[chosenIndex]\n        ), 0.0);\n       /* float[] samples = float[4](depth00, depth10, depth01, depth11);\n        float c = 0.25 * (depth00 + depth10 + depth01 + depth11);\n        float[] distances = float[4](depth00, depth10, depth01, depth11);\n        float maxDistance = max(max(distances[0], distances[1]), max(distances[2], distances[3]));\n\n        int remaining[3];\n        int rejected[3];\n        int i, j, k;\n\n        for(i = 0, j = 0, k = 0; i < 4; ++i) {\n            if (distances[i] < maxDistance) {\n                remaining[j++] = i;\n            } else {\n                rejected[k++] = i;\n            }\n        }\n        for(;j < 3;++j) {\n            remaining[j] = rejected[--k];\n        }\n        vec3 s = vec3(\n            samples[remaining[0]],\n            samples[remaining[1]],\n            samples[remaining[2]]\n        );\n        c = (s.x + s.y + s.z) / 3.0;\n\n        distances[0] = abs(c - s.x);\n        distances[1] = abs(c - s.y);\n        distances[2] = abs(c - s.z);\n\n        float minDistance = min(min(distances[0], distances[1]), distances[2]);\n\n        for(i = 0; i < 3; ++i) {\n            if (distances[i] == minDistance) {\n                break;\n            }\n        }*/\n      /*  gl_FragColor = vec4(samples[remaining[i]], 0.0, 0.0, 0.0);\n        gNormal = vec4(computeNormal(\n            getWorldPos(samples[remaining[i]], uvSamples[remaining[i]]), uvSamples[remaining[i]]\n        ), 0.0);*/\n    }"},y=o.hp.from("","base64");function w(e,t,r){if(t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE)){const n=t.getQueryParameter(e,t.QUERY_RESULT)/1e6;r.lastTime=n}else setTimeout((()=>{w(e,t,r)}),1)}class x extends s.oF{constructor(e,t,r=512,n=512){super(),this.width=r,this.height=n,this.clear=!0,this.camera=t,this.scene=e,this.autosetGamma=!0,this.configuration=new Proxy({aoSamples:16,aoRadius:5,denoiseSamples:8,denoiseRadius:12,distanceFalloff:1,intensity:5,denoiseIterations:2,renderMode:0,color:new a.Color(0,0,0),gammaCorrection:!0,logarithmicDepthBuffer:!1,screenSpaceRadius:!1,halfRes:!1,depthAwareUpsampling:!0,colorMultiply:!0},{set:(e,t,r)=>{const n=e[t];return e[t]=r,"aoSamples"===t&&n!==r&&this.configureAOPass(this.configuration.logarithmicDepthBuffer),"denoiseSamples"===t&&n!==r&&this.configureDenoisePass(this.configuration.logarithmicDepthBuffer),"halfRes"===t&&n!==r&&(this.configureAOPass(this.configuration.logarithmicDepthBuffer),this.configureHalfResTargets(),this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer),this.setSize(this.width,this.height)),"depthAwareUpsampling"===t&&n!==r&&this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer),"gammaCorrection"===t&&(this.autosetGamma=!1),!0}}),this.samples=[],this.samplesR=[],this.samplesDenoise=[],this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer),this.configureSampleDependentPasses(),this.configureHalfResTargets(),this.copyQuad=new d(new a.ShaderMaterial({uniforms:{tDiffuse:{value:null}},depthWrite:!1,vertexShader:"\n            varying vec2 vUv;\n            void main() {\n                vUv = uv;\n                gl_Position = vec4(position, 1);\n            }\n            ",fragmentShader:"\n            uniform sampler2D tDiffuse;\n            varying vec2 vUv;\n            void main() {\n                gl_FragColor = texture2D(tDiffuse, vUv);\n            }\n            "})),this.writeTargetInternal=new a.WebGLRenderTarget(this.width,this.height,{minFilter:a.LinearFilter,magFilter:a.LinearFilter,depthBuffer:!1}),this.readTargetInternal=new a.WebGLRenderTarget(this.width,this.height,{minFilter:a.LinearFilter,magFilter:a.LinearFilter,depthBuffer:!1}),this.outputTargetInternal=new a.WebGLRenderTarget(this.width,this.height,{minFilter:a.LinearFilter,magFilter:a.LinearFilter,depthBuffer:!1}),this.bluenoise=new a.DataTexture(y,128,128),this.bluenoise.colorSpace=a.NoColorSpace,this.bluenoise.wrapS=a.RepeatWrapping,this.bluenoise.wrapT=a.RepeatWrapping,this.bluenoise.minFilter=a.NearestFilter,this.bluenoise.magFilter=a.NearestFilter,this.bluenoise.needsUpdate=!0,this.lastTime=0,this.needsDepthTexture=!0,this.needsSwap=!0,this._r=new a.Vector2,this._c=new a.Color}configureHalfResTargets(){this.configuration.halfRes?(this.depthDownsampleTarget=new a.WebGLMultipleRenderTargets(this.width/2,this.height/2,2),this.depthDownsampleTarget.texture[0].format=a.RedFormat,this.depthDownsampleTarget.texture[0].type=a.FloatType,this.depthDownsampleTarget.texture[0].minFilter=a.NearestFilter,this.depthDownsampleTarget.texture[0].magFilter=a.NearestFilter,this.depthDownsampleTarget.texture[0].depthBuffer=!1,this.depthDownsampleTarget.texture[1].format=a.RGBAFormat,this.depthDownsampleTarget.texture[1].type=a.HalfFloatType,this.depthDownsampleTarget.texture[1].minFilter=a.NearestFilter,this.depthDownsampleTarget.texture[1].magFilter=a.NearestFilter,this.depthDownsampleTarget.texture[1].depthBuffer=!1,this.depthDownsampleQuad=new d(new a.ShaderMaterial(v))):(this.depthDownsampleTarget&&(this.depthDownsampleTarget.dispose(),this.depthDownsampleTarget=null),this.depthDownsampleQuad&&(this.depthDownsampleQuad.dispose(),this.depthDownsampleQuad=null))}configureSampleDependentPasses(){this.configureAOPass(this.configuration.logarithmicDepthBuffer),this.configureDenoisePass(this.configuration.logarithmicDepthBuffer)}configureAOPass(e=!1){this.samples=this.generateHemisphereSamples(this.configuration.aoSamples),this.samplesR=this.generateHemisphereSamplesR(this.configuration.aoSamples);const t={...p};t.fragmentShader=t.fragmentShader.replace("16",this.configuration.aoSamples).replace("16.0",this.configuration.aoSamples+".0"),e&&(t.fragmentShader="#define LOGDEPTH\n"+t.fragmentShader),this.configuration.halfRes&&(t.fragmentShader="#define HALFRES\n"+t.fragmentShader),this.effectShaderQuad?(this.effectShaderQuad.material.dispose(),this.effectShaderQuad.material=new a.ShaderMaterial(t)):this.effectShaderQuad=new d(new a.ShaderMaterial(t))}configureDenoisePass(e=!1){this.samplesDenoise=this.generateDenoiseSamples(this.configuration.denoiseSamples,11);const t={...g};t.fragmentShader=t.fragmentShader.replace("16",this.configuration.denoiseSamples),e&&(t.fragmentShader="#define LOGDEPTH\n"+t.fragmentShader),this.poissonBlurQuad?(this.poissonBlurQuad.material.dispose(),this.poissonBlurQuad.material=new a.ShaderMaterial(t)):this.poissonBlurQuad=new d(new a.ShaderMaterial(t))}configureEffectCompositer(e=!1){const t={...m};e&&(t.fragmentShader="#define LOGDEPTH\n"+t.fragmentShader),this.configuration.halfRes&&this.configuration.depthAwareUpsampling&&(t.fragmentShader="#define HALFRES\n"+t.fragmentShader),this.effectCompositerQuad?(this.effectCompositerQuad.material.dispose(),this.effectCompositerQuad.material=new a.ShaderMaterial(t)):this.effectCompositerQuad=new d(new a.ShaderMaterial(t))}generateHemisphereSamples(e){const t=[];for(let r=0;r<e;r++){const n=2.399963*r,i=Math.sqrt(r+.5)/Math.sqrt(e),s=i*Math.cos(n),o=i*Math.sin(n),l=Math.sqrt(1-(s*s+o*o));t.push(new a.Vector3(s,o,l))}return t}generateHemisphereSamplesR(e){let t=[];for(let r=0;r<e;r++)t.push((r+1)/e);return t}generateDenoiseSamples(e,t){const r=2*Math.PI*t/e,n=1/e,i=n,s=[];let o=n,l=0;for(let u=0;u<e;u++)s.push(new a.Vector2(Math.cos(l),Math.sin(l)).multiplyScalar(Math.pow(o,.75))),o+=i,l+=r;return s}setSize(e,t){this.width=e,this.height=t;const r=this.configuration.halfRes?.5:1;this.writeTargetInternal.setSize(e*r,t*r),this.readTargetInternal.setSize(e*r,t*r),this.configuration.halfRes&&this.depthDownsampleTarget.setSize(e*r,t*r),this.outputTargetInternal.setSize(e,t)}setDepthTexture(e){this.depthTexture=e}render(e,t,r){const n=e.xr.enabled;let i,s,o;e.xr.enabled=!1,e.capabilities.logarithmicDepthBuffer!==this.configuration.logarithmicDepthBuffer&&(this.configuration.logarithmicDepthBuffer=e.capabilities.logarithmicDepthBuffer,this.configureAOPass(this.configuration.logarithmicDepthBuffer),this.configureDenoisePass(this.configuration.logarithmicDepthBuffer),this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer)),t.texture.type!==this.outputTargetInternal.texture.type&&(this.outputTargetInternal.texture.type=t.texture.type,this.outputTargetInternal.texture.needsUpdate=!0),this.debugMode&&(i=e.getContext(),s=i.getExtension("EXT_disjoint_timer_query_webgl2"),null===s&&(console.error("EXT_disjoint_timer_query_webgl2 not available, disabling debug mode."),this.debugMode=!1)),this.debugMode&&(o=i.createQuery(),i.beginQuery(s.TIME_ELAPSED_EXT,o)),this.camera.updateMatrixWorld(),this._r.set(this.width,this.height);let l=this.configuration.aoRadius;this.configuration.halfRes&&this.configuration.screenSpaceRadius&&(l*=.5),this.configuration.halfRes&&(e.setRenderTarget(this.depthDownsampleTarget),this.depthDownsampleQuad.material.uniforms.sceneDepth.value=this.depthTexture,this.depthDownsampleQuad.material.uniforms.resolution.value=this._r,this.depthDownsampleQuad.material.uniforms.near.value=this.camera.near,this.depthDownsampleQuad.material.uniforms.far.value=this.camera.far,this.depthDownsampleQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.depthDownsampleQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.depthDownsampleQuad.material.uniforms.logDepth.value=this.configuration.logarithmicDepthBuffer,this.depthDownsampleQuad.render(e)),this.effectShaderQuad.material.uniforms.sceneDiffuse.value=t.texture,this.effectShaderQuad.material.uniforms.sceneDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[0]:this.depthTexture,this.effectShaderQuad.material.uniforms.sceneNormal.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[1]:null,this.effectShaderQuad.material.uniforms.projMat.value=this.camera.projectionMatrix,this.effectShaderQuad.material.uniforms.viewMat.value=this.camera.matrixWorldInverse,this.effectShaderQuad.material.uniforms.projViewMat.value=this.camera.projectionMatrix.clone().multiply(this.camera.matrixWorldInverse.clone()),this.effectShaderQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.effectShaderQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.effectShaderQuad.material.uniforms.cameraPos.value=this.camera.getWorldPosition(new a.Vector3),this.effectShaderQuad.material.uniforms.resolution.value=this.configuration.halfRes?this._r.clone().multiplyScalar(.5).floor():this._r,this.effectShaderQuad.material.uniforms.time.value=performance.now()/1e3,this.effectShaderQuad.material.uniforms.samples.value=this.samples,this.effectShaderQuad.material.uniforms.samplesR.value=this.samplesR,this.effectShaderQuad.material.uniforms.bluenoise.value=this.bluenoise,this.effectShaderQuad.material.uniforms.radius.value=l,this.effectShaderQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.effectShaderQuad.material.uniforms.near.value=this.camera.near,this.effectShaderQuad.material.uniforms.far.value=this.camera.far,this.effectShaderQuad.material.uniforms.logDepth.value=e.capabilities.logarithmicDepthBuffer,this.effectShaderQuad.material.uniforms.ortho.value=this.camera.isOrthographicCamera,this.effectShaderQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,e.setRenderTarget(this.writeTargetInternal),this.effectShaderQuad.render(e);for(let u=0;u<this.configuration.denoiseIterations;u++)[this.writeTargetInternal,this.readTargetInternal]=[this.readTargetInternal,this.writeTargetInternal],this.poissonBlurQuad.material.uniforms.tDiffuse.value=this.readTargetInternal.texture,this.poissonBlurQuad.material.uniforms.sceneDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[0]:this.depthTexture,this.poissonBlurQuad.material.uniforms.projMat.value=this.camera.projectionMatrix,this.poissonBlurQuad.material.uniforms.viewMat.value=this.camera.matrixWorldInverse,this.poissonBlurQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.poissonBlurQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.poissonBlurQuad.material.uniforms.cameraPos.value=this.camera.getWorldPosition(new a.Vector3),this.poissonBlurQuad.material.uniforms.resolution.value=this.configuration.halfRes?this._r.clone().multiplyScalar(.5).floor():this._r,this.poissonBlurQuad.material.uniforms.time.value=performance.now()/1e3,this.poissonBlurQuad.material.uniforms.blueNoise.value=this.bluenoise,this.poissonBlurQuad.material.uniforms.radius.value=this.configuration.denoiseRadius*(this.configuration.halfRes?.5:1),this.poissonBlurQuad.material.uniforms.worldRadius.value=l,this.poissonBlurQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.poissonBlurQuad.material.uniforms.index.value=u,this.poissonBlurQuad.material.uniforms.poissonDisk.value=this.samplesDenoise,this.poissonBlurQuad.material.uniforms.near.value=this.camera.near,this.poissonBlurQuad.material.uniforms.far.value=this.camera.far,this.poissonBlurQuad.material.uniforms.logDepth.value=e.capabilities.logarithmicDepthBuffer,this.poissonBlurQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,e.setRenderTarget(this.writeTargetInternal),this.poissonBlurQuad.render(e);this.effectCompositerQuad.material.uniforms.sceneDiffuse.value=t.texture,this.effectCompositerQuad.material.uniforms.sceneDepth.value=this.depthTexture,this.effectCompositerQuad.material.uniforms.near.value=this.camera.near,this.effectCompositerQuad.material.uniforms.far.value=this.camera.far,this.effectCompositerQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.effectCompositerQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.effectCompositerQuad.material.uniforms.logDepth.value=e.capabilities.logarithmicDepthBuffer,this.effectCompositerQuad.material.uniforms.ortho.value=this.camera.isOrthographicCamera,this.effectCompositerQuad.material.uniforms.downsampledDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[0]:this.depthTexture,this.effectCompositerQuad.material.uniforms.resolution.value=this._r,this.effectCompositerQuad.material.uniforms.blueNoise.value=this.bluenoise,this.effectCompositerQuad.material.uniforms.intensity.value=this.configuration.intensity,this.effectCompositerQuad.material.uniforms.renderMode.value=this.configuration.renderMode,this.effectCompositerQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,this.effectCompositerQuad.material.uniforms.radius.value=l,this.effectCompositerQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.effectCompositerQuad.material.uniforms.gammaCorrection.value=this.autosetGamma?this.renderToScreen:this.configuration.gammaCorrection,this.effectCompositerQuad.material.uniforms.tDiffuse.value=this.writeTargetInternal.texture,this.effectCompositerQuad.material.uniforms.color.value=this._c.copy(this.configuration.color).convertSRGBToLinear(),this.effectCompositerQuad.material.uniforms.colorMultiply.value=this.configuration.colorMultiply,this.effectCompositerQuad.material.uniforms.cameraPos.value=this.camera.getWorldPosition(new a.Vector3),this.effectCompositerQuad.material.uniforms.fog.value=!!this.scene.fog,this.scene.fog&&(this.scene.fog.isFog?(this.effectCompositerQuad.material.uniforms.fogExp.value=!1,this.effectCompositerQuad.material.uniforms.fogNear.value=this.scene.fog.near,this.effectCompositerQuad.material.uniforms.fogFar.value=this.scene.fog.far):this.scene.fog.isFogExp2?(this.effectCompositerQuad.material.uniforms.fogExp.value=!0,this.effectCompositerQuad.material.uniforms.fogDensity.value=this.scene.fog.density):console.error(`Unsupported fog type ${this.scene.fog.constructor.name} in SSAOPass.`)),e.setRenderTarget(this.outputTargetInternal),this.effectCompositerQuad.render(e),e.setRenderTarget(this.renderToScreen?null:r),this.copyQuad.material.uniforms.tDiffuse.value=this.outputTargetInternal.texture,this.copyQuad.render(e),this.debugMode&&(i.endQuery(s.TIME_ELAPSED_EXT),w(o,i,this)),e.xr.enabled=n}enableDebugMode(){this.debugMode=!0}disableDebugMode(){this.debugMode=!1}setDisplayMode(e){this.configuration.renderMode=["Combined","AO","No AO","Split","Split AO"].indexOf(e)}setQualityMode(e){"Performance"===e?(this.configuration.aoSamples=8,this.configuration.denoiseSamples=4,this.configuration.denoiseRadius=12):"Low"===e?(this.configuration.aoSamples=16,this.configuration.denoiseSamples=4,this.configuration.denoiseRadius=12):"Medium"===e?(this.configuration.aoSamples=16,this.configuration.denoiseSamples=8,this.configuration.denoiseRadius=12):"High"===e?(this.configuration.aoSamples=64,this.configuration.denoiseSamples=8,this.configuration.denoiseRadius=6):"Ultra"===e&&(this.configuration.aoSamples=64,this.configuration.denoiseSamples=16,this.configuration.denoiseRadius=6)}}var S=r(89598);const b=(0,i.forwardRef)((({halfRes:e,screenSpaceRadius:t,quality:r,depthAwareUpsampling:a=!0,aoRadius:s=5,aoSamples:o=16,denoiseSamples:l=4,denoiseRadius:u=12,distanceFalloff:h=1,intensity:c=1,color:f,renderMode:d=0},p)=>{const{camera:m,scene:g}=(0,S.A)(),v=(0,i.useMemo)((()=>new x(g,m)),[]);return(0,i.useLayoutEffect)((()=>{(0,S.j)(v.configuration,{color:f,aoRadius:s,distanceFalloff:h,intensity:c,aoSamples:o,denoiseSamples:l,denoiseRadius:u,screenSpaceRadius:t,renderMode:d,halfRes:e,depthAwareUpsampling:a})}),[t,f,s,h,c,o,l,u,d,e,a]),(0,i.useLayoutEffect)((()=>{r&&v.setQualityMode(r.charAt(0).toUpperCase()+r.slice(1))}),[r]),(0,n.jsx)("primitive",{ref:p,object:v})}))},29043:(e,t,r)=>{"use strict";r.d(t,{AH:()=>X,IF:()=>w,Mj:()=>H,SP:()=>de,Vu:()=>xe,Xe:()=>Se,cf:()=>B,i4:()=>ge,oF:()=>l,s0:()=>y,st:()=>ce});var n=r(57022),i=.001,a=class{constructor(){this.startTime=performance.now(),this.previousTime=0,this.currentTime=0,this._delta=0,this._elapsed=0,this._fixedDelta=1e3/60,this.timescale=1,this.useFixedDelta=!1,this._autoReset=!1}get autoReset(){return this._autoReset}set autoReset(e){"undefined"!=typeof document&&void 0!==document.hidden&&(e?document.addEventListener("visibilitychange",this):document.removeEventListener("visibilitychange",this),this._autoReset=e)}get delta(){return this._delta*i}get fixedDelta(){return this._fixedDelta*i}set fixedDelta(e){this._fixedDelta=1e3*e}get elapsed(){return this._elapsed*i}update(e){this.useFixedDelta?this._delta=this.fixedDelta:(this.previousTime=this.currentTime,this.currentTime=(void 0!==e?e:performance.now())-this.startTime,this._delta=this.currentTime-this.previousTime),this._delta*=this.timescale,this._elapsed+=this._delta}reset(){this._delta=0,this._elapsed=0,this.currentTime=performance.now()-this.startTime}getDelta(){return this.delta}getElapsed(){return this.elapsed}handleEvent(e){document.hidden||(this.currentTime=performance.now()-this.startTime)}dispose(){this.autoReset=!1}},s=new n.Camera,o=null;var l=class e{constructor(e="Pass",t=new n.Scene,r=s){this.name=e,this.renderer=null,this.scene=t,this.camera=r,this.screen=null,this.rtt=!0,this.needsSwap=!0,this.needsDepthTexture=!1,this.enabled=!0}get renderToScreen(){return!this.rtt}set renderToScreen(e){if(this.rtt===e){const t=this.fullscreenMaterial;null!==t&&(t.needsUpdate=!0),this.rtt=!e}}set mainScene(e){}set mainCamera(e){}setRenderer(e){this.renderer=e}isEnabled(){return this.enabled}setEnabled(e){this.enabled=e}get fullscreenMaterial(){return null!==this.screen?this.screen.material:null}set fullscreenMaterial(e){let t=this.screen;null!==t?t.material=e:(t=new n.Mesh(function(){if(null===o){const e=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),t=new Float32Array([0,0,2,0,0,2]);void 0!==(o=new n.BufferGeometry).setAttribute?(o.setAttribute("position",new n.BufferAttribute(e,3)),o.setAttribute("uv",new n.BufferAttribute(t,2))):(o.addAttribute("position",new n.BufferAttribute(e,3)),o.addAttribute("uv",new n.BufferAttribute(t,2)))}return o}(),e),t.frustumCulled=!1,null===this.scene&&(this.scene=new n.Scene),this.scene.add(t),this.screen=t)}getFullscreenMaterial(){return this.fullscreenMaterial}setFullscreenMaterial(e){this.fullscreenMaterial=e}getDepthTexture(){return null}setDepthTexture(e,t=n.BasicDepthPacking){}render(e,t,r,n,i){throw new Error("Render method not implemented!")}setSize(e,t){}initialize(e,t,r){}dispose(){for(const t of Object.keys(this)){const r=this[t];(r instanceof n.WebGLRenderTarget||r instanceof n.Material||r instanceof n.Texture||r instanceof e)&&this[t].dispose()}}},u=class extends l{constructor(){super("ClearMaskPass",null,null),this.needsSwap=!1}render(e,t,r,n,i){const a=e.state.buffers.stencil;a.setLocked(!1),a.setTest(!1)}},h=Number(n.REVISION.replace(/\D+/g,""));function c(e){return h<154?e.replace("colorspace_fragment","encodings_fragment"):e}var f="varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}",d=class extends n.ShaderMaterial{constructor(){super({name:"CopyMaterial",uniforms:{inputBuffer:new n.Uniform(null),opacity:new n.Uniform(1)},blending:n.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:"#include <common>\n#include <dithering_pars_fragment>\n#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\nuniform float opacity;varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=opacity*texel;\n#include <colorspace_fragment>\n#include <dithering_fragment>\n}",vertexShader:f}),this.fragmentShader=c(this.fragmentShader)}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}getOpacity(e){return this.uniforms.opacity.value}setOpacity(e){this.uniforms.opacity.value=e}},p=class extends l{constructor(e,t=!0){super("CopyPass"),this.fullscreenMaterial=new d,this.needsSwap=!1,this.renderTarget=e,void 0===e&&(this.renderTarget=new n.WebGLRenderTarget(1,1,{minFilter:n.LinearFilter,magFilter:n.LinearFilter,stencilBuffer:!1,depthBuffer:!1}),this.renderTarget.texture.name="CopyPass.Target"),this.autoResize=t}get resize(){return this.autoResize}set resize(e){this.autoResize=e}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}setAutoResizeEnabled(e){this.autoResize=e}render(e,t,r,n,i){this.fullscreenMaterial.inputBuffer=t.texture,e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){this.autoResize&&this.renderTarget.setSize(e,t)}initialize(e,t,r){void 0!==r&&(this.renderTarget.texture.type=r,r!==n.UnsignedByteType?this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1":null!==e&&e.outputColorSpace===n.SRGBColorSpace&&(this.renderTarget.texture.colorSpace=n.SRGBColorSpace))}},m=new n.Color,g=class extends l{constructor(e=!0,t=!0,r=!1){super("ClearPass",null,null),this.needsSwap=!1,this.color=e,this.depth=t,this.stencil=r,this.overrideClearColor=null,this.overrideClearAlpha=-1}setClearFlags(e,t,r){this.color=e,this.depth=t,this.stencil=r}getOverrideClearColor(){return this.overrideClearColor}setOverrideClearColor(e){this.overrideClearColor=e}getOverrideClearAlpha(){return this.overrideClearAlpha}setOverrideClearAlpha(e){this.overrideClearAlpha=e}render(e,t,r,n,i){const a=this.overrideClearColor,s=this.overrideClearAlpha,o=e.getClearAlpha(),l=null!==a,u=s>=0;l?(e.getClearColor(m),e.setClearColor(a,u?s:o)):u&&e.setClearAlpha(s),e.setRenderTarget(this.renderToScreen?null:t),e.clear(this.color,this.depth,this.stencil),l?e.setClearColor(m,o):u&&e.setClearAlpha(o)}},v=class extends l{constructor(e,t){super("MaskPass",e,t),this.needsSwap=!1,this.clearPass=new g(!1,!1,!0),this.inverse=!1}set mainScene(e){this.scene=e}set mainCamera(e){this.camera=e}get inverted(){return this.inverse}set inverted(e){this.inverse=e}get clear(){return this.clearPass.enabled}set clear(e){this.clearPass.enabled=e}getClearPass(){return this.clearPass}isInverted(){return this.inverted}setInverted(e){this.inverted=e}render(e,t,r,n,i){const a=e.getContext(),s=e.state.buffers,o=this.scene,l=this.camera,u=this.clearPass,h=this.inverted?0:1,c=1-h;s.color.setMask(!1),s.depth.setMask(!1),s.color.setLocked(!0),s.depth.setLocked(!0),s.stencil.setTest(!0),s.stencil.setOp(a.REPLACE,a.REPLACE,a.REPLACE),s.stencil.setFunc(a.ALWAYS,h,4294967295),s.stencil.setClear(c),s.stencil.setLocked(!0),this.clearPass.enabled&&(this.renderToScreen?u.render(e,null):(u.render(e,t),u.render(e,r))),this.renderToScreen?(e.setRenderTarget(null),e.render(o,l)):(e.setRenderTarget(t),e.render(o,l),e.setRenderTarget(r),e.render(o,l)),s.color.setLocked(!1),s.depth.setLocked(!1),s.stencil.setLocked(!1),s.stencil.setFunc(a.EQUAL,1,4294967295),s.stencil.setOp(a.KEEP,a.KEEP,a.KEEP),s.stencil.setLocked(!0)}},y=class{constructor(e=null,{depthBuffer:t=!0,stencilBuffer:r=!1,multisampling:n=0,frameBufferType:i}={}){this.renderer=null,this.inputBuffer=this.createBuffer(t,r,i,n),this.outputBuffer=this.inputBuffer.clone(),this.copyPass=new p,this.depthTexture=null,this.passes=[],this.timer=new a,this.autoRenderToScreen=!0,this.setRenderer(e)}get multisampling(){return this.inputBuffer.samples||0}set multisampling(e){const t=this.inputBuffer,r=this.multisampling;r>0&&e>0?(this.inputBuffer.samples=e,this.outputBuffer.samples=e,this.inputBuffer.dispose(),this.outputBuffer.dispose()):r!==e&&(this.inputBuffer.dispose(),this.outputBuffer.dispose(),this.inputBuffer=this.createBuffer(t.depthBuffer,t.stencilBuffer,t.texture.type,e),this.inputBuffer.depthTexture=this.depthTexture,this.outputBuffer=this.inputBuffer.clone())}getTimer(){return this.timer}getRenderer(){return this.renderer}setRenderer(e){if(this.renderer=e,null!==e){const t=e.getSize(new n.Vector2),r=e.getContext().getContextAttributes().alpha,i=this.inputBuffer.texture.type;i===n.UnsignedByteType&&e.outputColorSpace===n.SRGBColorSpace&&(this.inputBuffer.texture.colorSpace=n.SRGBColorSpace,this.outputBuffer.texture.colorSpace=n.SRGBColorSpace,this.inputBuffer.dispose(),this.outputBuffer.dispose()),e.autoClear=!1,this.setSize(t.width,t.height);for(const n of this.passes)n.initialize(e,r,i)}}replaceRenderer(e,t=!0){const r=this.renderer,n=r.domElement.parentNode;return this.setRenderer(e),t&&null!==n&&(n.removeChild(r.domElement),n.appendChild(e.domElement)),r}createDepthTexture(){const e=this.depthTexture=new n.DepthTexture;return this.inputBuffer.depthTexture=e,this.inputBuffer.dispose(),this.inputBuffer.stencilBuffer?(e.format=n.DepthStencilFormat,e.type=n.UnsignedInt248Type):e.type=n.UnsignedIntType,e}deleteDepthTexture(){if(null!==this.depthTexture){this.depthTexture.dispose(),this.depthTexture=null,this.inputBuffer.depthTexture=null,this.inputBuffer.dispose();for(const e of this.passes)e.setDepthTexture(null)}}createBuffer(e,t,r,i){const a=this.renderer,s=null===a?new n.Vector2:a.getDrawingBufferSize(new n.Vector2),o={minFilter:n.LinearFilter,magFilter:n.LinearFilter,stencilBuffer:t,depthBuffer:e,type:r},l=new n.WebGLRenderTarget(s.width,s.height,o);return i>0&&(l.ignoreDepthForMultisampleCopy=!1,l.samples=i),r===n.UnsignedByteType&&null!==a&&a.outputColorSpace===n.SRGBColorSpace&&(l.texture.colorSpace=n.SRGBColorSpace),l.texture.name="EffectComposer.Buffer",l.texture.generateMipmaps=!1,l}setMainScene(e){for(const t of this.passes)t.mainScene=e}setMainCamera(e){for(const t of this.passes)t.mainCamera=e}addPass(e,t){const r=this.passes,i=this.renderer,a=i.getDrawingBufferSize(new n.Vector2),s=i.getContext().getContextAttributes().alpha,o=this.inputBuffer.texture.type;if(e.setRenderer(i),e.setSize(a.width,a.height),e.initialize(i,s,o),this.autoRenderToScreen&&(r.length>0&&(r[r.length-1].renderToScreen=!1),e.renderToScreen&&(this.autoRenderToScreen=!1)),void 0!==t?r.splice(t,0,e):r.push(e),this.autoRenderToScreen&&(r[r.length-1].renderToScreen=!0),e.needsDepthTexture||null!==this.depthTexture)if(null===this.depthTexture){const t=this.createDepthTexture();for(e of r)e.setDepthTexture(t)}else e.setDepthTexture(this.depthTexture)}removePass(e){const t=this.passes,r=t.indexOf(e);if(-1!==r&&t.splice(r,1).length>0){if(null!==this.depthTexture){const r=(e,t)=>e||t.needsDepthTexture;t.reduce(r,!1)||(e.getDepthTexture()===this.depthTexture&&e.setDepthTexture(null),this.deleteDepthTexture())}this.autoRenderToScreen&&r===t.length&&(e.renderToScreen=!1,t.length>0&&(t[t.length-1].renderToScreen=!0))}}removeAllPasses(){const e=this.passes;this.deleteDepthTexture(),e.length>0&&(this.autoRenderToScreen&&(e[e.length-1].renderToScreen=!1),this.passes=[])}render(e){const t=this.renderer,r=this.copyPass;let n,i,a,s=this.inputBuffer,o=this.outputBuffer,l=!1;void 0===e&&(this.timer.update(),e=this.timer.getDelta());for(const h of this.passes)h.enabled&&(h.render(t,s,o,e,l),h.needsSwap&&(l&&(r.renderToScreen=h.renderToScreen,n=t.getContext(),i=t.state.buffers.stencil,i.setFunc(n.NOTEQUAL,1,4294967295),r.render(t,s,o,e,l),i.setFunc(n.EQUAL,1,4294967295)),a=s,s=o,o=a),h instanceof v?l=!0:h instanceof u&&(l=!1))}setSize(e,t,r){const i=this.renderer,a=i.getSize(new n.Vector2);void 0!==e&&void 0!==t||(e=a.width,t=a.height),a.width===e&&a.height===t||i.setSize(e,t,r);const s=i.getDrawingBufferSize(new n.Vector2);this.inputBuffer.setSize(s.width,s.height),this.outputBuffer.setSize(s.width,s.height);for(const n of this.passes)n.setSize(s.width,s.height)}reset(){this.dispose(),this.autoRenderToScreen=!0}dispose(){for(const e of this.passes)e.dispose();this.passes=[],null!==this.inputBuffer&&this.inputBuffer.dispose(),null!==this.outputBuffer&&this.outputBuffer.dispose(),this.deleteDepthTexture(),this.copyPass.dispose(),this.timer.dispose()}},w={NONE:0,DEPTH:1,CONVOLUTION:2},x={FRAGMENT_HEAD:"FRAGMENT_HEAD",FRAGMENT_MAIN_UV:"FRAGMENT_MAIN_UV",FRAGMENT_MAIN_IMAGE:"FRAGMENT_MAIN_IMAGE",VERTEX_HEAD:"VERTEX_HEAD",VERTEX_MAIN_SUPPORT:"VERTEX_MAIN_SUPPORT"},S=class{constructor(){this.shaderParts=new Map([[x.FRAGMENT_HEAD,null],[x.FRAGMENT_MAIN_UV,null],[x.FRAGMENT_MAIN_IMAGE,null],[x.VERTEX_HEAD,null],[x.VERTEX_MAIN_SUPPORT,null]]),this.defines=new Map,this.uniforms=new Map,this.blendModes=new Map,this.extensions=new Set,this.attributes=w.NONE,this.varyings=new Set,this.uvTransformation=!1,this.readDepth=!1,this.colorSpace=n.LinearSRGBColorSpace}};function b(e){let t;if(0===e)t=new Float64Array(0);else if(1===e)t=new Float64Array([1]);else if(e>1){let r=new Float64Array(e),n=new Float64Array(e);for(let i=1;i<=e;++i){for(let e=0;e<i;++e)n[e]=0===e||e===i-1?1:r[e-1]+r[e];t=n,n=r,r=t}}return t}var T=class{constructor(e,t=2){this.weights=null,this.offsets=null,this.linearWeights=null,this.linearOffsets=null,this.generate(e,t)}get steps(){return null===this.offsets?0:this.offsets.length}get linearSteps(){return null===this.linearOffsets?0:this.linearOffsets.length}generate(e,t){if(e<3||e>1020)throw new Error("The kernel size must be in the range [3, 1020]");const r=e+2*t,n=t>0?b(r).slice(t,-t):b(r),i=Math.floor((n.length-1)/2),a=n.reduce(((e,t)=>e+t),0),s=n.slice(i),o=[...Array(i+1).keys()],l=new Float64Array(Math.floor(o.length/2)),u=new Float64Array(l.length);l[0]=s[0]/a;for(let c=1,f=1,d=o.length-1;c<d;c+=2,++f){const e=o[c],t=o[c+1],r=s[c],n=s[c+1],i=r+n,h=(e*r+t*n)/i;l[f]=i/a,u[f]=h}for(let c=0,f=s.length,d=1/a;c<f;++c)s[c]*=d;const h=2*(l.reduce(((e,t)=>e+t),0)-.5*l[0]);if(0!==h)for(let c=0,f=l.length,d=1/h;c<f;++c)l[c]*=d;this.offsets=o,this.weights=s,this.linearOffsets=u,this.linearWeights=l}},M=!1,E=class{constructor(e=null){this.originalMaterials=new Map,this.material=null,this.materials=null,this.materialsBackSide=null,this.materialsDoubleSide=null,this.materialsFlatShaded=null,this.materialsFlatShadedBackSide=null,this.materialsFlatShadedDoubleSide=null,this.setMaterial(e),this.meshCount=0,this.replaceMaterial=e=>{if(e.isMesh){let t;if(e.material.flatShading)switch(e.material.side){case n.DoubleSide:t=this.materialsFlatShadedDoubleSide;break;case n.BackSide:t=this.materialsFlatShadedBackSide;break;default:t=this.materialsFlatShaded}else switch(e.material.side){case n.DoubleSide:t=this.materialsDoubleSide;break;case n.BackSide:t=this.materialsBackSide;break;default:t=this.materials}this.originalMaterials.set(e,e.material),e.isSkinnedMesh?e.material=t[2]:e.isInstancedMesh?e.material=t[1]:e.material=t[0],++this.meshCount}}}cloneMaterial(e){if(!(e instanceof n.ShaderMaterial))return e.clone();const t=e.uniforms,r=new Map;for(const n in t){const e=t[n].value;e.isRenderTargetTexture&&(t[n].value=null,r.set(n,e))}const i=e.clone();for(const n of r)t[n[0]].value=n[1],i.uniforms[n[0]].value=n[1];return i}setMaterial(e){if(this.disposeMaterials(),this.material=e,null!==e){const t=this.materials=[this.cloneMaterial(e),this.cloneMaterial(e),this.cloneMaterial(e)];for(const r of t)r.uniforms=Object.assign({},e.uniforms),r.side=n.FrontSide;t[2].skinning=!0,this.materialsBackSide=t.map((t=>{const r=this.cloneMaterial(t);return r.uniforms=Object.assign({},e.uniforms),r.side=n.BackSide,r})),this.materialsDoubleSide=t.map((t=>{const r=this.cloneMaterial(t);return r.uniforms=Object.assign({},e.uniforms),r.side=n.DoubleSide,r})),this.materialsFlatShaded=t.map((t=>{const r=this.cloneMaterial(t);return r.uniforms=Object.assign({},e.uniforms),r.flatShading=!0,r})),this.materialsFlatShadedBackSide=t.map((t=>{const r=this.cloneMaterial(t);return r.uniforms=Object.assign({},e.uniforms),r.flatShading=!0,r.side=n.BackSide,r})),this.materialsFlatShadedDoubleSide=t.map((t=>{const r=this.cloneMaterial(t);return r.uniforms=Object.assign({},e.uniforms),r.flatShading=!0,r.side=n.DoubleSide,r}))}}render(e,t,r){const n=e.shadowMap.enabled;if(e.shadowMap.enabled=!1,M){const n=this.originalMaterials;this.meshCount=0,t.traverse(this.replaceMaterial),e.render(t,r);for(const e of n)e[0].material=e[1];this.meshCount!==n.size&&n.clear()}else{const n=t.overrideMaterial;t.overrideMaterial=this.material,e.render(t,r),t.overrideMaterial=n}e.shadowMap.enabled=n}disposeMaterials(){if(null!==this.material){const e=this.materials.concat(this.materialsBackSide).concat(this.materialsDoubleSide).concat(this.materialsFlatShaded).concat(this.materialsFlatShadedBackSide).concat(this.materialsFlatShadedDoubleSide);for(const t of e)t.dispose()}}dispose(){this.originalMaterials.clear(),this.disposeMaterials()}static get workaroundEnabled(){return M}static set workaroundEnabled(e){M=e}},A=-1,D=class extends n.EventDispatcher{constructor(e,t=-1,r=-1,i=1){super(),this.resizable=e,this.baseSize=new n.Vector2(1,1),this.preferredSize=new n.Vector2(t,r),this.target=this.preferredSize,this.s=i,this.effectiveSize=new n.Vector2,this.addEventListener("change",(()=>this.updateEffectiveSize())),this.updateEffectiveSize()}updateEffectiveSize(){const e=this.baseSize,t=this.preferredSize,r=this.effectiveSize,n=this.scale;t.width!==A?r.width=t.width:t.height!==A?r.width=Math.round(t.height*(e.width/Math.max(e.height,1))):r.width=Math.round(e.width*n),t.height!==A?r.height=t.height:t.width!==A?r.height=Math.round(t.width/Math.max(e.width/Math.max(e.height,1),1)):r.height=Math.round(e.height*n)}get width(){return this.effectiveSize.width}set width(e){this.preferredWidth=e}get height(){return this.effectiveSize.height}set height(e){this.preferredHeight=e}getWidth(){return this.width}getHeight(){return this.height}get scale(){return this.s}set scale(e){this.s!==e&&(this.s=e,this.preferredSize.setScalar(A),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getScale(){return this.scale}setScale(e){this.scale=e}get baseWidth(){return this.baseSize.width}set baseWidth(e){this.baseSize.width!==e&&(this.baseSize.width=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseWidth(){return this.baseWidth}setBaseWidth(e){this.baseWidth=e}get baseHeight(){return this.baseSize.height}set baseHeight(e){this.baseSize.height!==e&&(this.baseSize.height=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseHeight(){return this.baseHeight}setBaseHeight(e){this.baseHeight=e}setBaseSize(e,t){this.baseSize.width===e&&this.baseSize.height===t||(this.baseSize.set(e,t),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}get preferredWidth(){return this.preferredSize.width}set preferredWidth(e){this.preferredSize.width!==e&&(this.preferredSize.width=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredWidth(){return this.preferredWidth}setPreferredWidth(e){this.preferredWidth=e}get preferredHeight(){return this.preferredSize.height}set preferredHeight(e){this.preferredSize.height!==e&&(this.preferredSize.height=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredHeight(){return this.preferredHeight}setPreferredHeight(e){this.preferredHeight=e}setPreferredSize(e,t){this.preferredSize.width===e&&this.preferredSize.height===t||(this.preferredSize.set(e,t),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}copy(e){this.s=e.scale,this.baseSize.set(e.baseWidth,e.baseHeight),this.preferredSize.set(e.preferredWidth,e.preferredHeight),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height)}static get AUTO_SIZE(){return A}},R=class extends Set{constructor(e,t=10){super(),this.l=t,this.exclusive=!1,void 0!==e&&this.set(e)}get layer(){return this.l}set layer(e){const t=this.l;for(const r of this)r.layers.disable(t),r.layers.enable(e);this.l=e}getLayer(){return this.layer}setLayer(e){this.layer=e}isExclusive(){return this.exclusive}setExclusive(e){this.exclusive=e}clear(){const e=this.layer;for(const t of this)t.layers.disable(e);return super.clear()}set(e){this.clear();for(const t of e)this.add(t);return this}indexOf(e){return this.has(e)?0:-1}add(e){return this.exclusive?e.layers.set(this.layer):e.layers.enable(this.layer),super.add(e)}delete(e){return this.has(e)&&e.layers.disable(this.layer),super.delete(e)}toggle(e){let t;return this.has(e)?(this.delete(e),t=!1):(this.add(e),t=!0),t}setVisible(e){for(const t of this)e?t.layers.enable(0):t.layers.disable(0);return this}},B={SKIP:9,SET:30,ADD:0,ALPHA:1,AVERAGE:2,COLOR:3,COLOR_BURN:4,COLOR_DODGE:5,DARKEN:6,DIFFERENCE:7,DIVIDE:8,DST:9,EXCLUSION:10,HARD_LIGHT:11,HARD_MIX:12,HUE:13,INVERT:14,INVERT_RGB:15,LIGHTEN:16,LINEAR_BURN:17,LINEAR_DODGE:18,LINEAR_LIGHT:19,LUMINOSITY:20,MULTIPLY:21,NEGATION:22,NORMAL:23,OVERLAY:24,PIN_LIGHT:25,REFLECT:26,SATURATION:27,SCREEN:28,SOFT_LIGHT:29,SRC:30,SUBTRACT:31,VIVID_LIGHT:32},U=new Map([[B.ADD,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y,opacity);}"],[B.ALPHA,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,min(y.a,opacity));}"],[B.AVERAGE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y)*0.5,opacity);}"],[B.COLOR,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.rg,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[B.COLOR_BURN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(step(0.0,y)*(1.0-min(vec4(1.0),(1.0-x)/y)),vec4(1.0),step(1.0,x));return mix(x,z,opacity);}"],[B.COLOR_DODGE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=step(0.0,x)*mix(min(vec4(1.0),x/max(1.0-y,1e-9)),vec4(1.0),step(1.0,y));return mix(x,z,opacity);}"],[B.DARKEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x,y),opacity);}"],[B.DIFFERENCE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,abs(x-y),opacity);}"],[B.DIVIDE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x/max(y,1e-12),opacity);}"],[B.DST,null],[B.EXCLUSION,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y-2.0*x*y),opacity);}"],[B.HARD_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 a=min(x,1.0),b=min(y,1.0);vec4 z=mix(2.0*a*b,1.0-2.0*(1.0-a)*(1.0-b),step(0.5,y));return mix(x,z,opacity);}"],[B.HARD_MIX,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,step(1.0,x+y),opacity);}"],[B.HUE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.r,xHSL.gb));return vec4(mix(x.rgb,z,opacity),y.a);}"],[B.INVERT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-y,opacity);}"],[B.INVERT_RGB,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y*(1.0-x),opacity);}"],[B.LIGHTEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x,y),opacity);}"],[B.LINEAR_BURN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(y+x-1.0,0.0,1.0),opacity);}"],[B.LINEAR_DODGE,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x+y,1.0),opacity);}"],[B.LINEAR_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(2.0*y+x-1.0,0.0,1.0),opacity);}"],[B.LUMINOSITY,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.rg,yHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[B.MULTIPLY,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x*y,opacity);}"],[B.NEGATION,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-abs(1.0-x-y),opacity);}"],[B.NORMAL,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,opacity);}"],[B.OVERLAY,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(2.0*y*x,1.0-2.0*(1.0-y)*(1.0-x),step(0.5,x));return mix(x,z,opacity);}"],[B.PIN_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 z=mix(mix(y2,x,step(0.5*x,y)),max(vec4(0.0),y2-1.0),step(x,(y2-1.0)));return mix(x,z,opacity);}"],[B.REFLECT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(min(x*x/max(1.0-y,1e-12),1.0),y,step(1.0,y));return mix(x,z,opacity);}"],[B.SATURATION,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.r,yHSL.g,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}"],[B.SCREEN,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y-min(x*y,1.0),opacity);}"],[B.SOFT_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 w=step(0.5,y);vec4 z=mix(x-(1.0-y2)*x*(1.0-x),mix(x+(y2-1.0)*(sqrt(x)-x),x+(y2-1.0)*x*((16.0*x-12.0)*x+3.0),w*(1.0-step(0.25,x))),w);return mix(x,z,opacity);}"],[B.SRC,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y;}"],[B.SUBTRACT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x+y-1.0,0.0),opacity);}"],[B.VIVID_LIGHT,"vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(max(1.0-min((1.0-x)/(2.0*y),1.0),0.0),min(x/(2.0*(1.0-y)),1.0),step(0.5,y));return mix(x,z,opacity);}"]]),C=class extends n.EventDispatcher{constructor(e,t=1){super(),this._blendFunction=e,this.opacity=new n.Uniform(t)}getOpacity(){return this.opacity.value}setOpacity(e){this.opacity.value=e}get blendFunction(){return this._blendFunction}set blendFunction(e){this._blendFunction=e,this.dispatchEvent({type:"change"})}getBlendFunction(){return this.blendFunction}setBlendFunction(e){this.blendFunction=e}getShaderCode(){return U.get(this.blendFunction)}},F=0,P=2,L=[new Float32Array([0,0]),new Float32Array([0,1,1]),new Float32Array([0,1,1,2]),new Float32Array([0,1,2,2,3]),new Float32Array([0,1,2,3,4,4,5]),new Float32Array([0,1,2,3,4,5,7,8,9,10])],I=class extends n.ShaderMaterial{constructor(e=new n.Vector4){super({name:"KawaseBlurMaterial",uniforms:{inputBuffer:new n.Uniform(null),texelSize:new n.Uniform(new n.Vector4),scale:new n.Uniform(1),kernel:new n.Uniform(0)},blending:n.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:"#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\nvarying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec4 sum=texture2D(inputBuffer,vUv0);sum+=texture2D(inputBuffer,vUv1);sum+=texture2D(inputBuffer,vUv2);sum+=texture2D(inputBuffer,vUv3);gl_FragColor=sum*0.25;\n#include <colorspace_fragment>\n}",vertexShader:"uniform vec4 texelSize;uniform float kernel;uniform float scale;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vec2 dUv=(texelSize.xy*vec2(kernel)+texelSize.zw)*scale;vUv0=vec2(uv.x-dUv.x,uv.y+dUv.y);vUv1=vec2(uv.x+dUv.x,uv.y+dUv.y);vUv2=vec2(uv.x+dUv.x,uv.y-dUv.y);vUv3=vec2(uv.x-dUv.x,uv.y-dUv.y);gl_Position=vec4(position.xy,1.0,1.0);}"}),this.fragmentShader=c(this.fragmentShader),this.setTexelSize(e.x,e.y),this.kernelSize=P}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.inputBuffer=e}get kernelSequence(){return L[this.kernelSize]}get scale(){return this.uniforms.scale.value}set scale(e){this.uniforms.scale.value=e}getScale(){return this.uniforms.scale.value}setScale(e){this.uniforms.scale.value=e}getKernel(){return null}get kernel(){return this.uniforms.kernel.value}set kernel(e){this.uniforms.kernel.value=e}setKernel(e){this.kernel=e}setTexelSize(e,t){this.uniforms.texelSize.value.set(e,t,.5*e,.5*t)}setSize(e,t){const r=1/e,n=1/t;this.uniforms.texelSize.value.set(r,n,.5*r,.5*n)}},z=class extends l{constructor({kernelSize:e=P,resolutionScale:t=.5,width:r=D.AUTO_SIZE,height:i=D.AUTO_SIZE,resolutionX:a=r,resolutionY:s=i}={}){super("KawaseBlurPass"),this.renderTargetA=new n.WebGLRenderTarget(1,1,{depthBuffer:!1}),this.renderTargetA.texture.name="Blur.Target.A",this.renderTargetB=this.renderTargetA.clone(),this.renderTargetB.texture.name="Blur.Target.B";const o=this.resolution=new D(this,a,s,t);o.addEventListener("change",(e=>this.setSize(o.baseWidth,o.baseHeight))),this._blurMaterial=new I,this._blurMaterial.kernelSize=e,this.copyMaterial=new d}getResolution(){return this.resolution}get blurMaterial(){return this._blurMaterial}set blurMaterial(e){this._blurMaterial=e}get dithering(){return this.copyMaterial.dithering}set dithering(e){this.copyMaterial.dithering=e}get kernelSize(){return this.blurMaterial.kernelSize}set kernelSize(e){this.blurMaterial.kernelSize=e}get width(){return this.resolution.width}set width(e){this.resolution.preferredWidth=e}get height(){return this.resolution.height}set height(e){this.resolution.preferredHeight=e}get scale(){return this.blurMaterial.scale}set scale(e){this.blurMaterial.scale=e}getScale(){return this.blurMaterial.scale}setScale(e){this.blurMaterial.scale=e}getKernelSize(){return this.kernelSize}setKernelSize(e){this.kernelSize=e}getResolutionScale(){return this.resolution.scale}setResolutionScale(e){this.resolution.scale=e}render(e,t,r,n,i){const a=this.scene,s=this.camera,o=this.renderTargetA,l=this.renderTargetB,u=this.blurMaterial,h=u.kernelSequence;let c=t;this.fullscreenMaterial=u;for(let f=0,d=h.length;f<d;++f){const t=1&f?l:o;u.kernel=h[f],u.inputBuffer=c.texture,e.setRenderTarget(t),e.render(a,s),c=t}this.fullscreenMaterial=this.copyMaterial,this.copyMaterial.inputBuffer=c.texture,e.setRenderTarget(this.renderToScreen?null:r),e.render(a,s)}setSize(e,t){const r=this.resolution;r.setBaseSize(e,t);const n=r.width,i=r.height;this.renderTargetA.setSize(n,i),this.renderTargetB.setSize(n,i),this.blurMaterial.setSize(e,t)}initialize(e,t,r){void 0!==r&&(this.renderTargetA.texture.type=r,this.renderTargetB.texture.type=r,r!==n.UnsignedByteType?(this.blurMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.copyMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1"):null!==e&&e.outputColorSpace===n.SRGBColorSpace&&(this.renderTargetA.texture.colorSpace=n.SRGBColorSpace,this.renderTargetB.texture.colorSpace=n.SRGBColorSpace))}static get AUTO_SIZE(){return D.AUTO_SIZE}},N=class extends n.ShaderMaterial{constructor(e=!1,t=null){super({name:"LuminanceMaterial",defines:{THREE_REVISION:n.REVISION.replace(/\D+/g,"")},uniforms:{inputBuffer:new n.Uniform(null),threshold:new n.Uniform(0),smoothing:new n.Uniform(1),range:new n.Uniform(null)},blending:n.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:"#include <common>\n#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\n#ifdef RANGE\nuniform vec2 range;\n#elif defined(THRESHOLD)\nuniform float threshold;uniform float smoothing;\n#endif\nvarying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);float l=luminance(texel.rgb);\n#ifdef RANGE\nfloat low=step(range.x,l);float high=step(l,range.y);l*=low*high;\n#elif defined(THRESHOLD)\nl=smoothstep(threshold,threshold+smoothing,l)*l;\n#endif\n#ifdef COLOR\ngl_FragColor=vec4(texel.rgb*clamp(l,0.0,1.0),l);\n#else\ngl_FragColor=vec4(l);\n#endif\n}",vertexShader:f}),this.colorOutput=e,this.luminanceRange=t}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}get threshold(){return this.uniforms.threshold.value}set threshold(e){this.smoothing>0||e>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.threshold.value=e}getThreshold(){return this.threshold}setThreshold(e){this.threshold=e}get smoothing(){return this.uniforms.smoothing.value}set smoothing(e){this.threshold>0||e>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.smoothing.value=e}getSmoothingFactor(){return this.smoothing}setSmoothingFactor(e){this.smoothing=e}get useThreshold(){return this.threshold>0||this.smoothing>0}set useThreshold(e){}get colorOutput(){return void 0!==this.defines.COLOR}set colorOutput(e){e?this.defines.COLOR="1":delete this.defines.COLOR,this.needsUpdate=!0}isColorOutputEnabled(e){return this.colorOutput}setColorOutputEnabled(e){this.colorOutput=e}get useRange(){return null!==this.luminanceRange}set useRange(e){this.luminanceRange=null}get luminanceRange(){return this.uniforms.range.value}set luminanceRange(e){null!==e?this.defines.RANGE="1":delete this.defines.RANGE,this.uniforms.range.value=e,this.needsUpdate=!0}getLuminanceRange(){return this.luminanceRange}setLuminanceRange(e){this.luminanceRange=e}},O=class extends l{constructor({renderTarget:e,luminanceRange:t,colorOutput:r,resolutionScale:i=1,width:a=D.AUTO_SIZE,height:s=D.AUTO_SIZE,resolutionX:o=a,resolutionY:l=s}={}){super("LuminancePass"),this.fullscreenMaterial=new N(r,t),this.needsSwap=!1,this.renderTarget=e,void 0===this.renderTarget&&(this.renderTarget=new n.WebGLRenderTarget(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="LuminancePass.Target");const u=this.resolution=new D(this,o,l,i);u.addEventListener("change",(e=>this.setSize(u.baseWidth,u.baseHeight)))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}render(e,t,r,n,i){this.fullscreenMaterial.inputBuffer=t.texture,e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){const r=this.resolution;r.setBaseSize(e,t),this.renderTarget.setSize(r.width,r.height)}initialize(e,t,r){void 0!==r&&r!==n.UnsignedByteType&&(this.renderTarget.texture.type=r,this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}},H=(n.ShaderMaterial,n.ShaderMaterial,class extends n.EventDispatcher{constructor(e,t,{attributes:r=w.NONE,blendFunction:i=B.NORMAL,defines:a=new Map,uniforms:s=new Map,extensions:o=null,vertexShader:l=null}={}){super(),this.name=e,this.renderer=null,this.attributes=r,this.fragmentShader=t,this.vertexShader=l,this.defines=a,this.uniforms=s,this.extensions=o,this.blendMode=new C(i),this.blendMode.addEventListener("change",(e=>this.setChanged())),this._inputColorSpace=n.LinearSRGBColorSpace,this._outputColorSpace=n.NoColorSpace}get inputColorSpace(){return this._inputColorSpace}set inputColorSpace(e){this._inputColorSpace=e,this.setChanged()}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e,this.setChanged()}set mainScene(e){}set mainCamera(e){}getName(){return this.name}setRenderer(e){this.renderer=e}getDefines(){return this.defines}getUniforms(){return this.uniforms}getExtensions(){return this.extensions}getBlendMode(){return this.blendMode}getAttributes(){return this.attributes}setAttributes(e){this.attributes=e,this.setChanged()}getFragmentShader(){return this.fragmentShader}setFragmentShader(e){this.fragmentShader=e,this.setChanged()}getVertexShader(){return this.vertexShader}setVertexShader(e){this.vertexShader=e,this.setChanged()}setChanged(){this.dispatchEvent({type:"change"})}setDepthTexture(e,t=n.BasicDepthPacking){}update(e,t,r){}setSize(e,t){}initialize(e,t,r){}dispose(){for(const e of Object.keys(this)){const t=this[e];(t instanceof n.WebGLRenderTarget||t instanceof n.Material||t instanceof n.Texture||t instanceof l)&&this[e].dispose()}}}),k=0,G=0;n.ShaderMaterial;function V(e,t,r){return e*(t-r)-t}function W(e,t,r){return Math.min(Math.max((e+t)/(t-r),0),1)}n.ShaderMaterial,n.ShaderMaterial;var Q=class extends l{constructor(e,t="inputBuffer"){super("ShaderPass"),this.fullscreenMaterial=e,this.input=t}setInput(e){this.input=e}render(e,t,r,n,i){const a=this.fullscreenMaterial.uniforms;null!==t&&void 0!==a&&void 0!==a[this.input]&&(a[this.input].value=t.texture),e.setRenderTarget(this.renderToScreen?null:r),e.render(this.scene,this.camera)}initialize(e,t,r){void 0!==r&&r!==n.UnsignedByteType&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}};n.DataTexture;var Z=1,j=2,X=(n.ShaderMaterial,n.ShaderMaterial,class extends l{constructor(e,t,r=null){super("RenderPass",e,t),this.needsSwap=!1,this.clearPass=new g,this.overrideMaterialManager=null===r?null:new E(r),this.ignoreBackground=!1,this.skipShadowMapUpdate=!1,this.selection=null}set mainScene(e){this.scene=e}set mainCamera(e){this.camera=e}get renderToScreen(){return super.renderToScreen}set renderToScreen(e){super.renderToScreen=e,this.clearPass.renderToScreen=e}get overrideMaterial(){const e=this.overrideMaterialManager;return null!==e?e.material:null}set overrideMaterial(e){const t=this.overrideMaterialManager;null!==e?null!==t?t.setMaterial(e):this.overrideMaterialManager=new E(e):null!==t&&(t.dispose(),this.overrideMaterialManager=null)}getOverrideMaterial(){return this.overrideMaterial}setOverrideMaterial(e){this.overrideMaterial=e}get clear(){return this.clearPass.enabled}set clear(e){this.clearPass.enabled=e}getSelection(){return this.selection}setSelection(e){this.selection=e}isBackgroundDisabled(){return this.ignoreBackground}setBackgroundDisabled(e){this.ignoreBackground=e}isShadowMapDisabled(){return this.skipShadowMapUpdate}setShadowMapDisabled(e){this.skipShadowMapUpdate=e}getClearPass(){return this.clearPass}render(e,t,r,n,i){const a=this.scene,s=this.camera,o=this.selection,l=s.layers.mask,u=a.background,h=e.shadowMap.autoUpdate,c=this.renderToScreen?null:t;null!==o&&s.layers.set(o.getLayer()),this.skipShadowMapUpdate&&(e.shadowMap.autoUpdate=!1),(this.ignoreBackground||null!==this.clearPass.overrideClearColor)&&(a.background=null),this.clearPass.enabled&&this.clearPass.render(e,t),e.setRenderTarget(c),null!==this.overrideMaterialManager?this.overrideMaterialManager.render(e,a,s):e.render(a,s),s.layers.mask=l,a.background=u,e.shadowMap.autoUpdate=h}}),Y="lut.scaleup";function K(e,t,r){const n=document.createElement("canvas"),i=n.getContext("2d");if(n.width=e,n.height=t,r instanceof Image)i.drawImage(r,0,0);else{const n=i.createImageData(e,t);n.data.set(r),i.putImageData(n,0,0)}return n}var q=class e{constructor(e=0,t=0,r=null){this.width=e,this.height=t,this.data=r}toCanvas(){return"undefined"==typeof document?null:K(this.width,this.height,this.data)}static from(t){const{width:r,height:n}=t;let i;if(t instanceof Image){const e=K(r,n,t);if(null!==e){i=e.getContext("2d").getImageData(0,0,r,n).data}}else i=t.data;return new e(r,n,i)}},J=new n.Color,_=(n.Data3DTexture,0),$=2,ee=0,te=1,re=2,ne=3,ie=5,ae=6,se=7,oe=8,le=class extends n.ShaderMaterial{constructor(e=null,t){super({name:"DepthComparisonMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new n.Uniform(null),cameraNear:new n.Uniform(.3),cameraFar:new n.Uniform(1e3)},blending:n.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:"#include <packing>\n#include <clipping_planes_pars_fragment>\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nuniform highp sampler2D depthBuffer;\n#else\nuniform mediump sampler2D depthBuffer;\n#endif\nuniform float cameraNear;uniform float cameraFar;centroid varying float vViewZ;centroid varying vec4 vProjTexCoord;void main(){\n#include <clipping_planes_fragment>\nvec2 projTexCoord=(vProjTexCoord.xy/vProjTexCoord.w)*0.5+0.5;projTexCoord=clamp(projTexCoord,0.002,0.998);\n#if DEPTH_PACKING == 3201\nfloat fragCoordZ=unpackRGBAToDepth(texture2D(depthBuffer,projTexCoord));\n#else\nfloat fragCoordZ=texture2D(depthBuffer,projTexCoord).r;\n#endif\n#ifdef PERSPECTIVE_CAMERA\nfloat viewZ=perspectiveDepthToViewZ(fragCoordZ,cameraNear,cameraFar);\n#else\nfloat viewZ=orthographicDepthToViewZ(fragCoordZ,cameraNear,cameraFar);\n#endif\nfloat depthTest=(-vViewZ>-viewZ)?1.0:0.0;gl_FragColor.rg=vec2(0.0,depthTest);}",vertexShader:"#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying float vViewZ;varying vec4 vProjTexCoord;void main(){\n#include <skinbase_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <project_vertex>\nvViewZ=mvPosition.z;vProjTexCoord=gl_Position;\n#include <clipping_planes_vertex>\n}"}),this.depthBuffer=e,this.depthPacking=n.RGBADepthPacking,this.copyCameraSettings(t)}set depthBuffer(e){this.uniforms.depthBuffer.value=e}set depthPacking(e){this.defines.DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}setDepthBuffer(e,t=n.RGBADepthPacking){this.depthBuffer=e,this.depthPacking=t}adoptCameraSettings(e){this.copyCameraSettings(e)}copyCameraSettings(e){e&&(this.uniforms.cameraNear.value=e.near,this.uniforms.cameraFar.value=e.far,e instanceof n.PerspectiveCamera?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}},ue=class extends n.ShaderMaterial{constructor(e=new n.Vector2){super({name:"OutlineMaterial",uniforms:{inputBuffer:new n.Uniform(null),texelSize:new n.Uniform(new n.Vector2)},blending:n.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:"uniform lowp sampler2D inputBuffer;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 c0=texture2D(inputBuffer,vUv0).rg;vec2 c1=texture2D(inputBuffer,vUv1).rg;vec2 c2=texture2D(inputBuffer,vUv2).rg;vec2 c3=texture2D(inputBuffer,vUv3).rg;float d0=(c0.x-c1.x)*0.5;float d1=(c2.x-c3.x)*0.5;float d=length(vec2(d0,d1));float a0=min(c0.y,c1.y);float a1=min(c2.y,c3.y);float visibilityFactor=min(a0,a1);gl_FragColor.rg=(1.0-visibilityFactor>0.001)?vec2(d,0.0):vec2(0.0,d);}",vertexShader:"uniform vec2 texelSize;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vUv0=vec2(uv.x+texelSize.x,uv.y);vUv1=vec2(uv.x-texelSize.x,uv.y);vUv2=vec2(uv.x,uv.y+texelSize.y);vUv3=vec2(uv.x,uv.y-texelSize.y);gl_Position=vec4(position.xy,1.0,1.0);}"}),this.uniforms.texelSize.value.set(e.x,e.y),this.uniforms.maskTexture=this.uniforms.inputBuffer}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}setTexelSize(e,t){this.uniforms.texelSize.value.set(e,t)}setSize(e,t){this.uniforms.texelSize.value.set(1/e,1/t)}},he=class extends l{constructor(e,t,{renderTarget:r,resolutionScale:i=1,width:a=D.AUTO_SIZE,height:s=D.AUTO_SIZE,resolutionX:o=a,resolutionY:l=s}={}){super("DepthPass"),this.needsSwap=!1,this.renderPass=new X(e,t,new n.MeshDepthMaterial({depthPacking:n.RGBADepthPacking}));const u=this.renderPass;u.skipShadowMapUpdate=!0,u.ignoreBackground=!0;const h=u.clearPass;h.overrideClearColor=new n.Color(16777215),h.overrideClearAlpha=1,this.renderTarget=r,void 0===this.renderTarget&&(this.renderTarget=new n.WebGLRenderTarget(1,1,{minFilter:n.NearestFilter,magFilter:n.NearestFilter}),this.renderTarget.texture.name="DepthPass.Target");const c=this.resolution=new D(this,o,l,i);c.addEventListener("change",(e=>this.setSize(c.baseWidth,c.baseHeight)))}set mainScene(e){this.renderPass.mainScene=e}set mainCamera(e){this.renderPass.mainCamera=e}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}getResolutionScale(){return this.resolution.scale}setResolutionScale(e){this.resolution.scale=e}render(e,t,r,n,i){const a=this.renderToScreen?null:this.renderTarget;this.renderPass.render(e,a)}setSize(e,t){const r=this.resolution;r.setBaseSize(e,t),this.renderTarget.setSize(r.width,r.height)}},ce=class extends H{constructor(e,t,{blendFunction:r=B.SCREEN,patternTexture:i=null,patternScale:a=1,edgeStrength:s=1,pulseSpeed:o=0,visibleEdgeColor:l=16777215,hiddenEdgeColor:u=2230538,kernelSize:h=F,blur:c=!1,xRay:f=!0,multisampling:d=0,resolutionScale:p=.5,width:m=D.AUTO_SIZE,height:v=D.AUTO_SIZE,resolutionX:y=m,resolutionY:w=v}={}){super("OutlineEffect","uniform lowp sampler2D edgeTexture;uniform lowp sampler2D maskTexture;uniform vec3 visibleEdgeColor;uniform vec3 hiddenEdgeColor;uniform float pulse;uniform float edgeStrength;\n#ifdef USE_PATTERN\nuniform lowp sampler2D patternTexture;varying vec2 vUvPattern;\n#endif\nvoid mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec2 edge=texture2D(edgeTexture,uv).rg;vec2 mask=texture2D(maskTexture,uv).rg;\n#ifndef X_RAY\nedge.y=0.0;\n#endif\nedge*=(edgeStrength*mask.x*pulse);vec3 color=edge.x*visibleEdgeColor+edge.y*hiddenEdgeColor;float visibilityFactor=0.0;\n#ifdef USE_PATTERN\nvec4 patternColor=texture2D(patternTexture,vUvPattern);\n#ifdef X_RAY\nfloat hiddenFactor=0.5;\n#else\nfloat hiddenFactor=0.0;\n#endif\nvisibilityFactor=(1.0-mask.y>0.0)?1.0:hiddenFactor;visibilityFactor*=(1.0-mask.x)*patternColor.a;color+=visibilityFactor*patternColor.rgb;\n#endif\nfloat alpha=max(max(edge.x,edge.y),visibilityFactor);\n#ifdef ALPHA\noutputColor=vec4(color,alpha);\n#else\noutputColor=vec4(color,max(alpha,inputColor.a));\n#endif\n}",{uniforms:new Map([["maskTexture",new n.Uniform(null)],["edgeTexture",new n.Uniform(null)],["edgeStrength",new n.Uniform(s)],["visibleEdgeColor",new n.Uniform(new n.Color(l))],["hiddenEdgeColor",new n.Uniform(new n.Color(u))],["pulse",new n.Uniform(1)],["patternScale",new n.Uniform(a)],["patternTexture",new n.Uniform(null)]])}),this.blendMode.addEventListener("change",(e=>{this.blendMode.blendFunction===B.ALPHA?this.defines.set("ALPHA","1"):this.defines.delete("ALPHA"),this.setChanged()})),this.blendMode.blendFunction=r,this.patternTexture=i,this.xRay=f,this.scene=e,this.camera=t,this.renderTargetMask=new n.WebGLRenderTarget(1,1),this.renderTargetMask.samples=d,this.renderTargetMask.texture.name="Outline.Mask",this.uniforms.get("maskTexture").value=this.renderTargetMask.texture,this.renderTargetOutline=new n.WebGLRenderTarget(1,1,{depthBuffer:!1}),this.renderTargetOutline.texture.name="Outline.Edges",this.uniforms.get("edgeTexture").value=this.renderTargetOutline.texture,this.clearPass=new g,this.clearPass.overrideClearColor=new n.Color(0),this.clearPass.overrideClearAlpha=1,this.depthPass=new he(e,t),this.maskPass=new X(e,t,new le(this.depthPass.texture,t));const x=this.maskPass.clearPass;x.overrideClearColor=new n.Color(16777215),x.overrideClearAlpha=1,this.blurPass=new z({resolutionScale:p,resolutionX:y,resolutionY:w,kernelSize:h}),this.blurPass.enabled=c;const S=this.blurPass.resolution;S.addEventListener("change",(e=>this.setSize(S.baseWidth,S.baseHeight))),this.outlinePass=new Q(new ue);this.outlinePass.fullscreenMaterial.inputBuffer=this.renderTargetMask.texture,this.time=0,this.forceUpdate=!0,this.selection=new R,this.selection.layer=10,this.pulseSpeed=o}set mainScene(e){this.scene=e,this.depthPass.mainScene=e,this.maskPass.mainScene=e}set mainCamera(e){this.camera=e,this.depthPass.mainCamera=e,this.maskPass.mainCamera=e,this.maskPass.overrideMaterial.copyCameraSettings(e)}get resolution(){return this.blurPass.resolution}getResolution(){return this.blurPass.getResolution()}get multisampling(){return this.renderTargetMask.samples}set multisampling(e){this.renderTargetMask.samples=e,this.renderTargetMask.dispose()}get patternScale(){return this.uniforms.get("patternScale").value}set patternScale(e){this.uniforms.get("patternScale").value=e}get edgeStrength(){return this.uniforms.get("edgeStrength").value}set edgeStrength(e){this.uniforms.get("edgeStrength").value=e}get visibleEdgeColor(){return this.uniforms.get("visibleEdgeColor").value}set visibleEdgeColor(e){this.uniforms.get("visibleEdgeColor").value=e}get hiddenEdgeColor(){return this.uniforms.get("hiddenEdgeColor").value}set hiddenEdgeColor(e){this.uniforms.get("hiddenEdgeColor").value=e}getBlurPass(){return this.blurPass}getSelection(){return this.selection}getPulseSpeed(){return this.pulseSpeed}setPulseSpeed(e){this.pulseSpeed=e}get width(){return this.resolution.width}set width(e){this.resolution.preferredWidth=e}get height(){return this.resolution.height}set height(e){this.resolution.preferredHeight=e}get selectionLayer(){return this.selection.layer}set selectionLayer(e){this.selection.layer=e}get dithering(){return this.blurPass.dithering}set dithering(e){this.blurPass.dithering=e}get kernelSize(){return this.blurPass.kernelSize}set kernelSize(e){this.blurPass.kernelSize=e}get blur(){return this.blurPass.enabled}set blur(e){this.blurPass.enabled=e}get xRay(){return this.defines.has("X_RAY")}set xRay(e){this.xRay!==e&&(e?this.defines.set("X_RAY","1"):this.defines.delete("X_RAY"),this.setChanged())}isXRayEnabled(){return this.xRay}setXRayEnabled(e){this.xRay=e}get patternTexture(){return this.uniforms.get("patternTexture").value}set patternTexture(e){null!==e?(e.wrapS=e.wrapT=n.RepeatWrapping,this.defines.set("USE_PATTERN","1"),this.setVertexShader("uniform float patternScale;varying vec2 vUvPattern;void mainSupport(const in vec2 uv){vUvPattern=uv*vec2(aspect,1.0)*patternScale;}")):(this.defines.delete("USE_PATTERN"),this.setVertexShader(null)),this.uniforms.get("patternTexture").value=e,this.setChanged()}setPatternTexture(e){this.patternTexture=e}getResolutionScale(){return this.resolution.scale}setResolutionScale(e){this.resolution.scale=e}setSelection(e){return this.selection.set(e),this}clearSelection(){return this.selection.clear(),this}selectObject(e){return this.selection.add(e),this}deselectObject(e){return this.selection.delete(e),this}update(e,t,r){const n=this.scene,i=this.camera,a=this.selection,s=this.uniforms.get("pulse"),o=n.background,l=i.layers.mask;(this.forceUpdate||a.size>0)&&(n.background=null,s.value=1,this.pulseSpeed>0&&(s.value=.375*Math.cos(this.time*this.pulseSpeed*10)+.625),this.time+=r,a.setVisible(!1),this.depthPass.render(e),a.setVisible(!0),i.layers.set(a.layer),this.maskPass.render(e,this.renderTargetMask),i.layers.mask=l,n.background=o,this.outlinePass.render(e,null,this.renderTargetOutline),this.blurPass.enabled&&this.blurPass.render(e,this.renderTargetOutline,this.renderTargetOutline)),this.forceUpdate=a.size>0}setSize(e,t){this.blurPass.setSize(e,t),this.renderTargetMask.setSize(e,t);const r=this.resolution;r.setBaseSize(e,t);const n=r.width,i=r.height;this.depthPass.setSize(n,i),this.renderTargetOutline.setSize(n,i),this.outlinePass.fullscreenMaterial.setSize(n,i)}initialize(e,t,r){this.blurPass.initialize(e,t,n.UnsignedByteType),void 0!==r&&(this.depthPass.initialize(e,t,r),this.maskPass.initialize(e,t,r),this.outlinePass.initialize(e,t,r))}},fe=(Math.PI,n.ShaderMaterial,n.ShaderMaterial,n.ShaderMaterial,class extends n.ShaderMaterial{constructor(){super({name:"DepthDownsamplingMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new n.Uniform(null),normalBuffer:new n.Uniform(null),texelSize:new n.Uniform(new n.Vector2)},blending:n.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:"#include <packing>\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nuniform highp sampler2D depthBuffer;\n#else\nuniform mediump sampler2D depthBuffer;\n#endif\n#ifdef DOWNSAMPLE_NORMALS\nuniform lowp sampler2D normalBuffer;\n#endif\nvarying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;float readDepth(const in vec2 uv){\n#if DEPTH_PACKING == 3201\nreturn unpackRGBAToDepth(texture2D(depthBuffer,uv));\n#else\nreturn texture2D(depthBuffer,uv).r;\n#endif\n}int findBestDepth(const in float samples[4]){float c=(samples[0]+samples[1]+samples[2]+samples[3])*0.25;float distances[4];distances[0]=abs(c-samples[0]);distances[1]=abs(c-samples[1]);distances[2]=abs(c-samples[2]);distances[3]=abs(c-samples[3]);float maxDistance=max(max(distances[0],distances[1]),max(distances[2],distances[3]));int remaining[3];int rejected[3];int i,j,k;for(i=0,j=0,k=0;i<4;++i){if(distances[i]<maxDistance){remaining[j++]=i;}else{rejected[k++]=i;}}for(;j<3;++j){remaining[j]=rejected[--k];}vec3 s=vec3(samples[remaining[0]],samples[remaining[1]],samples[remaining[2]]);c=(s.x+s.y+s.z)/3.0;distances[0]=abs(c-s.x);distances[1]=abs(c-s.y);distances[2]=abs(c-s.z);float minDistance=min(distances[0],min(distances[1],distances[2]));for(i=0;i<3;++i){if(distances[i]==minDistance){break;}}return remaining[i];}void main(){float d[4];d[0]=readDepth(vUv0);d[1]=readDepth(vUv1);d[2]=readDepth(vUv2);d[3]=readDepth(vUv3);int index=findBestDepth(d);\n#ifdef DOWNSAMPLE_NORMALS\nvec3 n[4];n[0]=texture2D(normalBuffer,vUv0).rgb;n[1]=texture2D(normalBuffer,vUv1).rgb;n[2]=texture2D(normalBuffer,vUv2).rgb;n[3]=texture2D(normalBuffer,vUv3).rgb;\n#else\nvec3 n[4];n[0]=vec3(0.0);n[1]=vec3(0.0);n[2]=vec3(0.0);n[3]=vec3(0.0);\n#endif\ngl_FragColor=vec4(n[index],d[index]);}",vertexShader:"uniform vec2 texelSize;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vUv0=uv;vUv1=vec2(uv.x,uv.y+texelSize.y);vUv2=vec2(uv.x+texelSize.x,uv.y);vUv3=uv+texelSize;gl_Position=vec4(position.xy,1.0,1.0);}"})}set depthBuffer(e){this.uniforms.depthBuffer.value=e}set depthPacking(e){this.defines.DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}setDepthBuffer(e,t=n.BasicDepthPacking){this.depthBuffer=e,this.depthPacking=t}set normalBuffer(e){this.uniforms.normalBuffer.value=e,null!==e?this.defines.DOWNSAMPLE_NORMALS="1":delete this.defines.DOWNSAMPLE_NORMALS,this.needsUpdate=!0}setNormalBuffer(e){this.normalBuffer=e}setTexelSize(e,t){this.uniforms.texelSize.value.set(e,t)}setSize(e,t){this.uniforms.texelSize.value.set(1/e,1/t)}}),de=class extends l{constructor({normalBuffer:e=null,resolutionScale:t=.5,width:r=D.AUTO_SIZE,height:i=D.AUTO_SIZE,resolutionX:a=r,resolutionY:s=i}={}){super("DepthDownsamplingPass");const o=new fe;o.normalBuffer=e,this.fullscreenMaterial=o,this.needsDepthTexture=!0,this.needsSwap=!1,this.renderTarget=new n.WebGLRenderTarget(1,1,{minFilter:n.NearestFilter,magFilter:n.NearestFilter,depthBuffer:!1,type:n.FloatType}),this.renderTarget.texture.name="DepthDownsamplingPass.Target",this.renderTarget.texture.generateMipmaps=!1;const l=this.resolution=new D(this,a,s,t);l.addEventListener("change",(e=>this.setSize(l.baseWidth,l.baseHeight)))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}setDepthTexture(e,t=n.BasicDepthPacking){this.fullscreenMaterial.depthBuffer=e,this.fullscreenMaterial.depthPacking=t}render(e,t,r,n,i){e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){const r=this.resolution;r.setBaseSize(e,t),this.renderTarget.setSize(r.width,r.height),this.fullscreenMaterial.setSize(e,t)}initialize(e,t,r){const n=e.getContext();if(!(n.getExtension("EXT_color_buffer_float")||n.getExtension("EXT_color_buffer_half_float")))throw new Error("Rendering to float texture is not supported.")}},pe=class extends n.ShaderMaterial{constructor(){super({name:"AdaptiveLuminanceMaterial",defines:{MIP_LEVEL_1X1:"0.0"},uniforms:{luminanceBuffer0:new n.Uniform(null),luminanceBuffer1:new n.Uniform(null),minLuminance:new n.Uniform(.01),deltaTime:new n.Uniform(0),tau:new n.Uniform(1)},extensions:{shaderTextureLOD:!0},blending:n.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:"#include <packing>\n#define packFloatToRGBA(v) packDepthToRGBA(v)\n#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)\nuniform lowp sampler2D luminanceBuffer0;uniform lowp sampler2D luminanceBuffer1;uniform float minLuminance;uniform float deltaTime;uniform float tau;varying vec2 vUv;void main(){float l0=unpackRGBAToFloat(texture2D(luminanceBuffer0,vUv));\n#if __VERSION__ < 300\nfloat l1=texture2DLodEXT(luminanceBuffer1,vUv,MIP_LEVEL_1X1).r;\n#else\nfloat l1=textureLod(luminanceBuffer1,vUv,MIP_LEVEL_1X1).r;\n#endif\nl0=max(minLuminance,l0);l1=max(minLuminance,l1);float adaptedLum=l0+(l1-l0)*(1.0-exp(-deltaTime*tau));gl_FragColor=(adaptedLum==1.0)?vec4(1.0):packFloatToRGBA(adaptedLum);}",vertexShader:f})}set luminanceBuffer0(e){this.uniforms.luminanceBuffer0.value=e}setLuminanceBuffer0(e){this.uniforms.luminanceBuffer0.value=e}set luminanceBuffer1(e){this.uniforms.luminanceBuffer1.value=e}setLuminanceBuffer1(e){this.uniforms.luminanceBuffer1.value=e}set mipLevel1x1(e){this.defines.MIP_LEVEL_1X1=e.toFixed(1),this.needsUpdate=!0}setMipLevel1x1(e){this.mipLevel1x1=e}set deltaTime(e){this.uniforms.deltaTime.value=e}setDeltaTime(e){this.uniforms.deltaTime.value=e}get minLuminance(){return this.uniforms.minLuminance.value}set minLuminance(e){this.uniforms.minLuminance.value=e}getMinLuminance(){return this.uniforms.minLuminance.value}setMinLuminance(e){this.uniforms.minLuminance.value=e}get adaptationRate(){return this.uniforms.tau.value}set adaptationRate(e){this.uniforms.tau.value=e}getAdaptationRate(){return this.uniforms.tau.value}setAdaptationRate(e){this.uniforms.tau.value=e}},me=class extends l{constructor(e,{minLuminance:t=.01,adaptationRate:r=1}={}){super("AdaptiveLuminancePass"),this.fullscreenMaterial=new pe,this.needsSwap=!1,this.renderTargetPrevious=new n.WebGLRenderTarget(1,1,{minFilter:n.NearestFilter,magFilter:n.NearestFilter,depthBuffer:!1}),this.renderTargetPrevious.texture.name="Luminance.Previous";const i=this.fullscreenMaterial;i.luminanceBuffer0=this.renderTargetPrevious.texture,i.luminanceBuffer1=e,i.minLuminance=t,i.adaptationRate=r,this.renderTargetAdapted=this.renderTargetPrevious.clone(),this.renderTargetAdapted.texture.name="Luminance.Adapted",this.copyPass=new p(this.renderTargetPrevious,!1)}get texture(){return this.renderTargetAdapted.texture}getTexture(){return this.renderTargetAdapted.texture}set mipLevel1x1(e){this.fullscreenMaterial.mipLevel1x1=e}get adaptationRate(){return this.fullscreenMaterial.adaptationRate}set adaptationRate(e){this.fullscreenMaterial.adaptationRate=e}render(e,t,r,n,i){this.fullscreenMaterial.deltaTime=n,e.setRenderTarget(this.renderToScreen?null:this.renderTargetAdapted),e.render(this.scene,this.camera),this.copyPass.render(e,this.renderTargetAdapted)}},ge=class extends H{constructor({blendFunction:e=B.SRC,adaptive:t=!1,mode:r=(t?ne:se),resolution:i=256,maxLuminance:a=4,whitePoint:s=a,middleGrey:o=.6,minLuminance:l=.01,averageLuminance:u=1,adaptationRate:h=1}={}){super("ToneMappingEffect","#include <tonemapping_pars_fragment>\nuniform float whitePoint;\n#if TONE_MAPPING_MODE == 2 || TONE_MAPPING_MODE == 3\nuniform float middleGrey;\n#if TONE_MAPPING_MODE == 3\nuniform lowp sampler2D luminanceBuffer;\n#else\nuniform float averageLuminance;\n#endif\nvec3 Reinhard2ToneMapping(vec3 color){color*=toneMappingExposure;float l=luminance(color);\n#if TONE_MAPPING_MODE == 3\nfloat lumAvg=unpackRGBAToFloat(texture2D(luminanceBuffer,vec2(0.5)));\n#else\nfloat lumAvg=averageLuminance;\n#endif\nfloat lumScaled=(l*middleGrey)/max(lumAvg,1e-6);float lumCompressed=lumScaled*(1.0+lumScaled/(whitePoint*whitePoint));lumCompressed/=(1.0+lumScaled);return clamp(lumCompressed*color,0.0,1.0);}\n#elif TONE_MAPPING_MODE == 4\n#define A 0.15\n#define B 0.50\n#define C 0.10\n#define D 0.20\n#define E 0.02\n#define F 0.30\nvec3 Uncharted2Helper(const in vec3 x){return((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;}vec3 Uncharted2ToneMapping(vec3 color){color*=toneMappingExposure;return clamp(Uncharted2Helper(color)/Uncharted2Helper(vec3(whitePoint)),0.0,1.0);}\n#endif\nvoid mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){\n#if TONE_MAPPING_MODE == 2 || TONE_MAPPING_MODE == 3\noutputColor=vec4(Reinhard2ToneMapping(inputColor.rgb),inputColor.a);\n#elif TONE_MAPPING_MODE == 4\noutputColor=vec4(Uncharted2ToneMapping(inputColor.rgb),inputColor.a);\n#else\noutputColor=vec4(toneMapping(inputColor.rgb),inputColor.a);\n#endif\n}",{blendFunction:e,uniforms:new Map([["luminanceBuffer",new n.Uniform(null)],["maxLuminance",new n.Uniform(a)],["whitePoint",new n.Uniform(s)],["middleGrey",new n.Uniform(o)],["averageLuminance",new n.Uniform(u)]])}),this.renderTargetLuminance=new n.WebGLRenderTarget(1,1,{minFilter:n.LinearMipmapLinearFilter,depthBuffer:!1}),this.renderTargetLuminance.texture.generateMipmaps=!0,this.renderTargetLuminance.texture.name="Luminance",this.luminancePass=new O({renderTarget:this.renderTargetLuminance}),this.adaptiveLuminancePass=new me(this.luminancePass.texture,{minLuminance:l,adaptationRate:h}),this.uniforms.get("luminanceBuffer").value=this.adaptiveLuminancePass.texture,this.resolution=i,this.mode=r}get mode(){return Number(this.defines.get("TONE_MAPPING_MODE"))}set mode(e){if(this.mode!==e){switch(this.defines.clear(),this.defines.set("TONE_MAPPING_MODE",e.toFixed(0)),e){case ee:this.defines.set("toneMapping(texel)","LinearToneMapping(texel)");break;case te:this.defines.set("toneMapping(texel)","ReinhardToneMapping(texel)");break;case ie:this.defines.set("toneMapping(texel)","OptimizedCineonToneMapping(texel)");break;case ae:this.defines.set("toneMapping(texel)","ACESFilmicToneMapping(texel)");break;case se:this.defines.set("toneMapping(texel)","AgXToneMapping(texel)");break;case oe:this.defines.set("toneMapping(texel)","NeutralToneMapping(texel)");break;default:this.defines.set("toneMapping(texel)","texel")}this.adaptiveLuminancePass.enabled=e===ne,this.setChanged()}}getMode(){return this.mode}setMode(e){this.mode=e}get whitePoint(){return this.uniforms.get("whitePoint").value}set whitePoint(e){this.uniforms.get("whitePoint").value=e}get middleGrey(){return this.uniforms.get("middleGrey").value}set middleGrey(e){this.uniforms.get("middleGrey").value=e}get averageLuminance(){return this.uniforms.get("averageLuminance").value}set averageLuminance(e){this.uniforms.get("averageLuminance").value=e}get adaptiveLuminanceMaterial(){return this.adaptiveLuminancePass.fullscreenMaterial}getAdaptiveLuminanceMaterial(){return this.adaptiveLuminanceMaterial}get resolution(){return this.luminancePass.resolution.width}set resolution(e){const t=Math.max(0,Math.ceil(Math.log2(e))),r=Math.pow(2,t);this.luminancePass.resolution.setPreferredSize(r,r),this.adaptiveLuminanceMaterial.mipLevel1x1=t}getResolution(){return this.resolution}setResolution(e){this.resolution=e}get adaptive(){return this.mode===ne}set adaptive(e){this.mode=e?ne:re}get adaptationRate(){return this.adaptiveLuminanceMaterial.adaptationRate}set adaptationRate(e){this.adaptiveLuminanceMaterial.adaptationRate=e}get distinction(){return console.warn(this.name,"distinction was removed."),1}set distinction(e){console.warn(this.name,"distinction was removed.")}update(e,t,r){this.adaptiveLuminancePass.enabled&&(this.luminancePass.render(e,t),this.adaptiveLuminancePass.render(e,null,null,r))}initialize(e,t,r){this.adaptiveLuminancePass.initialize(e,t,r)}},ve=(n.ShaderMaterial,n.ShaderMaterial,class extends n.ShaderMaterial{constructor(e,t,r,i,a=!1){super({name:"EffectMaterial",defines:{THREE_REVISION:n.REVISION.replace(/\D+/g,""),DEPTH_PACKING:"0",ENCODE_OUTPUT:"1"},uniforms:{inputBuffer:new n.Uniform(null),depthBuffer:new n.Uniform(null),resolution:new n.Uniform(new n.Vector2),texelSize:new n.Uniform(new n.Vector2),cameraNear:new n.Uniform(.3),cameraFar:new n.Uniform(1e3),aspect:new n.Uniform(1),time:new n.Uniform(0)},blending:n.NoBlending,toneMapped:!1,depthWrite:!1,depthTest:!1,dithering:a}),e&&this.setShaderParts(e),t&&this.setDefines(t),r&&this.setUniforms(r),this.copyCameraSettings(i)}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}get depthBuffer(){return this.uniforms.depthBuffer.value}set depthBuffer(e){this.uniforms.depthBuffer.value=e}get depthPacking(){return Number(this.defines.DEPTH_PACKING)}set depthPacking(e){this.defines.DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}setDepthBuffer(e,t=n.BasicDepthPacking){this.depthBuffer=e,this.depthPacking=t}setShaderData(e){this.setShaderParts(e.shaderParts),this.setDefines(e.defines),this.setUniforms(e.uniforms),this.setExtensions(e.extensions)}setShaderParts(e){return this.fragmentShader="#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#define packFloatToRGBA(v) packDepthToRGBA(v)\n#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)\n#ifdef FRAMEBUFFER_PRECISION_HIGH\nuniform mediump sampler2D inputBuffer;\n#else\nuniform lowp sampler2D inputBuffer;\n#endif\n#if DEPTH_PACKING == 3201\nuniform lowp sampler2D depthBuffer;\n#elif defined(GL_FRAGMENT_PRECISION_HIGH)\nuniform highp sampler2D depthBuffer;\n#else\nuniform mediump sampler2D depthBuffer;\n#endif\nuniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;\n#if THREE_REVISION < 143\n#define luminance(v) linearToRelativeLuminance(v)\n#endif\n#if THREE_REVISION >= 137\nvec4 sRGBToLinear(const in vec4 value){return vec4(mix(pow(value.rgb*0.9478672986+vec3(0.0521327014),vec3(2.4)),value.rgb*0.0773993808,vec3(lessThanEqual(value.rgb,vec3(0.04045)))),value.a);}\n#endif\nfloat readDepth(const in vec2 uv){\n#if DEPTH_PACKING == 3201\nreturn unpackRGBAToDepth(texture2D(depthBuffer,uv));\n#else\nreturn texture2D(depthBuffer,uv).r;\n#endif\n}float getViewZ(const in float depth){\n#ifdef PERSPECTIVE_CAMERA\nreturn perspectiveDepthToViewZ(depth,cameraNear,cameraFar);\n#else\nreturn orthographicDepthToViewZ(depth,cameraNear,cameraFar);\n#endif\n}vec3 RGBToHCV(const in vec3 RGB){vec4 P=mix(vec4(RGB.bg,-1.0,2.0/3.0),vec4(RGB.gb,0.0,-1.0/3.0),step(RGB.b,RGB.g));vec4 Q=mix(vec4(P.xyw,RGB.r),vec4(RGB.r,P.yzx),step(P.x,RGB.r));float C=Q.x-min(Q.w,Q.y);float H=abs((Q.w-Q.y)/(6.0*C+EPSILON)+Q.z);return vec3(H,C,Q.x);}vec3 RGBToHSL(const in vec3 RGB){vec3 HCV=RGBToHCV(RGB);float L=HCV.z-HCV.y*0.5;float S=HCV.y/(1.0-abs(L*2.0-1.0)+EPSILON);return vec3(HCV.x,S,L);}vec3 HueToRGB(const in float H){float R=abs(H*6.0-3.0)-1.0;float G=2.0-abs(H*6.0-2.0);float B=2.0-abs(H*6.0-4.0);return clamp(vec3(R,G,B),0.0,1.0);}vec3 HSLToRGB(const in vec3 HSL){vec3 RGB=HueToRGB(HSL.x);float C=(1.0-abs(2.0*HSL.z-1.0))*HSL.y;return(RGB-0.5)*C+HSL.z;}FRAGMENT_HEAD void main(){FRAGMENT_MAIN_UV vec4 color0=texture2D(inputBuffer,UV);vec4 color1=vec4(0.0);FRAGMENT_MAIN_IMAGE color0.a=clamp(color0.a,0.0,1.0);gl_FragColor=color0;\n#ifdef ENCODE_OUTPUT\n#include <colorspace_fragment>\n#endif\n#include <dithering_fragment>\n}".replace(x.FRAGMENT_HEAD,e.get(x.FRAGMENT_HEAD)||"").replace(x.FRAGMENT_MAIN_UV,e.get(x.FRAGMENT_MAIN_UV)||"").replace(x.FRAGMENT_MAIN_IMAGE,e.get(x.FRAGMENT_MAIN_IMAGE)||""),this.vertexShader="uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;VERTEX_HEAD void main(){vUv=position.xy*0.5+0.5;VERTEX_MAIN_SUPPORT gl_Position=vec4(position.xy,1.0,1.0);}".replace(x.VERTEX_HEAD,e.get(x.VERTEX_HEAD)||"").replace(x.VERTEX_MAIN_SUPPORT,e.get(x.VERTEX_MAIN_SUPPORT)||""),this.fragmentShader=c(this.fragmentShader),this.needsUpdate=!0,this}setDefines(e){for(const t of e.entries())this.defines[t[0]]=t[1];return this.needsUpdate=!0,this}setUniforms(e){for(const t of e.entries())this.uniforms[t[0]]=t[1];return this}setExtensions(e){this.extensions={};for(const t of e)this.extensions[t]=!0;return this}get encodeOutput(){return void 0!==this.defines.ENCODE_OUTPUT}set encodeOutput(e){this.encodeOutput!==e&&(e?this.defines.ENCODE_OUTPUT="1":delete this.defines.ENCODE_OUTPUT,this.needsUpdate=!0)}isOutputEncodingEnabled(e){return this.encodeOutput}setOutputEncodingEnabled(e){this.encodeOutput=e}get time(){return this.uniforms.time.value}set time(e){this.uniforms.time.value=e}setDeltaTime(e){this.uniforms.time.value+=e}adoptCameraSettings(e){this.copyCameraSettings(e)}copyCameraSettings(e){e&&(this.uniforms.cameraNear.value=e.near,this.uniforms.cameraFar.value=e.far,e instanceof n.PerspectiveCamera?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(e,t){const r=this.uniforms;r.resolution.value.set(e,t),r.texelSize.value.set(1/e,1/t),r.aspect.value=e/t}static get Section(){return x}});n.ShaderMaterial,new Float32Array([255/256/256**3,255/256/65536,255/256/256,255/256]);function ye(e,t,r){for(const n of t){const t="$1"+e+n.charAt(0).toUpperCase()+n.slice(1),i=new RegExp("([^\\.])(\\b"+n+"\\b)","g");for(const e of r.entries())null!==e[1]&&r.set(e[0],e[1].replace(i,t))}}function we(e,t,r){let i=t.getFragmentShader(),a=t.getVertexShader();const s=void 0!==i&&/mainImage/.test(i),o=void 0!==i&&/mainUv/.test(i);if(r.attributes|=t.getAttributes(),void 0===i)throw new Error(`Missing fragment shader (${t.name})`);if(o&&r.attributes&w.CONVOLUTION)throw new Error(`Effects that transform UVs are incompatible with convolution effects (${t.name})`);if(!s&&!o)throw new Error(`Could not find mainImage or mainUv function (${t.name})`);{const l=/\w+\s+(\w+)\([\w\s,]*\)\s*{/g,u=r.shaderParts;let h=u.get(x.FRAGMENT_HEAD)||"",c=u.get(x.FRAGMENT_MAIN_UV)||"",f=u.get(x.FRAGMENT_MAIN_IMAGE)||"",d=u.get(x.VERTEX_HEAD)||"",p=u.get(x.VERTEX_MAIN_SUPPORT)||"";const m=new Set,g=new Set;if(o&&(c+=`\t${e}MainUv(UV);\n`,r.uvTransformation=!0),null!==a&&/mainSupport/.test(a)){const t=/mainSupport *\([\w\s]*?uv\s*?\)/.test(a);p+=`\t${e}MainSupport(`,p+=t?"vUv);\n":");\n";for(const e of a.matchAll(/(?:varying\s+\w+\s+([\S\s]*?);)/g))for(const t of e[1].split(/\s*,\s*/))r.varyings.add(t),m.add(t),g.add(t);for(const e of a.matchAll(l))g.add(e[1])}for(const e of i.matchAll(l))g.add(e[1]);for(const e of t.defines.keys())g.add(e.replace(/\([\w\s,]*\)/g,""));for(const e of t.uniforms.keys())g.add(e);g.delete("while"),g.delete("for"),g.delete("if"),t.uniforms.forEach(((t,n)=>r.uniforms.set(e+n.charAt(0).toUpperCase()+n.slice(1),t))),t.defines.forEach(((t,n)=>r.defines.set(e+n.charAt(0).toUpperCase()+n.slice(1),t)));const v=new Map([["fragment",i],["vertex",a]]);ye(e,g,r.defines),ye(e,g,v),i=v.get("fragment"),a=v.get("vertex");const y=t.blendMode;if(r.blendModes.set(y.blendFunction,y),s){null!==t.inputColorSpace&&t.inputColorSpace!==r.colorSpace&&(f+=t.inputColorSpace===n.SRGBColorSpace?"color0 = LinearTosRGB(color0);\n\t":"color0 = sRGBToLinear(color0);\n\t"),t.outputColorSpace!==n.NoColorSpace?r.colorSpace=t.outputColorSpace:null!==t.inputColorSpace&&(r.colorSpace=t.inputColorSpace);const a=/MainImage *\([\w\s,]*?depth[\w\s,]*?\)/;f+=`${e}MainImage(color0, UV, `,r.attributes&w.DEPTH&&a.test(i)&&(f+="depth, ",r.readDepth=!0),f+="color1);\n\t";const s=e+"BlendOpacity";r.uniforms.set(s,y.opacity),f+=`color0 = blend${y.blendFunction}(color0, color1, ${s});\n\n\t`,h+=`uniform float ${s};\n\n`}if(h+=i+"\n",null!==a&&(d+=a+"\n"),u.set(x.FRAGMENT_HEAD,h),u.set(x.FRAGMENT_MAIN_UV,c),u.set(x.FRAGMENT_MAIN_IMAGE,f),u.set(x.VERTEX_HEAD,d),u.set(x.VERTEX_MAIN_SUPPORT,p),null!==t.extensions)for(const e of t.extensions)r.extensions.add(e)}}var xe=class extends l{constructor(e,...t){super("EffectPass"),this.fullscreenMaterial=new ve(null,null,null,e),this.listener=e=>this.handleEvent(e),this.effects=[],this.setEffects(t),this.skipRendering=!1,this.minTime=1,this.maxTime=Number.POSITIVE_INFINITY,this.timeScale=1}set mainScene(e){for(const t of this.effects)t.mainScene=e}set mainCamera(e){this.fullscreenMaterial.copyCameraSettings(e);for(const t of this.effects)t.mainCamera=e}get encodeOutput(){return this.fullscreenMaterial.encodeOutput}set encodeOutput(e){this.fullscreenMaterial.encodeOutput=e}get dithering(){return this.fullscreenMaterial.dithering}set dithering(e){const t=this.fullscreenMaterial;t.dithering=e,t.needsUpdate=!0}setEffects(e){for(const t of this.effects)t.removeEventListener("change",this.listener);this.effects=e.sort(((e,t)=>t.attributes-e.attributes));for(const t of this.effects)t.addEventListener("change",this.listener)}updateMaterial(){const e=new S;let t=0;for(const n of this.effects)if(n.blendMode.blendFunction===B.DST)e.attributes|=n.getAttributes()&w.DEPTH;else{if(e.attributes&n.getAttributes()&w.CONVOLUTION)throw new Error(`Convolution effects cannot be merged (${n.name})`);we("e"+t++,n,e)}let r=e.shaderParts.get(x.FRAGMENT_HEAD),i=e.shaderParts.get(x.FRAGMENT_MAIN_IMAGE),a=e.shaderParts.get(x.FRAGMENT_MAIN_UV);const s=/\bblend\b/g;for(const n of e.blendModes.values())r+=n.getShaderCode().replace(s,`blend${n.blendFunction}`)+"\n";e.attributes&w.DEPTH?(e.readDepth&&(i="float depth = readDepth(UV);\n\n\t"+i),this.needsDepthTexture=null===this.getDepthTexture()):this.needsDepthTexture=!1,e.colorSpace===n.SRGBColorSpace&&(i+="color0 = sRGBToLinear(color0);\n\t"),e.uvTransformation?(a="vec2 transformedUv = vUv;\n"+a,e.defines.set("UV","transformedUv")):e.defines.set("UV","vUv"),e.shaderParts.set(x.FRAGMENT_HEAD,r),e.shaderParts.set(x.FRAGMENT_MAIN_IMAGE,i),e.shaderParts.set(x.FRAGMENT_MAIN_UV,a);for(const[n,o]of e.shaderParts)null!==o&&e.shaderParts.set(n,o.trim().replace(/^#/,"\n#"));this.skipRendering=0===t,this.needsSwap=!this.skipRendering,this.fullscreenMaterial.setShaderData(e)}recompile(){this.updateMaterial()}getDepthTexture(){return this.fullscreenMaterial.depthBuffer}setDepthTexture(e,t=n.BasicDepthPacking){this.fullscreenMaterial.depthBuffer=e,this.fullscreenMaterial.depthPacking=t;for(const r of this.effects)r.setDepthTexture(e,t)}render(e,t,r,n,i){for(const a of this.effects)a.update(e,t,n);if(!this.skipRendering||this.renderToScreen){const i=this.fullscreenMaterial;i.inputBuffer=t.texture,i.time+=n*this.timeScale,e.setRenderTarget(this.renderToScreen?null:r),e.render(this.scene,this.camera)}}setSize(e,t){this.fullscreenMaterial.setSize(e,t);for(const r of this.effects)r.setSize(e,t)}initialize(e,t,r){this.renderer=e;for(const n of this.effects)n.initialize(e,t,r);this.updateMaterial(),void 0!==r&&r!==n.UnsignedByteType&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}dispose(){super.dispose();for(const e of this.effects)e.removeEventListener("change",this.listener),e.dispose()}handleEvent(e){if("change"===e.type)this.recompile()}},Se=class extends l{constructor(e,t,{renderTarget:r,resolutionScale:i=1,width:a=D.AUTO_SIZE,height:s=D.AUTO_SIZE,resolutionX:o=a,resolutionY:l=s}={}){super("NormalPass"),this.needsSwap=!1,this.renderPass=new X(e,t,new n.MeshNormalMaterial);const u=this.renderPass;u.ignoreBackground=!0,u.skipShadowMapUpdate=!0;const h=u.getClearPass();h.overrideClearColor=new n.Color(7829503),h.overrideClearAlpha=1,this.renderTarget=r,void 0===this.renderTarget&&(this.renderTarget=new n.WebGLRenderTarget(1,1,{minFilter:n.NearestFilter,magFilter:n.NearestFilter}),this.renderTarget.texture.name="NormalPass.Target");const c=this.resolution=new D(this,o,l,i);c.addEventListener("change",(e=>this.setSize(c.baseWidth,c.baseHeight)))}set mainScene(e){this.renderPass.mainScene=e}set mainCamera(e){this.renderPass.mainCamera=e}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}getResolutionScale(){return this.resolution.scale}setResolutionScale(e){this.resolution.scale=e}render(e,t,r,n,i){const a=this.renderToScreen?null:this.renderTarget;this.renderPass.render(e,a,a)}setSize(e,t){const r=this.resolution;r.setBaseSize(e,t),this.renderTarget.setSize(r.width,r.height)}};new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,0,1]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([1,0,1]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([0,1,1]),new Float32Array([1,1,1]),new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([0,1,1]),new Float32Array([1,1,1]);new Float32Array(2),new Float32Array(2),new Float32Array([0,-.25,.25,-.125,.125,-.375,.375]),new Float32Array([0,0]),new Float32Array([.25,-.25]),new Float32Array([-.25,.25]),new Float32Array([.125,-.125]),new Float32Array([-.125,.125]),new Uint8Array([0,0]),new Uint8Array([3,0]),new Uint8Array([0,3]),new Uint8Array([3,3]),new Uint8Array([1,0]),new Uint8Array([4,0]),new Uint8Array([1,3]),new Uint8Array([4,3]),new Uint8Array([0,1]),new Uint8Array([3,1]),new Uint8Array([0,4]),new Uint8Array([3,4]),new Uint8Array([1,1]),new Uint8Array([4,1]),new Uint8Array([1,4]),new Uint8Array([4,4]),new Uint8Array([0,0]),new Uint8Array([1,0]),new Uint8Array([0,2]),new Uint8Array([1,2]),new Uint8Array([2,0]),new Uint8Array([3,0]),new Uint8Array([2,2]),new Uint8Array([3,2]),new Uint8Array([0,1]),new Uint8Array([1,1]),new Uint8Array([0,3]),new Uint8Array([1,3]),new Uint8Array([2,1]),new Uint8Array([3,1]),new Uint8Array([2,3]),new Uint8Array([3,3]);Te(0,0,0,0),new Float32Array([0,0,0,0]),Te(0,0,0,1),new Float32Array([0,0,0,1]),Te(0,0,1,0),new Float32Array([0,0,1,0]),Te(0,0,1,1),new Float32Array([0,0,1,1]),Te(0,1,0,0),new Float32Array([0,1,0,0]),Te(0,1,0,1),new Float32Array([0,1,0,1]),Te(0,1,1,0),new Float32Array([0,1,1,0]),Te(0,1,1,1),new Float32Array([0,1,1,1]),Te(1,0,0,0),new Float32Array([1,0,0,0]),Te(1,0,0,1),new Float32Array([1,0,0,1]),Te(1,0,1,0),new Float32Array([1,0,1,0]),Te(1,0,1,1),new Float32Array([1,0,1,1]),Te(1,1,0,0),new Float32Array([1,1,0,0]),Te(1,1,0,1),new Float32Array([1,1,0,1]),Te(1,1,1,0),new Float32Array([1,1,1,0]),Te(1,1,1,1),new Float32Array([1,1,1,1]);function be(e,t,r){return e+(t-e)*r}function Te(e,t,r,n){const i=be(e,t,.75),a=be(r,n,.75);return be(i,a,.875)}}}]);