"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[21108],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>d});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var a=o.createContext({}),l=function(e){var n=o.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=l(e.components);return o.createElement(a.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=l(t),d=r,g=p["".concat(a,".").concat(d)]||p[d]||u[d]||i;return t?o.createElement(g,c(c({ref:n},m),{},{components:t})):o.createElement(g,c({ref:n},m))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,c=new Array(i);c[0]=p;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var l=2;l<i;l++)c[l]=t[l];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},88494:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>u});t(67294);var o=t(3905);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const s={title:"Room Connection Events",description:"Room connection events guide.",sidebar_position:2,tags:["mobile-core","ios-core","connection events","reconnection"]},a="Room Connection Events",l={unversionedId:"room/room-connection-events",id:"room/room-connection-events",title:"Room Connection Events",description:"Room connection events guide.",source:"@site/docs/ios-core/room/room-connection-events.mdx",sourceDirName:"room",slug:"/room/room-connection-events",permalink:"/ios-core/room/room-connection-events",draft:!1,editUrl:"https://github.com/dyte-in/docs/tree/main/docs/ios-core/room/room-connection-events.mdx",tags:[{label:"mobile-core",permalink:"/ios-core/tags/mobile-core"},{label:"ios-core",permalink:"/ios-core/tags/ios-core"},{label:"connection events",permalink:"/ios-core/tags/connection-events"},{label:"reconnection",permalink:"/ios-core/tags/reconnection"}],version:"current",lastUpdatedAt:1692164292,formattedLastUpdatedAt:"2023\ub144 8\uc6d4 16\uc77c",sidebarPosition:2,frontMatter:{title:"Room Connection Events",description:"Room connection events guide.",sidebar_position:2,tags:["mobile-core","ios-core","connection events","reconnection"]},sidebar:"tutorialSidebar",previous:{title:"Room Metadata",permalink:"/ios-core/room/room-metadata"},next:{title:"Introducing chat",permalink:"/ios-core/chat/introduction"}},m={},u=[{value:"Connecting to room",id:"connecting-to-room",level:3},{value:"Connected to room",id:"connected-to-room",level:3},{value:"Disconnected from room",id:"disconnected-from-room",level:3},{value:"Reconnecting to room",id:"reconnecting-to-room",level:3},{value:"Reconnected to room",id:"reconnected-to-room",level:3},{value:"Room connection failed",id:"room-connection-failed",level:3},{value:"Room reconnection failed",id:"room-reconnection-failed",level:3}],p={toc:u};function d(e){var{components:n}=e,t=c(e,["components"]);return(0,o.kt)("wrapper",i(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},o=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),o.forEach((function(n){r(e,n,t[n])}))}return e}({},p,t),{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"room-connection-events"},"Room Connection Events"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"meeting")," object emits various events to indicate changes in the connection status of the room. When a connection is lost,\nthe Dyte SDK detects it and attempts to reconnect the user to the meeting room automatically."),(0,o.kt)("p",null,"You can subscribe to these events by implementing the ",(0,o.kt)("inlineCode",{parentName:"p"},"DyteMeetingRoomEventsListener")," callbacks and passing the object to\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"meeting.addMeetingRoomEventsListener(dyteMeetingRoomEventsListener)"),"."),(0,o.kt)("p",null,"The following are the room connection events:"),(0,o.kt)("h3",{id:"connecting-to-room"},"Connecting to room"),(0,o.kt)("p",null,"When the local user starts connecting to the meeting room during initialization, this event is triggered."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"extension  DyteEventSelfListner: DyteMeetingRoomEventsListener {\n    func onConnectingToMeetingRoom() {\n\n    }\n}\n")),(0,o.kt)("h3",{id:"connected-to-room"},"Connected to room"),(0,o.kt)("p",null,"When the local user connects to the meeting room after initialization, this event is triggered."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"extension  DyteEventSelfListner: DyteMeetingRoomEventsListener {\n  func onConnectedToMeetingRoom() {\n\n  }\n}\n")),(0,o.kt)("h3",{id:"disconnected-from-room"},"Disconnected from room"),(0,o.kt)("p",null,"When the local user disconnects while leaving the meeting room, this event is triggered."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"extension  DyteEventSelfListner: DyteMeetingRoomEventsListener {\n    func onDisconnectedFromMeetingRoom() {\n\n    }\n}\n")),(0,o.kt)("h3",{id:"reconnecting-to-room"},"Reconnecting to room"),(0,o.kt)("p",null,"When the Dyte SDK detects a connection drop and attempts to reconnect to the meeting room, this event is triggered."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"extension  DyteEventSelfListner: DyteMeetingRoomEventsListener {\n    func onReconnectingToMeetingRoom() {\n\n    }\n}\n")),(0,o.kt)("h3",{id:"reconnected-to-room"},"Reconnected to room"),(0,o.kt)("p",null,"When the local user successfully reconnects to the meeting room, this event is triggered."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"extension  DyteEventSelfListner: DyteMeetingRoomEventsListener {\n    func onReconnectedToMeetingRoom() {\n\n    }\n}\n")),(0,o.kt)("h3",{id:"room-connection-failed"},"Room connection failed"),(0,o.kt)("p",null,"When the local user fails to connect to the meeting room during initialization, this event is triggered. This might occur\nbecause of internet connection issues."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"extension  DyteEventSelfListner: DyteMeetingRoomEventsListener {\n    func onMeetingRoomConnectionFailed() {\n\n    }\n}\n")),(0,o.kt)("h3",{id:"room-reconnection-failed"},"Room reconnection failed"),(0,o.kt)("p",null,"When the local user fails to reconnect to the meeting room, this event is triggered. This occurs when the local user's\ninternet connection goes down for an extended period of time and the Dyte SDK is unable to reconnect despite multiple attempts."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"extension  DyteEventSelfListner: DyteMeetingRoomEventsListener {\n    func onMeetingRoomReconnectionFailed() {\n\n    }\n}\n")))}d.isMDXComponent=!0}}]);