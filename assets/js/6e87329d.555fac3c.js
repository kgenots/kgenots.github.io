"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[28149],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,c=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),h=l(r),f=a,m=h["".concat(s,".").concat(f)]||h[f]||u[f]||c;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=r.length,i=new Array(c);i[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var l=2;l<c;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},79767:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>u});r(67294);var n=r(3905);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}const o={title:"Receiving chat messages",description:"Receive chat messages that has been sent in a meeting.",sidebar_position:3,tags:["flutter-core","chat"]},s="Receive a Chat Message",l={unversionedId:"flutter-core/chat/receiving-chat-messages",id:"flutter-core/chat/receiving-chat-messages",title:"Receiving chat messages",description:"Receive chat messages that has been sent in a meeting.",source:"@site/docs/archive/flutter-core/chat/receiving-chat-messages.mdx",sourceDirName:"flutter-core/chat",slug:"/flutter-core/chat/receiving-chat-messages",permalink:"/archive/flutter-core/chat/receiving-chat-messages",draft:!1,tags:[{label:"flutter-core",permalink:"/archive/tags/flutter-core"},{label:"chat",permalink:"/archive/tags/chat"}],version:"current",sidebarPosition:3,frontMatter:{title:"Receiving chat messages",description:"Receive chat messages that has been sent in a meeting.",sidebar_position:3,tags:["flutter-core","chat"]},sidebar:"tutorialSidebar",previous:{title:"Sending a chat message",permalink:"/archive/flutter-core/chat/sending-a-chat-message"},next:{title:"Introduction",permalink:"/archive/flutter-core/livestream/introduction"}},p={},u=[],h={toc:u};function f(e){var{components:t}=e,r=i(e,["components"]);return(0,n.kt)("wrapper",c(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){a(e,t,r[t])}))}return e}({},h,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"receive-a-chat-message"},"Receive a Chat Message"),(0,n.kt)("p",null,"To receive chat messages, implement the ",(0,n.kt)("inlineCode",{parentName:"p"},"onChatUpdates(...)")," method from callback ",(0,n.kt)("inlineCode",{parentName:"p"},"DyteChatEventsListener"),". You can subscribe to these events by calling the following:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"\nclass ChatEventsListener with DyteChatEventsListener {\n\n  ...\n\n  @override\n  void onChatUpdates(List<DyteChatMessage> messages) {\n        // your code to handle new chat message\n  }\n\n  void onNewChatMessage(DyteChatMessage message) {\n      // your code to handle new chat message\n  }\n  ...\n}\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"dyteClient.addChatEventsListener(ChatEventsListener());\n")),(0,n.kt)("p",null,"In this context, ",(0,n.kt)("inlineCode",{parentName:"p"},"messages")," refers to a list of all the chat messages in the meeting. The type of message used is ",(0,n.kt)("inlineCode",{parentName:"p"},"DyteChatMessage"),", which was introduced earlier in the ",(0,n.kt)("a",{parentName:"p",href:"/archive/flutter-core/chat/introduction"},"introduction")," to Chat topic."),(0,n.kt)("p",null,"Whenever a chat message is received, the ",(0,n.kt)("inlineCode",{parentName:"p"},"dyteClient.chat.messages")," list is automatically updated."))}f.isMDXComponent=!0}}]);