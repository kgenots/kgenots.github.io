"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[40745],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},19291:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>d});n(67294);var r=n(3905);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const s={title:"Events",description:"Local user events guide.",sidebar_position:2,tags:["flutter-core","local-user","self"]},l="Local User - Events",u={unversionedId:"flutter-core/local-user/events",id:"flutter-core/local-user/events",title:"Events",description:"Local user events guide.",source:"@site/docs/archive/flutter-core/local-user/events.mdx",sourceDirName:"flutter-core/local-user",slug:"/flutter-core/local-user/events",permalink:"/archive/flutter-core/local-user/events",draft:!1,tags:[{label:"flutter-core",permalink:"/archive/tags/flutter-core"},{label:"local-user",permalink:"/archive/tags/local-user"},{label:"self",permalink:"/archive/tags/self"}],version:"current",sidebarPosition:2,frontMatter:{title:"Events",description:"Local user events guide.",sidebar_position:2,tags:["flutter-core","local-user","self"]},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/archive/flutter-core/local-user/introduction"},next:{title:"Manage Media Devices",permalink:"/archive/flutter-core/local-user/manage-media-devices"}},c={},d=[{value:"Video update",id:"video-update",level:3},{value:"Audio update",id:"audio-update",level:3},{value:"Room disconnected update",id:"room-disconnected-update",level:3},{value:"Proximity changed",id:"proximity-changed",level:3},{value:"Waitlist status",id:"waitlist-status",level:3},{value:"Webinar request",id:"webinar-request",level:2},{value:"Local user removed",id:"local-user-removed",level:2},{value:"Listen to stage status changes",id:"listen-to-stage-status-changes",level:2}],p={toc:d};function m(e){var{components:t}=e,n=o(e,["components"]);return(0,r.kt)("wrapper",i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){a(e,t,n[t])}))}return e}({},p,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"local-user---events"},"Local User - Events"),(0,r.kt)("p",null,"You can subscribe to various local user events:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"To subscribe, pass the instance of ",(0,r.kt)("inlineCode",{parentName:"li"},"LocalUserListener")," class created above\nto ",(0,r.kt)("inlineCode",{parentName:"li"},"addSelfEventsListener()")," method of ",(0,r.kt)("inlineCode",{parentName:"li"},"dyteClient")," instance as follows:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart",metastring:"{2}","{2}":!0},"dyteClient.addSelfEventsListener(LocalUserListener());\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Implement ",(0,r.kt)("inlineCode",{parentName:"li"},"DyteSelfEventsListener")," to a class say ",(0,r.kt)("inlineCode",{parentName:"li"},"LocalUserListener"),", and\nlisten to event from ",(0,r.kt)("inlineCode",{parentName:"li"},"DyteSelfEventsListener")," by overriding them. This class\ncan be user to manage your state in the application.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"class LocalUserListener implements DyteSelfEventsListener {\n\n  ...\n\n  @override\n  void onAudioDevicesUpdated() {\n    /// code to handle onAudioDevicesUpdated() event\n  }\n\n  ...\n}\n")),(0,r.kt)("h3",{id:"video-update"},"Video update"),(0,r.kt)("p",null,"Triggered when the user starts / stops the video using ",(0,r.kt)("inlineCode",{parentName:"p"},"enableVideo()"),"/\n",(0,r.kt)("inlineCode",{parentName:"p"},"disableVideo()"),", or host turns-off the video."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"class LocalUserListener implements DyteSelfEventsListener {\n\n  ...\n\n  @override\n  void onVideoUpdate(bool videoEnabled) {\n    if(isVideoEnabled){\n      // Video is enabled, other users can see the video.\n    } else {\n      // Video is disabled, others users can't see the video.\n    }\n\n  //  or alternatively you can pass the bool through state as demonstrated in example app.\n  }\n\n  ...\n}\n")),(0,r.kt)("h3",{id:"audio-update"},"Audio update"),(0,r.kt)("p",null,"Triggered when the user starts / stops the audio using ",(0,r.kt)("inlineCode",{parentName:"p"},"enableAudio()"),"/\n",(0,r.kt)("inlineCode",{parentName:"p"},"disableAudio()"),", or host mutes the audio."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"\nclass LocalUserListener implements DyteSelfEventsListener {\n\n  ...\n\n  @override\n  void onAudioUpdate(bool audioEnabled) {\n    if (audioEnabled) {\n        // audio is enabled, and other participants in room can hear local user\n      } else {\n        // audio is disabled, and other participants in room can not hear local user.\n      }\n\n    //  or alternatively you can pass the bool through state as demonstrated in example app.\n  }\n  ...\n}\n")),(0,r.kt)("h3",{id:"room-disconnected-update"},"Room disconnected update"),(0,r.kt)("p",null,"Triggered when the user is disconnected due to media or network errors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"\nclass RoomStateNotifier implements DyteMeetingRoomEventsListener {\n\n  ...\n\n  @override\n  void onMeetingRoomDisconnected() {\n    // Display a notification to the user indicating that they have been disconnected from the meeting.\n  }\n  ...\n}\n")),(0,r.kt)("h3",{id:"proximity-changed"},"Proximity changed"),(0,r.kt)("p",null,"Triggered by any change in proximity, such as when the device is brought near or moved away from an earpiece, which triggers the display to turn on or off."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"\nclass LocalUserListener implements DyteSelfEventsListener {\n\n  ...\n\n  @override\n  void onProximityChanged(bool isNear) {\n    if (isNear) {\n        // Display should be turned off, as user might be speaking through ear piece\n      } else {\n        // Display should be tunred on, as user might be looking at display and listening through speaker/earphones.\n      }\n  }\n  ...\n}\n")),(0,r.kt)("h3",{id:"waitlist-status"},"Waitlist status"),(0,r.kt)("p",null,"When the waiting room feature is enabled for a meeting, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"onWaitListStatusUpdate()")," callback function to receive updates on waiting room status changes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"\nclass LocalUserNotifier implements DyteSelfEventsListener {\n\n  ...\n\n  @override\n  void onWaitListStatusUpdate(DyteWaitListStatus waitListStatus) {\n    // DyteWaitListStatus is an enum with the following values:\n    // if `DyteWaitListStatus.none`, user is not on the waitlist\n    // if `DyteWaitListStatus.waiting`, user is on the waitlist\n    // if `DyteWaitListStatus.accepted`, user has been accepted in the meeting.\n    // if `DyteWaitListStatus.rejected`, user has been rejected from the meeting.\n  }\n\n  ...\n}\n")),(0,r.kt)("h2",{id:"webinar-request"},"Webinar request"),(0,r.kt)("p",null,"When the local user receives a request to join the webinar, the ",(0,r.kt)("inlineCode",{parentName:"p"},"onWebinarPresentRequestReceived()")," callback function is triggered. Similarly, when the local user stops presenting during the webinar, the ",(0,r.kt)("inlineCode",{parentName:"p"},"onStoppedPresenting()")," callback function is triggered."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"@override\nvoid onWebinarPresentRequestReceived() {\n  // Display an alert to the user, allowing them to accept or reject the request.\n\n\n}\n\n@override\nvoid onStoppedPresenting() {\n  // Display an alert to the user indicating that they are no longer presenting.\n}\n")),(0,r.kt)("h2",{id:"local-user-removed"},"Local user removed"),(0,r.kt)("p",null,"When the local user is removed from the meeting, the ",(0,r.kt)("inlineCode",{parentName:"p"},"onRemovedFromMeeting()")," callback is triggered."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"\n@override\nvoid onRemovedFromMeeting() {\n  // Display an alert to the user indicating that they are no longer in the meeting.\n}\n")),(0,r.kt)("h2",{id:"listen-to-stage-status-changes"},"Listen to stage status changes"),(0,r.kt)("p",null,"When the stage status of local user is updated, this event is triggered. It contains updated stage status as an argument."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"@override\nvoid onStageStatusUpdated(DyteStageStatus status){\n  // Update your UI as per this stage status.\n}\n")))}m.isMDXComponent=!0}}]);