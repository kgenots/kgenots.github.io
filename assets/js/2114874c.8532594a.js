"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[6453],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>v});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(r),v=i,p=d["".concat(l,".").concat(v)]||d[v]||m[v]||a;return r?n.createElement(p,o(o({ref:t},u),{},{components:r})):n.createElement(p,o({ref:t},u))}));function v(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},15918:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>v,frontMatter:()=>s,metadata:()=>c,toc:()=>m});r(67294);var n=r(3905);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}const s={title:"Introduction",description:"Control livestreaming in your product.",sidebar_position:1,tags:["flutter-core","livestream"]},l="Introduction - Livestream",c={unversionedId:"livestream/introduction",id:"livestream/introduction",title:"Introduction",description:"Control livestreaming in your product.",source:"@site/docs/flutter-core/livestream/introduction.mdx",sourceDirName:"livestream",slug:"/livestream/introduction",permalink:"/flutter-core/livestream/introduction",draft:!1,editUrl:"https://github.com/dyte-in/docs/tree/main/docs/flutter-core/livestream/introduction.mdx",tags:[{label:"flutter-core",permalink:"/flutter-core/tags/flutter-core"},{label:"livestream",permalink:"/flutter-core/tags/livestream"}],version:"current",lastUpdatedAt:1692164292,formattedLastUpdatedAt:"Aug 16, 2023",sidebarPosition:1,frontMatter:{title:"Introduction",description:"Control livestreaming in your product.",sidebar_position:1,tags:["flutter-core","livestream"]},sidebar:"tutorialSidebar",previous:{title:"Receiving chat messages",permalink:"/flutter-core/chat/receiving-chat-messages"},next:{title:"Livestream objects & methods",permalink:"/flutter-core/livestream/dyte-livestream-object"}},u={},m=[{value:"DyteLivestream Object",id:"dytelivestream-object",level:2},{value:"Livestream Events Listener",id:"livestream-events-listener",level:2},{value:"LivestreamView",id:"livestreamview",level:2}],d={toc:m};function v(e){var{components:t}=e,r=o(e,["components"]);return(0,n.kt)("wrapper",a(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){i(e,t,r[t])}))}return e}({},d,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"introduction---livestream"},"Introduction - Livestream"),(0,n.kt)("p",null,"This section will guide you through the process of integrating the livestreaming feature into your product. Using Dyte's live-streaming state management APIs you can easily manage stage requests, such as leave and join stage, manage permissions, kick participants and so on."),(0,n.kt)("p",null,"The foundation of Dyte's livestreaming is based on a stage, which can be accessed by hosts and viewers. While hosts can directly enter the stage, viewers can request to join it. The stage is broadcasted live to all viewers."),(0,n.kt)("h2",{id:"dytelivestream-object"},"DyteLivestream Object"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"DyteLivestream")," object contains all the methods and properties for the ongoing livestream session. This livestream object can be accessed via ",(0,n.kt)("inlineCode",{parentName:"p"},"dyteMobileClient.livestream")," method, where ",(0,n.kt)("inlineCode",{parentName:"p"},"dyteMobileClient")," is the instance of ",(0,n.kt)("inlineCode",{parentName:"p"},"DyteMobileClient()"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"class DyteLivestream {\n  DyteLivestreamData get data;\n  List<DyteLiveStreamStageRequestPeer> get requests;\n  void start() {}\n  void stop() {}\n  void acceptRequest(DyteLiveStreamStageRequestPeer peer) {}\n  void rejectRequest(DyteLiveStreamStageRequestPeer peer) {}\n  void acceptAllRequests() {}\n  void rejectAllRequests() {}\n  Future<String?> getUrl();\n  Future<String> getRoomName();\n  Future<DyteLivestreamStatus?> getState();\n}\n\n")),(0,n.kt)("h2",{id:"livestream-events-listener"},"Livestream Events Listener"),(0,n.kt)("p",null,"You can listen to the livestream events via ",(0,n.kt)("inlineCode",{parentName:"p"},"DyteLivestreamEventsListener"),". You can register the listener via ",(0,n.kt)("inlineCode",{parentName:"p"},"dyteMobileClient.addLivestreamEventsListener()")," method and listen to livestream events."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"class DyteLivestreamEventsListener {\n  void onLiveStreamStarting() {}\n  void onLiveStreamStarted() {}\n  void onLiveStreamStateUpdate(DyteLivestreamData data) {}\n  void onViewerCountUpdated(int count) {}\n  void onLiveStreamEnding() {}\n  void onLiveStreamEnded() {}\n  void onLiveStreamErrored() {}\n  void onStageCountUpdated(int count) {}\n  void onStageRequestsUpdated(List<DyteLiveStreamStageRequestPeer> requests) {}\n  void onJoinRequestAccepted(DyteLiveStreamStagePeer peer) {}\n  void onJoinRequestRejected(DyteLiveStreamStagePeer peer) {}\n}\n")),(0,n.kt)("h2",{id:"livestreamview"},"LivestreamView"),(0,n.kt)("p",null,"LivestreamView widget returns the view for the current livestream. It takes ",(0,n.kt)("inlineCode",{parentName:"p"},"String? url")," as an argument of the livestream which is accessible via ",(0,n.kt)("inlineCode",{parentName:"p"},"dyteMobileClient.livestream.url")," method or ",(0,n.kt)("inlineCode",{parentName:"p"},"Future<String?> getUrl()")," method on ",(0,n.kt)("inlineCode",{parentName:"p"},"DyteLivestream")," class, which returns null if there's no livestream url."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"final livestreamView = LivestreamView(\n  url: dyteMobileClient.livestream.url,\n);\n\n// or\n\nFuture<Widget> fetchLivestreamView () async {\n  String? url = await dyteMobileClient.livestream.getUrl();\n  if (url != null) {\n    return LivestreamView(\n      url: url,\n    );\n  } else {\n    return Container();\n  }\n\n  final livestreamView = await fetchLivestreamView();\n}\n")))}v.isMDXComponent=!0}}]);