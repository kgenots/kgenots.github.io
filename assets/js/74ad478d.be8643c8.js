"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[35951],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},d=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=l(r),m=a,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||i;return r?n.createElement(f,c(c({ref:t},d),{},{components:r})):n.createElement(f,c({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,c=new Array(i);c[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var l=2;l<i;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4715:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});r(67294);var n=r(3905);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}const o={title:"Manage Media Devices",description:"Local user media guide to manage media permissions.",sidebar_position:3,tags:["web-core","local-user","self","self events"]},s="Manage Media Devices",l={unversionedId:"local-user/manage-media-devices",id:"local-user/manage-media-devices",title:"Manage Media Devices",description:"Local user media guide to manage media permissions.",source:"@site/docs/react-web-core/local-user/manage-media-devices.mdx",sourceDirName:"local-user",slug:"/local-user/manage-media-devices",permalink:"/react-web-core/local-user/manage-media-devices",draft:!1,editUrl:"https://github.com/dyte-in/docs/tree/main/docs/react-web-core/local-user/manage-media-devices.mdx",tags:[{label:"web-core",permalink:"/react-web-core/tags/web-core"},{label:"local-user",permalink:"/react-web-core/tags/local-user"},{label:"self",permalink:"/react-web-core/tags/self"},{label:"self events",permalink:"/react-web-core/tags/self-events"}],version:"current",lastUpdatedAt:1692164292,formattedLastUpdatedAt:"2023\ub144 8\uc6d4 16\uc77c",sidebarPosition:3,frontMatter:{title:"Manage Media Devices",description:"Local user media guide to manage media permissions.",sidebar_position:3,tags:["web-core","local-user","self","self events"]},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/react-web-core/local-user/events"},next:{title:"Media Permission Errors",permalink:"/react-web-core/local-user/media-permission-errors"}},d={},u=[{value:"Set device",id:"set-device",level:2}],p={toc:u};function m(e){var{components:t}=e,r=c(e,["components"]);return(0,n.kt)("wrapper",i(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){a(e,t,r[t])}))}return e}({},p,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"manage-media-devices"},"Manage Media Devices"),(0,n.kt)("p",null,"Media devices represents the hardware for the camera, microphone and speaker\ndevices. To get the list of media devices that are currently being used, you can\nuse the following methods:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// Get all media devices\nconst devices = meeting.self.getAllDevices();\n\n// Get all audio devices\nconst audioDevices = meeting.self.getAudioDevices();\n\n// Get all video devices\nconst videoDevices = meeting.self.getVideoDevices();\n\n// Get all speakers\nconst speakerDevices = meeting.self.getSpeakerDevices();\n\n// Get device by ID\nconst device = meeting.self.getDeviceById('12345', 'audio');\n\n// Fetch current media devices being used\nconst currentDevices = meeting.self.getCurrentDevices();\n")),(0,n.kt)("h2",{id:"set-device"},"Set device"),(0,n.kt)("p",null,"To set a device as an active device, you can call ",(0,n.kt)("inlineCode",{parentName:"p"},"setDevice")," method. This takes\na ",(0,n.kt)("inlineCode",{parentName:"p"},"MediaDeviceInfo")," object, and replaces the same ",(0,n.kt)("inlineCode",{parentName:"p"},"kind")," device."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"meeting.self.setDevice(device);\n")))}m.isMDXComponent=!0}}]);