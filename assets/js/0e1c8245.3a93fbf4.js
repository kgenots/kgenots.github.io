"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[56555],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},l=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(g,p(p({ref:t},l),{},{components:n})):a.createElement(g,p({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,p=new Array(i);p[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,p[1]=o;for(var s=2;s<i;s++)p[s]=n[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},31386:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>d});n(67294);var a=n(3905);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const o={title:"Participant Events",description:"Event handling for participants.",sidebar_position:3,tags:["web-core","participants","self"]},c=void 0,s={unversionedId:"participants/events",id:"participants/events",title:"Participant Events",description:"Event handling for participants.",source:"@site/docs/react-web-core/participants/events.mdx",sourceDirName:"participants",slug:"/participants/events",permalink:"/react-web-core/participants/events",draft:!1,editUrl:"https://github.com/dyte-in/docs/tree/main/docs/react-web-core/participants/events.mdx",tags:[{label:"web-core",permalink:"/react-web-core/tags/web-core"},{label:"participants",permalink:"/react-web-core/tags/participants"},{label:"self",permalink:"/react-web-core/tags/self"}],version:"current",lastUpdatedAt:1692164292,formattedLastUpdatedAt:"Aug 16, 2023",sidebarPosition:3,frontMatter:{title:"Participant Events",description:"Event handling for participants.",sidebar_position:3,tags:["web-core","participants","self"]},sidebar:"tutorialSidebar",previous:{title:"The participant object",permalink:"/react-web-core/participants/participant-object"},next:{title:"Introducing chat",permalink:"/react-web-core/chat/introduction"}},l={},d=[{value:"Events",id:"events",level:2},{value:"View mode change",id:"view-mode-change",level:3},{value:"Page change",id:"page-change",level:3},{value:"Active speaker",id:"active-speaker",level:3},{value:"Events on all participants",id:"events-on-all-participants",level:2},{value:"Participant joined",id:"participant-joined",level:3},{value:"Participant pinned",id:"participant-pinned",level:3},{value:"Video update",id:"video-update",level:3},{value:"Screen share update",id:"screen-share-update",level:3},{value:"Network quality score",id:"network-quality-score",level:2},{value:"Events for specific participant",id:"events-for-specific-participant",level:2},{value:"Webinar events",id:"webinar-events",level:3}],u={toc:d};function m(e){var{components:t}=e,n=p(e,["components"]);return(0,a.kt)("wrapper",i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){r(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"events"},"Events"),(0,a.kt)("p",null,"You can subscribe to events for all participants using\n",(0,a.kt)("inlineCode",{parentName:"p"},"meeting.participants.on()")," method. Here are the supported events:"),(0,a.kt)("h3",{id:"view-mode-change"},"View mode change"),(0,a.kt)("p",null,"Triggered when the View mode changes"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const viewMode = useDyteSelector((meeting) => meeting.participants.viewMode);\n")),(0,a.kt)("h3",{id:"page-change"},"Page change"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const pageChanged = useDyteSelector(\n  (meeting) => meeting.participants.pageCount\n);\n")),(0,a.kt)("h3",{id:"active-speaker"},"Active speaker"),(0,a.kt)("p",null,"This event is triggered when a participant becomes ",(0,a.kt)("inlineCode",{parentName:"p"},"active")," when they starts to\nspeak."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const activeSpeaker = useDyteSelector(\n  (meeting) => meeting.participants.lastActiveSpeaker\n);\n")),(0,a.kt)("h2",{id:"events-on-all-participants"},"Events on all participants"),(0,a.kt)("p",null,"Instead of subscribing to individual participant events, you can subscribe to a\nparticipant map, such as ",(0,a.kt)("inlineCode",{parentName:"p"},"joined")," & ",(0,a.kt)("inlineCode",{parentName:"p"},"active")," and get updated when any of the\nparticipant emits an event."),(0,a.kt)("p",null,"If you want to subscribe to participants when they become ",(0,a.kt)("inlineCode",{parentName:"p"},"active"),", you can do\nso by subscribing to ",(0,a.kt)("inlineCode",{parentName:"p"},"meetings.participants.active.on('participantJoined')")),(0,a.kt)("h3",{id:"participant-joined"},"Participant joined"),(0,a.kt)("p",null,"Trigger an event when any participant joins the meeting."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const joinedParticipants = useDyteSelector(\n  (meeting) => meeting.participants.joined\n);\n")),(0,a.kt)("h3",{id:"participant-pinned"},"Participant pinned"),(0,a.kt)("p",null,"Trigger an event when a participant is pinned / unpinned."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const pinnedParticipants = useDyteSelector(\n  (meeting) => meeting.participants.pinned\n);\n")),(0,a.kt)("h3",{id:"video-update"},"Video update"),(0,a.kt)("p",null,"Trigger an event when the target participant starts / stops video."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const videoEnabled = useDyteSelector((m) =>\n  m.participants.joined.get(participantId).videoEnabled\n);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\n### Audio update\n\nTrigger an event when the target participant starts / stops audio.\n\n```ts\nconst audioEnabled = useDyteSelector((m) =>\n  m.participants.joined.get(participantId).audioEnabled\n);\n")),(0,a.kt)("h3",{id:"screen-share-update"},"Screen share update"),(0,a.kt)("p",null,"Trigger an event when the target participant starts / stops screen share."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const screenShareEnabled = useDyteSelector((m) =>\n  m.participants.joined.get(participantId).screenShareEnabled\n);\n")),(0,a.kt)("p",null,"Trigger an event when any participant starts / stops screen share."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const screensharingParticipant = useDyteSelector((m) =>\n  m.participants.joined.toArray().find((p) => p.screenShareEnabled)\n);\n")),(0,a.kt)("h2",{id:"network-quality-score"},"Network quality score"),(0,a.kt)("p",null,"Subscribe to the ",(0,a.kt)("inlineCode",{parentName:"p"},"mediaScoreUpdate")," event to monitor network"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"meeting.participants.joined.on(\n  'mediaScoreUpdate',\n  ({ participantId, kind, isScreenshare, score }) => {\n    if (kind === 'video') {\n      console.log(\n        `Participant ${participantId}'s ${\n          isScreenshare ? 'screenshare' : 'video'\n        } quality score is `,\n        score\n      );\n    }\n\n    if (kind === 'audio') {\n      console.log(\n        `Participant ${participantId}'s audio quality score is `,\n        score\n      );\n    }\n\n    if (score < 5) {\n      console.log(`Participant ${participantId}'s media quality is poor`);\n    }\n  }\n);\n")),(0,a.kt)("h2",{id:"events-for-specific-participant"},"Events for specific participant"),(0,a.kt)("p",null,"If you want to subscribe to above events but for a specific participant only,\nyou can do so by binding event to ",(0,a.kt)("inlineCode",{parentName:"p"},"meeting.participants.joined.get(peerId).on()"),"\nmethod. where the ",(0,a.kt)("inlineCode",{parentName:"p"},"peerId")," is the id of the participant that you want to watch."),(0,a.kt)("h3",{id:"webinar-events"},"Webinar events"),(0,a.kt)("p",null,"Here is a list of events that can are emitted for a participants in a ",(0,a.kt)("inlineCode",{parentName:"p"},"WEBINAR"),"\nsetup."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Event")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Description")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"peerRequestToJoinStage")),(0,a.kt)("td",{parentName:"tr",align:null},"Emitted when a user has requested to join the webinar meeting.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"peerRejectedToJoinStage")),(0,a.kt)("td",{parentName:"tr",align:null},"Emitted when the user's request to join the meeting has been rejected.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"peerAcceptedToJoinStage")),(0,a.kt)("td",{parentName:"tr",align:null},"Emitted when the user's request to join the meeting has been accepted")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"peerStoppedPresenting")),(0,a.kt)("td",{parentName:"tr",align:null},"Emitted when a participant stops presenting in the webinar meeting.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"peerStartedPresenting")),(0,a.kt)("td",{parentName:"tr",align:null},"Emitted when a participant starts presenting in the webinar meeting.")))))}m.isMDXComponent=!0}}]);