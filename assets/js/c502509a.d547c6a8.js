"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[76975],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),g=o,m=u["".concat(s,".").concat(g)]||u[g]||d[g]||a;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1354:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>c,toc:()=>d});r(67294);var n=r(3905);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}const l={title:"Recording Overview",sidebar_position:1},s=void 0,c={unversionedId:"capabilities/recording/recording-overview",id:"capabilities/recording/recording-overview",title:"Recording Overview",description:"Recording a meeting means storing a video and audio call of a meeting to a file",source:"@site/docs/develop/capabilities/recording/recording-overview.mdx",sourceDirName:"capabilities/recording",slug:"/capabilities/recording/recording-overview",permalink:"/develop/capabilities/recording/recording-overview",draft:!1,editUrl:"https://github.com/dyte-in/docs/tree/main/docs/develop/capabilities/recording/recording-overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Recording Overview",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Recording",permalink:"/develop/capabilities/recording/"},next:{title:"Start Recording a Meeting",permalink:"/develop/capabilities/recording/start-recording"}},p={},d=[{value:"How does Dyte recording work?",id:"how-does-dyte-recording-work",level:2},{value:"Benefits of using Dyte recordings",id:"benefits-of-using-dyte-recordings",level:2},{value:"Workflow",id:"workflow",level:2},{value:"Recording states",id:"recording-states",level:2}],u={toc:d};function g(e){var{components:t}=e,r=i(e,["components"]);return(0,n.kt)("wrapper",a(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){o(e,t,r[t])}))}return e}({},u,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Recording a meeting means storing a video and audio call of a meeting to a file\nthat can be viewed at a later point. When recording a meeting, it is common\npractice to record all of the participants and interactions that occur. This can\nbe challenging in a multi-user application where users can join, leave, and turn\ntheir cameras on and off at any time."),(0,n.kt)("p",null,"Dyte records the audio and video of multiple users in a meeting, as well as\ninteractions with Dyte plugins, in a single file using composite recording mode."),(0,n.kt)("h2",{id:"how-does-dyte-recording-work"},"How does Dyte recording work?"),(0,n.kt)("p",null,"Dyte recordings are powered by anonymous virtual bot users who join your\nmeeting, record it, and then upload it to Dyte's AWS S3 bucket. For video files,\nwe currently support the\n",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Advanced_Video_Coding"},"H.264")," and\n",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/VP8"},"VP8")," codecs."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"When the recording is finished, it is stored in Dyte's AWS S3 bucket.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Dyte generates a downloadable link from which the recording can be\ndownloaded. You can get the download URL using the\n",(0,n.kt)("a",{parentName:"p",href:"/api?v=v2#/operations/get_one_recording"},"Fetch details of a recording API"),"\nor from the ",(0,n.kt)("a",{parentName:"p",href:"https://dev.dyte.io/"},"Developer Portal"),"."),(0,n.kt)("p",{parentName:"li"},"You can receive notifications of recording status in any of the following\nways:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Using the\n",(0,n.kt)("a",{parentName:"li",href:"/develop/capabilities/webhooks/webhook-events#recordingstatusupdate"},(0,n.kt)("inlineCode",{parentName:"a"},"recording.statusUpdate")),"\nwebhook. Dyte uses webhooks to notify your application when an event\nhappens."),(0,n.kt)("li",{parentName:"ul"},"Using the\n",(0,n.kt)("a",{parentName:"li",href:"/api?v=v2#/operations/get_active_recording"},"Fetch active recording API"),"."),(0,n.kt)("li",{parentName:"ul"},"You can also view the states of recording from the\n",(0,n.kt)("a",{parentName:"li",href:"https://dev.dyte.io/"},"Developer Portal"),"."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Download the recording from the download url and store it to your cloud\nstorage. The file is kept on Dyte's server for seven days before being\ndeleted."),(0,n.kt)("p",{parentName:"li"},"You can get the download URL using the\n",(0,n.kt)("a",{parentName:"p",href:"/api?v=v2#/operations/get_active_recording"},"Fetch active recording API"),". or\nfrom the ",(0,n.kt)("a",{parentName:"p",href:"https://dev.dyte.io/"},"Developer Portal"),"."),(0,n.kt)("p",{parentName:"li"},"We support transferring recordings to AWS, Azure, and DigitalOcean storage\nbuckets. You can also choose to preconfigure the storage configurations using\nthe ",(0,n.kt)("a",{parentName:"p",href:"https://dev.dyte.io/"},"Developer Portal")," or the\n",(0,n.kt)("a",{parentName:"p",href:"/api/?v=v2#/operations/start_recording"},"Start recording a meeting API"),"."))),(0,n.kt)("h2",{id:"benefits-of-using-dyte-recordings"},"Benefits of using Dyte recordings"),(0,n.kt)("p",null,"The following are some of the major benefits of using Dyte for recording your\nmeetings:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Reliable"),": Even if your third-party cloud storage fails, your recording\nfiles are automatically stored on Dyte's cloud server."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Secure"),": Security features include end-to-end encryption for voice and\nvideo calls, data transmission, and storage."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Compatible"),": Supports third-party cloud storage providers such as Amazon\nS3, Microsoft Azure, and DigitalOcean."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Easy-to-use"),": Simple implementation and use with RESTful API calls that\nenable you to start, stop, and query the recording."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Customizable"),": Other customizations, such as changing video's dimensions\nand adding a watermark image on top of the recording, are also supported.")),(0,n.kt)("h2",{id:"workflow"},"Workflow"),(0,n.kt)("p",null,"A typical workflow for recording a meeting involves the following steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Start a recording using the\n",(0,n.kt)("a",{parentName:"li",href:"/api/?v=v2#/operations/start_recording"},"POST endpoint"),"."),(0,n.kt)("li",{parentName:"ol"},"Stop the recording using the\n",(0,n.kt)("a",{parentName:"li",href:"/api/?v=v2#/operations/stop_recording"},"PUT endpoint"),"."),(0,n.kt)("li",{parentName:"ol"},"Fetch the download URL for downloading the recording using the\n",(0,n.kt)("a",{parentName:"li",href:"/api/?v=v2#/operations/get_one_recording"},"GET endpoint")," or from the\nDeveloper Portal.")),(0,n.kt)("h2",{id:"recording-states"},"Recording states"),(0,n.kt)("p",null,"The recording of a meeting can have the following states:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"INVOKED"),(0,n.kt)("td",{parentName:"tr",align:null},"Our backend servers have received the recording request, and the master is looking for a ready worker to assign the recording job.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"RECORDING"),(0,n.kt)("td",{parentName:"tr",align:null},"The meeting is currently being recorded by a worker; note that this will also hold true if the meeting is being live streamed.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"UPLOADING"),(0,n.kt)("td",{parentName:"tr",align:null},"The recording has been stopped and the file is being uploaded to the cloud storage. If you have not specified storage details, then the files will be uploaded only to Dyte's server. Any RTMP and livestreaming link will also stop at this stage.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"UPLOADED"),(0,n.kt)("td",{parentName:"tr",align:null},"The recording file upload is complete and the status webhook is also triggered.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ERRORED"),(0,n.kt)("td",{parentName:"tr",align:null},"There was an irrecoverable error while recording the meeting and the file will not be available.")))),(0,n.kt)("p",null,"You can receive notifications of recording status in any of the following ways:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Webhook"),": Utilize the ",(0,n.kt)("a",{parentName:"li",href:"/develop/capabilities/webhooks/webhook-events#recordingstatusupdate"},(0,n.kt)("inlineCode",{parentName:"a"},"recording.statusUpdate"))," webhook to receive real-time updates about the status of your recordings."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"API"),": Use the ",(0,n.kt)("a",{parentName:"li",href:"/api?v=v2#/operations/get_active_recording"},"Fetch active recording API")," to retrieve the status of your recordings programmatically."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Developer Portal"),": Access the ",(0,n.kt)("a",{parentName:"li",href:"https://dev.dyte.io/"},"Developer Portal")," to view the status of your recordings.")))}g.isMDXComponent=!0}}]);