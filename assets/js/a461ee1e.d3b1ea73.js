"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[45529],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?o.createElement(h,a(a({ref:t},p),{},{components:n})):o.createElement(h,a({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},56281:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>u});n(67294);var o=n(3905);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const s={title:"Migrate from OpenTok to Dyte with Shim",sidebar_position:2},c=void 0,l={unversionedId:"develop/etc/opentok/opentok-shim-by-dyte",id:"develop/etc/opentok/opentok-shim-by-dyte",title:"Migrate from OpenTok to Dyte with Shim",description:"The OpenTok Shim by Dyte is a package that allows you to migrate your video calling applications from OpenTok to Dyte infrastructure.",source:"@site/docs/archive/develop/etc/opentok/opentok-shim-by-dyte.mdx",sourceDirName:"develop/etc/opentok",slug:"/develop/etc/opentok/opentok-shim-by-dyte",permalink:"/archive/develop/etc/opentok/opentok-shim-by-dyte",draft:!1,tags:[],version:"current",lastUpdatedAt:1693223168,formattedLastUpdatedAt:"2023\ub144 8\uc6d4 28\uc77c",sidebarPosition:2,frontMatter:{title:"Migrate from OpenTok to Dyte with Shim",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Concepts: Media",permalink:"/archive/develop/etc/opentok/concept-media-opentok"},next:{title:"Quickstart",permalink:"/archive/android"}},p={},u=[{value:"Start migrating from OpenTok to Dyte with Shim",id:"start-migrating-from-opentok-to-dyte-with-shim",level:2},{value:"Usage",id:"usage",level:2},{value:"Connection",id:"connection",level:3},{value:"Listen for the events",id:"listen-for-the-events",level:3}],d={toc:u};function m(e){var{components:t}=e,n=a(e,["components"]);return(0,o.kt)("wrapper",i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),o.forEach((function(t){r(e,t,n[t])}))}return e}({},d,n),{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The OpenTok ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Shim_(computing)"},"Shim")," by Dyte is a package that allows you to migrate your video calling applications from ",(0,o.kt)("a",{parentName:"p",href:"https://tokbox.com/developer/"},"OpenTok")," to Dyte infrastructure."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Dyte provides a set of shim libraries that serve as seamless replacements for the Vonage video APIs (previously known as Tokbox OpenTok). These shims serve as a fundamental building block for migrating your application from OpenTok to Dyte infrastructure."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"@dytesdk/opentok-shim")," package serves as a wrapper over the Dyte SDK with an external API that is fully compatible with Opentok JS. As a drop-in replacement for Opentok JS, it can handle most of the methods and events that are present in the original library.")),(0,o.kt)("p",null,"Please ",(0,o.kt)("a",{parentName:"p",href:"https://dyte.io/contact"},"contact us")," for any help or support with the migration."),(0,o.kt)("h2",{id:"start-migrating-from-opentok-to-dyte-with-shim"},"Start migrating from OpenTok to Dyte with Shim"),(0,o.kt)("p",null,"To get started with the Dyte Shim for OpenTok, do the following:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Install the shim from the NPM registry using the following command:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"npm",npm:!0},"npm install @dytesdk/opentok-shim\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Once you have installed the package, you can use it in your project by importing it using the following statement:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'import * as OT from "@dytesdk/opentok-shim";\n')),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@dytesdk/opentok-shim")," shares the same API as the OpenTok video SDK. You can use most of the methods that are supported by it."),(0,o.kt)("p",null,"Here are a few examples."),(0,o.kt)("h3",{id:"connection"},"Connection"),(0,o.kt)("p",null,"To create a connection to an OpenTok session, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"OT.initSession()")," method. This method takes the following arguments:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Token"),(0,o.kt)("li",{parentName:"ul"},"Session ID")),(0,o.kt)("p",null,"You can obtain Dyte authentication token ",(0,o.kt)("inlineCode",{parentName:"p"},"<DYTE-AUTH-TOKEN>")," using the ",(0,o.kt)("a",{parentName:"p",href:"/api#/operations/add_participant"},"Add a Participant API"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const token = "<DYTE-AUTH-TOKEN>";\nconst sessionId = "";\nconst session = OT.initSession(token, sessionId);\n')),(0,o.kt)("h3",{id:"listen-for-the-events"},"Listen for the events"),(0,o.kt)("p",null,"This establishes an OpenTok session and listens for events such as ",(0,o.kt)("inlineCode",{parentName:"p"},"streamCreated"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"connectionCreated"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"connectionDestroyed"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'session.on("streamCreated", function streamCreated(event) {\n  console.log("[streamCreated] index.ts: ", event.stream);\n  session.subscribe(\n    event.stream,\n    "subscriber",\n    {\n      insertMode: "append",\n      width: "100%",\n      height: "100%",\n    },\n    handleError\n  );\n  // }\n});\n\nlet connections: OT.Connection[] = [];\nsession.on("connectionCreated", (connectionCreatedEvent) => {\n  console.log("session connectionCreatedEvent: ", connectionCreatedEvent);\n  connections.push(connectionCreatedEvent.connection);\n\n  if (\n    connections.find(\n      (connection) =>\n        connection.connectionId ===\n        connectionCreatedEvent.connection.connectionId\n    )\n  ) {\n    console.log("connection already exists");\n    return;\n  }\n  connections.push(connectionCreatedEvent.connection);\n});\n\nsession.on("connectionDestroyed", (connectionDestroyedEvent) => {\n  console.log("session connectionDestroyedEvent: ", connectionDestroyedEvent);\n  connections = connections.filter(\n    (connection) =>\n      connection.connectionId !==\n      connectionDestroyedEvent.connection.connectionId\n  );\n});\n\n')))}m.isMDXComponent=!0}}]);